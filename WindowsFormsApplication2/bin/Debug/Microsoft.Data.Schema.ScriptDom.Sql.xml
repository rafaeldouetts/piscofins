<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Data.Schema.ScriptDom.Sql</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AddAlterFullTextIndexAction"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AddAlterFullTextIndexAction.#ctor"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AddAlterFullTextIndexAction.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AddAlterFullTextIndexAction.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AddAlterFullTextIndexAction.Columns"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AddAlterFullTextIndexAction.WithNoPopulation"></member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AddFileSpec">
      <summary>Represents a single file in an ADD FILE FROM clause in an ALTER ASSEMBLY statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AddFileSpec.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AddFileSpec" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AddFileSpec.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AddFileSpec.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AddFileSpec.File">
      <summary>Gets or sets a client file specifier or file bits.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Expression" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AddFileSpec.FileName">
      <summary>Gets or sets an optional file name.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Literal" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AddSignatureStatement">
      <summary>This class represents ADD SIGNATURE statements.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AddSignatureStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AddSignatureStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AddSignatureStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AddSignatureStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AdhocDataSource"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AdhocDataSource.#ctor"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AdhocDataSource.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AdhocDataSource.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AdhocDataSource.InitString"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AdhocDataSource.ProviderName"></member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AdhocTableSource">
      <summary>This class represents the OPENDATASOURCE (ad hoc) table source.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AdhocTableSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AdhocTableSource" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AdhocTableSource.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AdhocTableSource.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AdhocTableSource.DataSource"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AdhocTableSource.Object">
      <summary>Gets or sets the object; can be either SchemaObjectName or Literal (string).</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AffinityKind">
      <summary>Enumeration specifying affinity kind.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AffinityKind.NotSpecified">
      <summary>Kind is NotSpecified</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AffinityKind.None">
      <summary>Kind is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AffinityKind.Integer">
      <summary>Kind is Integer</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AffinityKind.Admin">
      <summary>Kind is Admin</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlgorithmKeyOption">
      <summary>This class represents the ALGORITHM option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlgorithmKeyOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlgorithmKeyOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlgorithmKeyOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlgorithmKeyOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlgorithmKeyOption.Algorithm">
      <summary>Specifies the EncryptionAlgorithm to use.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionAlgorithm" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterAction">
      <summary>Enumeration specifying the ALTER action.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterAction.None">
      <summary>Action is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterAction.Add">
      <summary>Action is Add</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterAction.Drop">
      <summary>Action is Drop</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterApplicationRoleStatement">
      <summary>This class represents the ALTER APPLICATION ROLE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterApplicationRoleStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterApplicationRoleStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterApplicationRoleStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterApplicationRoleStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterAssemblyStatement">
      <summary>This class represents the ALTER ASSEMBLY statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterAssemblyStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterAssemblyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterAssemblyStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterAssemblyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterAssemblyStatement.AddFiles">
      <summary>Gets a list of files specified in the ADD FILE FROM clause.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterAssemblyStatement.DropFiles">
      <summary>Gets files specified in the DROP FILE clause.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterAssemblyStatement.IsDropAll">
      <summary>Gets or sets whether DROP FILE ALL was specified.</summary>
      <returns>Returns True if DROP FILE ALL was specified; otherwise, False.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterAssemblyStatement.UncheckedData">
      <summary>Gets or sets whether the UNCHECKED DATA option was specified.</summary>
      <returns>Returns True if the UNCHECKED DATA option was specified; otherwise, False.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterAssemblyStatement.Visibility">
      <summary>Gets or sets the state of visibility WITH option.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OptionState" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterAsymmetricKeyStatement">
      <summary>Represents an ALTER ASYMMETRIC KEY statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterAsymmetricKeyStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterAsymmetricKeyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterAsymmetricKeyStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterAsymmetricKeyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterAsymmetricKeyStatement.AttestedBy">
      <summary>Gets or sets a string literal in case of ATTESTED BY option.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterAsymmetricKeyStatement.DecryptionPassword">
      <summary>Gets or sets a decryption password.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterAsymmetricKeyStatement.EncryptionPassword">
      <summary>Gets or sets an encryption password.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterAsymmetricKeyStatement.Kind">
      <summary>Gets or sets a value specifying how the asymmetric key was altered.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterCertificateStatementKind" /> value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterAsymmetricKeyStatement.Name">
      <summary>Gets or sets an identifier.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Identifier" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterAuthorizationStatement">
      <summary>Represents an ALTER AUTHORIZATION statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterAuthorizationStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterAuthorizationStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterAuthorizationStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterAuthorizationStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterAuthorizationStatement.PrincipalName">
      <summary>Gets or sets the principal name identifier.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Identifier" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterAuthorizationStatement.SecurityTargetObject">
      <summary>Gets or sets a security target object.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SecurityTargetObject" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterAuthorizationStatement.ToSchemaOwner">
      <summary>Gets or sets whether SCHEMA OWNER is used.</summary>
      <returns>Returns true if SCHEMA OWNER is used; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterBrokerPriorityStatement">
      <summary>Represents the ALTER BROKER PRIORITY statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterBrokerPriorityStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterBrokerPriorityStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterBrokerPriorityStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterBrokerPriorityStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterCertificateStatement">
      <summary>Represents an ALTER CERTIFICATE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterCertificateStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterCertificateStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterCertificateStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterCertificateStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterCertificateStatement.AttestedBy">
      <summary>Gets or sets a string literal in case of ATTESTED BY option.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterCertificateStatement.Kind">
      <summary>Gets or sets a value that specifies how the certificate was altered.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterCertificateStatementKind" /> value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterCertificateStatementKind">
      <summary>Enumeration specifying the alter certificate statement kind.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterCertificateStatementKind.None">
      <summary>Value is 0</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterCertificateStatementKind.RemovePrivateKey">
      <summary>Value is 1</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterCertificateStatementKind.RemoveAttestedOption">
      <summary>Value is 2</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterCertificateStatementKind.WithPrivateKey">
      <summary>Value is 3</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterCertificateStatementKind.WithActiveForBeginDialog">
      <summary>Value is 4</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterCertificateStatementKind.AttestedBy">
      <summary>Value is 5</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterCreateEndpointStatementBase">
      <summary>Represents the common part of CREATE and ALTER ENDPOINT statements.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterCreateEndpointStatementBase.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterCreateEndpointStatementBase" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterCreateEndpointStatementBase.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterCreateEndpointStatementBase.Affinity">
      <summary>Gets or sets an optional affinity clause.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EndpointAffinity" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterCreateEndpointStatementBase.EndpointType">
      <summary>Gets or sets an endpoint type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EndpointType" /> value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterCreateEndpointStatementBase.Name">
      <summary>Gets or sets an endpoint name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterCreateEndpointStatementBase.PayloadOptions">
      <summary>Gets a list of payload options for this endpoint.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterCreateEndpointStatementBase.Protocol">
      <summary>Gets or sets an endpoint protocol.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocol" /> value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterCreateEndpointStatementBase.ProtocolOptions">
      <summary>Gets a list of protocol options for this endpoint.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterCreateEndpointStatementBase.State">
      <summary>Gets or sets the endpoint state.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EndpointState" /> value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterCreateServiceStatementBase">
      <summary>Represents a CREATE SERVICE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterCreateServiceStatementBase.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterCreateServiceStatementBase" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterCreateServiceStatementBase.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterCreateServiceStatementBase.Name">
      <summary>Gets or sets the service name identifier.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterCreateServiceStatementBase.QueueName">
      <summary>Gets or sets the queue name (with optional schema name).</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterCreateServiceStatementBase.ServiceContracts">
      <summary>Gets a list of optional service contract references.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterCredentialStatement">
      <summary>Represents an ALTER CREDENTIAL statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterCredentialStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterCredentialStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterCredentialStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterCredentialStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterCryptographicProviderStatement">
      <summary>Represents the ALTER CRYPTOGRAPHIC PROVIDER statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterCryptographicProviderStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterCryptographicProviderStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterCryptographicProviderStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterCryptographicProviderStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterCryptographicProviderStatement.File">
      <summary>Gets or sets the cryptographic provider file.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterCryptographicProviderStatement.Name">
      <summary>Gets or sets the name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterCryptographicProviderStatement.Option">
      <summary>Gets or sets the option type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EnableDisableOptionType" /> value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseAddFileGroupStatement"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseAddFileGroupStatement.#ctor"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseAddFileGroupStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseAddFileGroupStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseAddFileGroupStatement.ContainsFileStream"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseAddFileGroupStatement.FileGroup"></member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseAddFileStatement">
      <summary>Adds a file case from ALTER DATABASE.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseAddFileStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseAddFileStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseAddFileStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseAddFileStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseAddFileStatement.FileDeclarations">
      <summary>Gets a list of files to add to the database.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseAddFileStatement.FileGroup"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseAddFileStatement.IsLog">
      <summary>Gets or sets whether we are adding log files.</summary>
      <returns>Returns true if we are adding log files, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseAuditSpecificationStatement">
      <summary>Alters a database audit specification.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseAuditSpecificationStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseAuditSpecificationStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseAuditSpecificationStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseAuditSpecificationStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseCollateStatement">
      <summary>Alters the COLLATE case from ALTER DATABASE.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseCollateStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseCollateStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseCollateStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseCollateStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseCollateStatement.Collation">
      <summary>Gets or sets a collation identifier.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseEncryptionKeyStatement">
      <summary>Alters the database encryption key.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseEncryptionKeyStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseEncryptionKeyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseEncryptionKeyStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseEncryptionKeyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseEncryptionKeyStatement.Regenerate">
      <summary>Gets or sets whether to regenerate.</summary>
      <returns>Returns True if should regenerate; otherwise, False.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseModifyFileGroupStatement"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseModifyFileGroupStatement.#ctor"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseModifyFileGroupStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseModifyFileGroupStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseModifyFileGroupStatement.FileGroup"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseModifyFileGroupStatement.MakeDefault"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseModifyFileGroupStatement.NewFileGroupName"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseModifyFileGroupStatement.Termination"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseModifyFileGroupStatement.UpdatabilityOption"></member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseModifyFileStatement">
      <summary>Used to modify the file case from an ALTER DATABASE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseModifyFileStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseModifyFileStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseModifyFileStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseModifyFileStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseModifyFileStatement.FileDeclaration">
      <summary>Gets or sets the file to modify.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.FileDeclaration" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseModifyNameStatement">
      <summary>Used to modify the name case from an ALTER DATABASE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseModifyNameStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseModifyNameStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseModifyNameStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseModifyNameStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseModifyNameStatement.NewDatabaseName">
      <summary>Gets or sets a new database name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOption">
      <summary>Represents a single option in an ALTER DATABASE statement, SET case.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOption.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind">
      <summary>Enumeration specifies kinds of alter database options.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.Online">
      <summary>Value is 0</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.Offline">
      <summary>Value is 1</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.Emergency">
      <summary>Value is 2</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.SingleUser">
      <summary>Value is 3</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.RestrictedUser">
      <summary>Value is 4</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.MultiUser">
      <summary>Value is 5</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.ReadOnly">
      <summary>Value is 6</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.ReadWrite">
      <summary>Value is 7</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.EnableBroker">
      <summary>Value is 8</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.DisableBroker">
      <summary>Value is 9</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.NewBroker">
      <summary>Value is 10</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.ErrorBrokerConversations">
      <summary>Value is 11</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.DBChaining">
      <summary>Value is 12</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.Trustworthy">
      <summary>Value is 13</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.CursorCloseOnCommit">
      <summary>Value is 14</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.AutoClose">
      <summary>Value is 15</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.AutoCreateStatistics">
      <summary>Value is 16</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.AutoShrink">
      <summary>Value is 17</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.AutoUpdateStatistics">
      <summary>Value is 18</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.AutoUpdateStatisticsAsync">
      <summary>Value is 19</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.AnsiNullDefault">
      <summary>Value is 20</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.AnsiNulls">
      <summary>Value is 21</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.AnsiPadding">
      <summary>Value is 22</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.AnsiWarnings">
      <summary>Value is 23</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.ArithAbort">
      <summary>Value is 24</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.ConcatNullYieldsNull">
      <summary>Value is 25</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.NumericRoundAbort">
      <summary>Value is 26</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.QuotedIdentifier">
      <summary>Value is 27</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.RecursiveTriggers">
      <summary>Value is 28</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.TornPageDetection">
      <summary>Value is 29</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.DateCorrelationOptimization">
      <summary>Value is 30</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.AllowSnapshotIsolation">
      <summary>Value is 31</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.ReadCommittedSnapshot">
      <summary>Value is 32</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.Encryption">
      <summary>Value is 33</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.HonorBrokerPriority">
      <summary>Value is 34</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.VarDecimalStorageFormat">
      <summary />
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind.SupplementalLogging">
      <summary />
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseRebuildLogStatement">
      <summary>Used to rebuild a log case from an ALTER DATABASE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseRebuildLogStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseRebuildLogStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseRebuildLogStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseRebuildLogStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseRebuildLogStatement.FileDeclaration">
      <summary>Gets or sets an optional file declaration.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.FileDeclaration" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseRemoveFileGroupStatement"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseRemoveFileGroupStatement.#ctor"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseRemoveFileGroupStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseRemoveFileGroupStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseRemoveFileGroupStatement.FileGroup"></member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseRemoveFileStatement">
      <summary>Used to remove the file case from an ALTER DATABASE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseRemoveFileStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseRemoveFileStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseRemoveFileStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseRemoveFileStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseRemoveFileStatement.File">
      <summary>Gets or sets the file to be removed from the database.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseSetStatement">
      <summary>Represents the SET case in an ALTER DATABASE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseSetStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseSetStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseSetStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseSetStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseSetStatement.Options">
      <summary>Gets a list of options specified in this statement.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseSetStatement.Termination">
      <summary>Gets or sets optional termination options.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseTermination" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseStatement">
      <summary>Represents an ALTER DATABASE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseStatement.DatabaseName">
      <summary>Gets or sets the name of the database to alter.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseTermination">
      <summary>Contains termination information.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseTermination.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseTermination" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseTermination.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseTermination.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseTermination.ImmediateRollback">
      <summary>Gets or sets whether ROLLBACK IMMEDIATE is specified.</summary>
      <returns>Returns true if ROLLBACK IMMEDIATE was specified, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseTermination.NoWait">
      <summary>Gets or sets whether NO_WAIT is specified.</summary>
      <returns>Returns true if NO_WAIT was specified, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseTermination.RollbackAfter">
      <summary>Gets or sets the number of seconds before Rollback occurs.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterEndpointStatement">
      <summary>Represents a CREATE ENDPOINT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterEndpointStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterEndpointStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterEndpointStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterEndpointStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterEventSessionStatement">
      <summary>Represents the ALTER EVENT SESSION statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterEventSessionStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterEventSessionStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterEventSessionStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterEventSessionStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterEventSessionStatement.DropEventDeclarations">
      <summary>Gets a list of drop event declarations.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterEventSessionStatement.DropTargetDeclarations">
      <summary>Gets a list of drop target declarations.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterEventSessionStatement.StatementType"></member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterEventSessionStatementType">
      <summary>Enumeration specifying the type of alter event session statement.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterEventSessionStatementType.Unknown">
      <summary>Value is 0</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterEventSessionStatementType.AddEventDeclarationOptionalSessionOptions">
      <summary>Value is 1</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterEventSessionStatementType.DropEventSpecificationOptionalSessionOptions">
      <summary>Value is 2</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterEventSessionStatementType.AddTargetDeclarationOptionalSessionOptions">
      <summary>Value is 3</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterEventSessionStatementType.DropTargetSpecificationOptionalSessionOptions">
      <summary>Value is 4</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterEventSessionStatementType.RequiredSessionOptions">
      <summary>Value is 5</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterEventSessionStatementType.AlterStateIsStart">
      <summary>Value is 6</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterEventSessionStatementType.AlterStateIsStop">
      <summary>Value is 7</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextCatalogAction"></member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextCatalogAction.None">
      <summary />
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextCatalogAction.Rebuild">
      <summary />
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextCatalogAction.Reorganize">
      <summary />
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextCatalogAction.AsDefault">
      <summary />
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextCatalogStatement"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextCatalogStatement.#ctor"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextCatalogStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextCatalogStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextCatalogStatement.Action"></member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextIndexAction"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextIndexAction.#ctor"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextIndexAction.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextIndexStatement"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextIndexStatement.#ctor"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextIndexStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextIndexStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextIndexStatement.Action"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextIndexStatement.OnName"></member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextStopListStatement"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextStopListStatement.#ctor"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextStopListStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextStopListStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextStopListStatement.Action"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextStopListStatement.Name"></member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterFunctionStatement">
      <summary>Represents the ALTER FUNCTION statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterFunctionStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterFunctionStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterFunctionStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterFunctionStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterIndexStatement">
      <summary>Represents the ALTER INDEX statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterIndexStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterIndexStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterIndexStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterIndexStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterIndexStatement.All">
      <summary>Gets or sets whether the All keyword is used.</summary>
      <returns>Returns true if the All keyword is used, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterIndexStatement.AlterIndexType">
      <summary>Gets or sets the value describing the index alteration.</summary>
      <returns>Returns the value of a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterIndexType" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterIndexStatement.Partition">
      <summary>Gets or sets the expression that shows the partition.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.PartitionSpecifier" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterIndexType">
      <summary>Specifies the index alteration type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterIndexType.Rebuild">
      <summary>Alteration is rebuild</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterIndexType.Disable">
      <summary>Alteration is disable</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterIndexType.Reorganize">
      <summary>Alteration is reorganize</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterIndexType.Set">
      <summary>Alteration is set</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginAddDropCredentialStatement">
      <summary>Represents an ALTER LOGIN statement, which adds or drops a credential name.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginAddDropCredentialStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginAddDropCredentialStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginAddDropCredentialStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginAddDropCredentialStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginAddDropCredentialStatement.CredentialName">
      <summary>Gets or sets the EKM provider credential to add to or drop from login.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginAddDropCredentialStatement.IsAdd">
      <summary>Returns whether ADD CREDENTIAL is specified.</summary>
      <returns>Returns true if ADD CREDENTIAL was specified, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginEnableDisableStatement">
      <summary>Represents an ALTER LOGIN statement, which enables or disables login.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginEnableDisableStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginEnableDisableStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginEnableDisableStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginEnableDisableStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginEnableDisableStatement.IsEnable">
      <summary>Gets or sets whether ENABLED is specified.</summary>
      <returns>Returns true if ENABLE was specified, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginOptionsStatement">
      <summary>Represents an ALTER LOGIN statement, which alters options.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginOptionsStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginOptionsStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginOptionsStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginOptionsStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginOptionsStatement.Options">
      <summary>Gets a list of login options.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginStatement">
      <summary>Represents an ALTER LOGIN statement, which changes the properties of a SQL Server login account.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginStatement.Name">
      <summary>Gets or sets the login name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterMasterKeyOption">
      <summary>Specifies the master key alteration option.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterMasterKeyOption.None">
      <summary>Option is none</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterMasterKeyOption.Regenerate">
      <summary>Option is regenerate</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterMasterKeyOption.ForceRegenerate">
      <summary>Option is force regenerate</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterMasterKeyOption.AddEncryptionByServiceMasterKey">
      <summary>Option is add encryption by service master key</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterMasterKeyOption.AddEncryptionByPassword">
      <summary>Option is add encryption by password</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterMasterKeyOption.DropEncryptionByServiceMasterKey">
      <summary>Option is drop encryption by service master key</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterMasterKeyOption.DropEncryptionByPassword">
      <summary>Option is drop encryption by password</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterMasterKeyStatement">
      <summary>Represents the ALTER MASTER KEY statement, which changes the properties of a database master key.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterMasterKeyStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterMasterKeyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterMasterKeyStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterMasterKeyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterMasterKeyStatement.Option">
      <summary>Gets or sets the value describing the master key alteration.</summary>
      <returns>Returns the value of a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterMasterKeyOption" /> enumeration.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterMessageTypeStatement">
      <summary>Represents an ALTER MESSAGE TYPE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterMessageTypeStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterMessageTypeStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterMessageTypeStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterMessageTypeStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterPartitionFunctionStatement">
      <summary>Represents an ALTER PARTITION FUNCTION statement, which alters a partition function by splitting or merging its boundary values.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterPartitionFunctionStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterPartitionFunctionStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterPartitionFunctionStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterPartitionFunctionStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterPartitionFunctionStatement.Boundary">
      <summary>Gets or sets an optional boundary value.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterPartitionFunctionStatement.IsSplit">
      <summary>Gets or sets whether a function statement is splitting a range.</summary>
      <returns>Returns true if splitting a range, false if merging ranges.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterPartitionFunctionStatement.Name">
      <summary>Gets or sets the name of the function to alter.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterPartitionSchemeStatement">
      <summary>Represents an ALTER PARTITION SCHEME statement, which adds a file group to a partition scheme or alters the designation of the NEXT USED file group for the partition scheme.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterPartitionSchemeStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterPartitionSchemeStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterPartitionSchemeStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterPartitionSchemeStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterPartitionSchemeStatement.FileGroup"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterPartitionSchemeStatement.Name">
      <summary>Gets or sets the name of the partition scheme to alter.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterProcedureStatement">
      <summary>Represents the ALTER PROCEDURE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterProcedureStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterProcedureStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterProcedureStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterProcedureStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterQueueStatement">
      <summary>Represents the ALTER QUEUE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterQueueStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterQueueStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterQueueStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterQueueStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterRemoteServiceBindingStatement">
      <summary>Represents the ALTER REMOTE SERVICE BINDING statement, which changes the user associated with a remote service binding, or changes the anonymous authentication setting for the binding.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterRemoteServiceBindingStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterRemoteServiceBindingStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterRemoteServiceBindingStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterRemoteServiceBindingStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterResourceGovernorCommandType">
      <summary>Specifies the type of alter resource governor command.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterResourceGovernorCommandType.Unknown">
      <summary>Command is Unknown</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterResourceGovernorCommandType.Disable">
      <summary>Command is Disable</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterResourceGovernorCommandType.Reconfigure">
      <summary>Command is Reconfigure</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterResourceGovernorCommandType.ClassifierFunction">
      <summary />
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterResourceGovernorCommandType.ResetStatistics">
      <summary>Command is ResetStatistics</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterResourceGovernorStatement">
      <summary>Represents the ALTER RESOURCE GOVERNOR statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterResourceGovernorStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterResourceGovernorStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterResourceGovernorStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterResourceGovernorStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterResourceGovernorStatement.ClassifierFunction">
      <summary>Gets or sets the classification function specified by schema_name.function_name.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterResourceGovernorStatement.Command">
      <summary>Gets or sets the command type value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterResourceGovernorCommandType" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterResourcePoolStatement">
      <summary>Represents the ALTER RESOURCE POOL statement, which changes an existing Resource Governor resource pool configuration.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterResourcePoolStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterResourcePoolStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterResourcePoolStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterResourcePoolStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterRoleStatement">
      <summary>Represents the ALTER ROLE statement, which changes the name of a database role.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterRoleStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterRoleStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterRoleStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterRoleStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterRoleStatement.NewName">
      <summary>Gets or sets the new role name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterRouteStatement">
      <summary>Represents the ALTER ROUTE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterRouteStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterRouteStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterRouteStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterRouteStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterSchemaStatement">
      <summary>Represents the ALTER SCHEMA statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterSchemaStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterSchemaStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterSchemaStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterSchemaStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterSchemaStatement.Name">
      <summary>Gets or sets the name of a schema in the current database, into which the object will be moved.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterSchemaStatement.ObjectKind">
      <summary>Gets or sets the security object kind.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SecurityObjectKind" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterSchemaStatement.ObjectName">
      <summary>Gets or sets the one-part or two-part name of a schema-contained object to be moved into the schema.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterServerAuditSpecificationStatement">
      <summary>Alters the server audit specification, which alters a server audit specification object using the SQL Server Audit feature.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterServerAuditSpecificationStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterServerAuditSpecificationStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterServerAuditSpecificationStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterServerAuditSpecificationStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterServerAuditStatement">
      <summary>Represents the ALTER SERVER AUDIT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterServerAuditStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterServerAuditStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterServerAuditStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterServerAuditStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterServerAuditStatement.NewName">
      <summary>Gets or sets the new audit name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterServerConfigurationStatement">
      <summary>Represents the ALTER SERVER CONFIGURATION statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterServerConfigurationStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterServerConfigurationStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterServerConfigurationStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterServerConfigurationStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterServerConfigurationStatement.ProcessAffinity">
      <summary>Gets or sets the processor affinity for the statement.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterServerConfigurationStatement.ProcessAffinityRanges">
      <summary>Gets a list of ranges for the processor affinity of the statement being modeled.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterServiceMasterKeyOption">
      <summary>Specifies an alter service master key option.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterServiceMasterKeyOption.None">
      <summary>Option is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterServiceMasterKeyOption.Regenerate">
      <summary>Option is Regenerate</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterServiceMasterKeyOption.ForceRegenerate">
      <summary>Option is ForceRegenerate</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterServiceMasterKeyOption.WithOldAccount">
      <summary>Option is WithOldAccount</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterServiceMasterKeyOption.WithNewAccount">
      <summary>Option is WithNewAccount</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterServiceMasterKeyStatement">
      <summary>Represents the ALTER SERVICE MASTER KEY statement, which changes the service master key of an instance of SQL Server.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterServiceMasterKeyStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterServiceMasterKeyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterServiceMasterKeyStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterServiceMasterKeyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterServiceMasterKeyStatement.Account">
      <summary>Gets or sets the optional account name, in case of recover option.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterServiceMasterKeyStatement.Kind">
      <summary>Gets or sets a value that describes how the service master key is altered.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterServiceMasterKeyOption" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterServiceMasterKeyStatement.Password">
      <summary>Gets or sets the optional account password.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterServiceStatement">
      <summary>Represents the ALTER SERVICE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterServiceStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterServiceStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterServiceStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterServiceStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterSymmetricKeyStatement">
      <summary>Represents the ALTER SYMMETRIC KEY statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterSymmetricKeyStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterSymmetricKeyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterSymmetricKeyStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterSymmetricKeyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterSymmetricKeyStatement.IsAdd">
      <summary>Returns whether adding encryption mechanisms.</summary>
      <returns>Returns true if adding encryption mechanisms, false if dropping.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAddTableElementStatement">
      <summary>Adds a table element specialization of an ALTER TABLE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAddTableElementStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAddTableElementStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAddTableElementStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAddTableElementStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAddTableElementStatement.ColumnDefinitions">
      <summary>Gets a list of column definitions.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAddTableElementStatement.ExistingRowsCheckEnforcement">
      <summary>Gets or sets whether the data in the table is validated against a newly added or re-enabled FOREIGN KEY or CHECK constraint.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ConstraintEnforcement" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAddTableElementStatement.TableConstraints">
      <summary>Gets a list of table constraints.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAlterColumnOption">
      <summary>Specifies table and column alteration options.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAlterColumnOption.NoOptionDefined">
      <summary>Alteration is NoOptionDefined</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAlterColumnOption.AddRowGuidCol">
      <summary />
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAlterColumnOption.DropRowGuidCol">
      <summary />
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAlterColumnOption.Null">
      <summary>Alteration is Null</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAlterColumnOption.NotNull">
      <summary>Alteration is NotNull</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAlterColumnOption.AddPersisted">
      <summary>Alteration is AddPersisted</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAlterColumnOption.DropPersisted">
      <summary>Alteration is DropPersisted</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAlterColumnOption.AddNotForReplication">
      <summary>Alteration is AddNotForReplication</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAlterColumnOption.DropNotForReplication">
      <summary>Alteration is DropNotForReplication</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAlterColumnOption.AddSparse">
      <summary>Alteration is AddSparse</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAlterColumnOption.DropSparse">
      <summary>Alteration is DropSparse</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAlterColumnStatement">
      <summary>Represents an alter column specialization of an ALTER TABLE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAlterColumnStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAlterColumnStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAlterColumnStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAlterColumnStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAlterColumnStatement.AlterTableAlterColumnOption">
      <summary>Gets or sets the table and column alteration options value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAlterColumnOption" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAlterColumnStatement.Collation">
      <summary>Gets or sets the collation identifier.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAlterColumnStatement.ColumnIdentifier">
      <summary>Gets or sets the column identifier.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAlterColumnStatement.DataType">
      <summary>Gets or sets the data type of the column.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DataType" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAlterColumnStatement.StorageOptions">
      <summary>Gets or sets column storage options.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ColumnStorageOptions" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableChangeTrackingModificationStatement">
      <summary>Modifies change tracking for a table.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableChangeTrackingModificationStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableChangeTrackingModificationStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableChangeTrackingModificationStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableChangeTrackingModificationStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableChangeTrackingModificationStatement.IsEnable">
      <summary>Gets or sets whether the statement enables change tracking.</summary>
      <returns>Returns true if the statement enables change tracking, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableChangeTrackingModificationStatement.TrackColumnsUpdated">
      <summary>Gets or sets whether the Database Engine tracks which change-tracked columns were updated.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OptionState" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableConstraintModificationStatement">
      <summary>Defines modifications to a table constraint.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableConstraintModificationStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableConstraintModificationStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableConstraintModificationStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableConstraintModificationStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableConstraintModificationStatement.All">
      <summary>Gets or sets whether the modification is for all constraints.</summary>
      <returns>Returns true if the modification is for all constraints, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableConstraintModificationStatement.ConstraintEnforcement">
      <summary>Gets or sets the constraint enforcement value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ConstraintEnforcement" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableConstraintModificationStatement.ConstraintNames">
      <summary>Gets a list of names of constraints to be modified.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableConstraintModificationStatement.ExistingRowsCheckEnforcement">
      <summary>Gets or sets whether the data in the table is or is not validated against a newly added or re-enabled FOREIGN KEY or CHECK constraint.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ConstraintEnforcement" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableDropTableElement">
      <summary>Represents individual elements that can be used in an alter table drop statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableDropTableElement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableDropTableElement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableDropTableElement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableDropTableElement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableDropTableElement.DropClusteredConstraintOptions">
      <summary>Gets a list of the drop clustered constraint options.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableDropTableElement.Name">
      <summary>Gets or sets a table element name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableDropTableElement.TableElementType">
      <summary>Gets or sets a table element type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TableElementType" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableDropTableElementStatement">
      <summary>Represents drop table element specialization of the ALTER TABLE statement. Contains a list of names of columns and constraints to be dropped.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableDropTableElementStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableDropTableElementStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableDropTableElementStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableDropTableElementStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableDropTableElementStatement.AlterTableDropTableElements">
      <summary>Gets a list of the dropped table elements.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableRebuildStatement">
      <summary>Rebuilds indices on a table.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableRebuildStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableRebuildStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableRebuildStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableRebuildStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableRebuildStatement.IndexOptions">
      <summary>Gets a list of index options.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableRebuildStatement.Partition">
      <summary>Gets or sets a partition specifier.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.PartitionSpecifier" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableSetStatement">
      <summary>Changes table options for a table.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableSetStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableSetStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableSetStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableSetStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableSetStatement.Options">
      <summary>Gets a list of table options to be set.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableStatement">
      <summary>Represents the ALTER TABLE statement base class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableStatement.SchemaObjectName">
      <summary>Gets or sets the schema object name. This can be, at most, a two-part name.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableSwitchStatement">
      <summary>Represents switch specialization of the ALTER TABLE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableSwitchStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableSwitchStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableSwitchStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableSwitchStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableSwitchStatement.SourcePartitionNumber">
      <summary>Gets or sets the source partition number.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Expression" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableSwitchStatement.TargetPartitionNumber">
      <summary>Gets or sets the target partition number.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Expression" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableSwitchStatement.TargetTable">
      <summary>Gets or sets the target table name.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableTriggerModificationStatement">
      <summary>Defines the modifications to a trigger on a table.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableTriggerModificationStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableTriggerModificationStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableTriggerModificationStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableTriggerModificationStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableTriggerModificationStatement.All">
      <summary>Gets or sets whether the modification is for all triggers.</summary>
      <returns>Returns true if the modification is for all triggers, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableTriggerModificationStatement.TriggerEnforcement">
      <summary>Gets or sets the new enforcement option on the trigger.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TriggerEnforcement" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterTableTriggerModificationStatement.TriggerNames">
      <summary>Gets a list of names of triggers to be modified.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterTriggerStatement">
      <summary>Represents the ALTER TRIGGER statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTriggerStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterTriggerStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTriggerStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterTriggerStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterUserStatement">
      <summary>Represents the ALTER USER statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterUserStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterUserStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterUserStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterUserStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterViewStatement">
      <summary>Represents the ALTER VIEW statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterViewStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterViewStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterViewStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterViewStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterWorkloadGroupStatement">
      <summary>Represents the ALTER WORKLOAD GROUP statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterWorkloadGroupStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterWorkloadGroupStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterWorkloadGroupStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterWorkloadGroupStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterXmlSchemaCollectionStatement">
      <summary>Represents the ALTER XML SCHEMA COLLECTION statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterXmlSchemaCollectionStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterXmlSchemaCollectionStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterXmlSchemaCollectionStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AlterXmlSchemaCollectionStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterXmlSchemaCollectionStatement.Expression">
      <summary>Gets or sets the expression that will be added to the collection.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Expression" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AlterXmlSchemaCollectionStatement.Name">
      <summary>Gets or sets a collection name.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ApplicationRoleOption">
      <summary>Represents the application role option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ApplicationRoleOption.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ApplicationRoleOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ApplicationRoleOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ApplicationRoleOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ApplicationRoleOption.ApplicationRoleOptionType">
      <summary>Gets or sets an application role option type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ApplicationRoleOptionType" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ApplicationRoleOption.Value">
      <summary>Gets or sets the value for the option.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ApplicationRoleOptionType">
      <summary>Specifies the application role option type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ApplicationRoleOptionType.Name">
      <summary>Type is Name</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ApplicationRoleOptionType.DefaultSchema">
      <summary>Type is DefaultSchema</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ApplicationRoleOptionType.Login">
      <summary>Type is Login</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ApplicationRoleOptionType.Password">
      <summary>Type is Password</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ApplicationRoleStatement">
      <summary>Represents the APPLICATION ROLE statement base.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ApplicationRoleStatement.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ApplicationRoleStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ApplicationRoleStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ApplicationRoleStatement.ApplicationRoleOptions">
      <summary>Gets a list of application role options.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ApplicationRoleStatement.Name">
      <summary>Gets or sets the application role name.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Identifier" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AssemblyEncryptionSource">
      <summary>Represents a reference to an assembly containing a key or a certificate.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AssemblyEncryptionSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AssemblyEncryptionSource" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AssemblyEncryptionSource.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AssemblyEncryptionSource.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AssemblyEncryptionSource.Assembly">
      <summary>Gets or sets the assembly name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AssemblyName">
      <summary>Represents CLR assembly names.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AssemblyName.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AssemblyName" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AssemblyName.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AssemblyName.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AssemblyName.ClassName">
      <summary>Gets or sets the class name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AssemblyName.Name">
      <summary>Gets or sets the assembly name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AssemblyStatement">
      <summary>Represents common parts in CREATE and ALTER ASSEMBLY statements.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AssemblyStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AssemblyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AssemblyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AssemblyStatement.Name">
      <summary>Gets or sets the assembly name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AssemblyStatement.Parameters">
      <summary>Gets a list of either the client assembly specifier or the assembly bits.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AssemblyStatement.PermissionSetOption">
      <summary>Gets or sets the permission set option value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.PermissionSetOption" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AssignmentKind">
      <summary>Specifies the kind of assignment.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AssignmentKind.Equals">
      <summary>Assignment is Equals</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AssignmentKind.AddEquals">
      <summary>Assignment is AddEquals</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AssignmentKind.SubtractEquals">
      <summary />
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AssignmentKind.MultiplyEquals">
      <summary>Assignment is MultiplyEquals</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AssignmentKind.DivideEquals">
      <summary>Assignment is DivideEquals</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AssignmentKind.ModEquals">
      <summary>Assignment is ModEquals</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AssignmentKind.BitwiseAndEquals">
      <summary>Assignment is BitwiseAndEquals</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AssignmentKind.BitwiseOrEquals">
      <summary>Assignment is BitwiseOrEquals</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AssignmentKind.BitwiseXorEquals">
      <summary>Assignment is BitwiseXorEquals</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AssignmentSetClause">
      <summary>Represents the assignment set clause.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AssignmentSetClause.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AssignmentSetClause" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AssignmentSetClause.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AssignmentSetClause.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AssignmentSetClause.AssignmentKind">
      <summary>Gets or sets the assignment kind.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AssignmentKind" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AssignmentSetClause.NewValue">
      <summary>Gets or sets the expression that the variable and/or column will be set to.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AssignmentSetClause.Variable">
      <summary>Gets or sets the assignment variable. Optional, can be null.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AsymmetricKeyCreateLoginSource">
      <summary>Represents the certificate case in a CREATE LOGIN statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AsymmetricKeyCreateLoginSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AsymmetricKeyCreateLoginSource" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AsymmetricKeyCreateLoginSource.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AsymmetricKeyCreateLoginSource.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AsymmetricKeyCreateLoginSource.Credential">
      <summary>Gets or sets the optional credential name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AsymmetricKeyCreateLoginSource.Key">
      <summary>Gets or sets the key name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AttachMode">
      <summary>Specifies the attach mode.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AttachMode.None">
      <summary>Mode is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AttachMode.Attach">
      <summary>Mode is Attach</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AttachMode.AttachRebuildLog">
      <summary>Mode is AttachRebuildLog</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AttachMode.AttachForceRebuildLog">
      <summary>Mode is AttachForceRebuildLog</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AttachMode.Load">
      <summary>Mode is Load</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup">
      <summary>Specifies the audit action group.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.None">
      <summary>Group is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.SuccessfulLogin">
      <summary>Group is SuccessfulLogin</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.Logout">
      <summary>Group is Logout</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.ServerStateChange">
      <summary>Group is ServerStateChange</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.FailedLogin">
      <summary>Group is FailedLogin</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.LoginChangePassword">
      <summary>Group is LoginChangePassword</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.ServerRoleMemberChange">
      <summary>Group is ServerRoleMemberChange</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.ServerPrincipalImpersonation">
      <summary>Group is ServerPrincipalImpersonation</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.ServerObjectOwnershipChange">
      <summary>Group is ServerObjectOwnershipChange</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.DatabaseMirroringLogin">
      <summary>Group is DatabaseMirroringLogin</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.BrokerLogin">
      <summary>Group is BrokerLogin</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.ServerPermissionChange">
      <summary>Group is ServerPermissionChange</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.ServerObjectPermissionChange">
      <summary>Group is ServerObjectPermissionChange</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.ServerOperation">
      <summary>Group is ServerOperation</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.TraceChange">
      <summary>Group is TraceChange</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.ServerObjectChange">
      <summary>Group is ServerObjectChange</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.ServerPrincipalChange">
      <summary>Group is ServerPrincipalChange</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.DatabasePermissionChange">
      <summary>Group is DatabasePermissionChange</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.SchemaObjectPermissionChange">
      <summary>Group is SchemaObjectPermissionChange</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.DatabaseRoleMemberChange">
      <summary>Group is DatabaseRoleMemberChange</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.ApplicationRoleChangePassword">
      <summary>Group is ApplicationRoleChangePassword</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.SchemaObjectAccess">
      <summary>Group is SchemaObjectAccess</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.BackupRestore">
      <summary>Group is BackupRestore</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.Dbcc">
      <summary>Group is Dbcc</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.AuditChange">
      <summary>Group is AuditChange</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.DatabaseChange">
      <summary>Group is DatabaseChange</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.DatabaseObjectChange">
      <summary>Group is DatabaseObjectChange</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.DatabasePrincipalChange">
      <summary>Group is DatabasePrincipalChange</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.SchemaObjectChange">
      <summary>Group is SchemaObjectChange</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.DatabasePrincipalImpersonation">
      <summary>Group is DatabasePrincipalImpersonation</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.DatabaseObjectOwnershipChange">
      <summary>Group is DatabaseObjectOwnershipChange</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.DatabaseOwnershipChange">
      <summary>Group is DatabaseOwnershipChange</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.SchemaObjectOwnershipChange">
      <summary>Group is SchemaObjectOwnershipChange</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.DatabaseObjectPermissionChange">
      <summary>Group is DatabaseObjectPermissionChange</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.DatabaseOperation">
      <summary>Group is DatabaseOperation</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup.DatabaseObjectAccess">
      <summary>Group is DatabaseObjectAccess</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroupReference">
      <summary>Represents the audit group reference.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroupReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroupReference" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroupReference.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroupReference.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroupReference.Group">
      <summary>Gets or sets the audit action group.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroup" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionSpecification">
      <summary>Represents the audit action specification.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionSpecification.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionSpecification" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionSpecification.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionSpecification.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionSpecification.Actions">
      <summary>Gets a list of audit actions.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionSpecification.Principals">
      <summary>Gets a list of security principals.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AuditActionSpecification.TargetObject">
      <summary>Gets or sets the security target object.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SecurityTargetObject" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AuditFileOption">
      <summary>Represents a single option in case of FILE audit target.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AuditFileOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AuditFileOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AuditFileOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AuditGuidAuditOption">
      <summary>Represents the AUDIT_GUID option in a CREATE SERVER AUDIT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AuditGuidAuditOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AuditGuidAuditOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AuditGuidAuditOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AuditGuidAuditOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AuditGuidAuditOption.Guid">
      <summary>Gets or sets the audit option value.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AuditOption">
      <summary>Represents a single option in a CREATE/ALTER SERVER AUDIT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AuditOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AuditOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AuditOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationDetail">
      <summary>Represents the base class for the audit action specification and audit action group name.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationDetail.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationDetail" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationDetail.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationPart">
      <summary>Represents one ADD/DROP clause in an audit specification statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationPart.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationPart" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationPart.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationPart.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationPart.Details">
      <summary>Gets or sets audit specification details.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationDetail" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationPart.IsDrop">
      <summary>Gets or sets whether DROP is specified.</summary>
      <returns>Returns true if DROP was specified, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationStatement">
      <summary>Represents an AUDIT SPECIFICATION statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationStatement.AuditName">
      <summary>Gets or sets the audit name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationStatement.AuditState">
      <summary>Gets or sets whether audit was enabled or disabled by this statement.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OptionState" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationStatement.Parts">
      <summary>Gets a list of the individual parts of an audit specification.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationStatement.SpecificationName">
      <summary>Gets or sets the audit specification name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AuditTarget">
      <summary>Represents the audit target in a CREATE/ALTER SERVER AUDIT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AuditTarget.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AuditTarget" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AuditTarget.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AuditTarget.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AuditTarget.FileOptions">
      <summary>Gets a list of file options in case of FILE audit target.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AuditTarget.TargetKind">
      <summary>Gets or sets the audit target kind.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AuditTargetKind" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AuditTargetKind">
      <summary>Specifies types of alter indexes.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditTargetKind.File">
      <summary>Kind is File</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditTargetKind.ApplicationLog">
      <summary>Kind is ApplicationLog</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuditTargetKind.SecurityLog">
      <summary>Kind is SecurityLog</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationEndpointProtocolOption">
      <summary>Represents the AUTHENTICATION HTTP endpoint protocol option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationEndpointProtocolOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationEndpointProtocolOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationEndpointProtocolOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationEndpointProtocolOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationEndpointProtocolOption.AuthenticationTypes">
      <summary>Gets or sets the authentication types.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationTypes" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationPayloadOption">
      <summary>Represents the AUTHENTICATION payload option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationPayloadOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationPayloadOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationPayloadOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationPayloadOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationPayloadOption.Certificate">
      <summary>Gets or sets the certificate to use.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationPayloadOption.Protocol">
      <summary>Gets or sets the protocol to use.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationProtocol" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationPayloadOption.TryCertificateFirst">
      <summary>Gets or sets whether connect should first try the certificate before Windows Authentication.</summary>
      <returns>Returns true if connect should first try the certificate and then Windows Authentication, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationProtocol">
      <summary>Specifies the authentication protocol</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationProtocol.NotSpecified">
      <summary>Protocol is NotSpecified</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationProtocol.Windows">
      <summary>Protocol is Windows</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationProtocol.WindowsNtlm">
      <summary>Protocol is WindowsNtlm</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationProtocol.WindowsKerberos">
      <summary>Protocol is WindowsKerberos</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationProtocol.WindowsNegotiate">
      <summary>Protocol is WindowsNegotiate</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationTypes">
      <summary>Specifies authentication types.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationTypes.None">
      <summary>Type is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationTypes.Basic">
      <summary>Type is Basic</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationTypes.Digest">
      <summary>Type is Digest</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationTypes.Integrated">
      <summary>Type is Integrated</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationTypes.Ntlm">
      <summary>Type is Ntlm</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationTypes.Kerberos">
      <summary>Type is Kerberos</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.AutoCleanupChangeTrackingOptionDetail">
      <summary>Represents the AUTO_CLEANUP part of the CHANGE_TRACKING option in an ALTER DATABASE SET statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AutoCleanupChangeTrackingOptionDetail.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AutoCleanupChangeTrackingOptionDetail" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AutoCleanupChangeTrackingOptionDetail.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.AutoCleanupChangeTrackingOptionDetail.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.AutoCleanupChangeTrackingOptionDetail.IsOn">
      <summary>Gets or sets whether AUTO_CLEANUP is set to ON.</summary>
      <returns>Returns true if AUTO_CLEANUP was set to ON, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BackupCertificateStatement">
      <summary>Represents the BACKUP CERTIFICATE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BackupCertificateStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BackupCertificateStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BackupCertificateStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BackupCertificateStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BackupCertificateStatement.File">
      <summary>Gets or sets the file to save the certificate to.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BackupDatabaseStatement">
      <summary>Represents the BACKUP DATABASE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BackupDatabaseStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BackupDatabaseStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BackupDatabaseStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BackupDatabaseStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BackupDatabaseStatement.Files">
      <summary>Gets a list of the files or file groups to back up.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BackupMasterKeyStatement">
      <summary>Represents the BACKUP MASTER KEY statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BackupMasterKeyStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BackupMasterKeyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BackupMasterKeyStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BackupMasterKeyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BackupOption">
      <summary>Represents a single option in the BACKUP statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BackupOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BackupOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BackupOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BackupOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BackupOption.Option">
      <summary>Gets or sets the backup option kind.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BackupOption.Value">
      <summary>Gets or sets the option value.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind">
      <summary>Specifies the kind of backup operation.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.None">
      <summary>Kind is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.NoRecovery">
      <summary>Kind is NoRecovery</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.TruncateOnly">
      <summary>Kind is TruncateOnly</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.NoLog">
      <summary>Kind is NoLog</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.NoTruncate">
      <summary>Kind is NoTruncate</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.Unload">
      <summary>Kind is Unload</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.NoUnload">
      <summary>Kind is NoUnload</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.Rewind">
      <summary>Kind is Rewind</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.NoRewind">
      <summary>Kind is NoRewind</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.Format">
      <summary>Kind is Format</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.NoFormat">
      <summary>Kind is NoFormat</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.Init">
      <summary>Kind is Init</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.NoInit">
      <summary>Kind is NoInit</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.Skip">
      <summary>Kind is Skip</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.NoSkip">
      <summary>Kind is NoSkip</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.Restart">
      <summary>Kind is Restart</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.Stats">
      <summary>Kind is Stats</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.Differential">
      <summary>Kind is Differential</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.Snapshot">
      <summary>Kind is Snapshot</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.Checksum">
      <summary>Kind is Checksum</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.NoChecksum">
      <summary>Kind is NoChecksum</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.ContinueAfterError">
      <summary>Kind is ContinueAfterError</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.StopOnError">
      <summary>Kind is StopOnError</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.CopyOnly">
      <summary>Kind is CopyOnly</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.Standby">
      <summary>Kind is Standby</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.ExpireDate">
      <summary>Kind is ExpireDate</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.RetainDays">
      <summary>Kind is RetainDays</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.Name">
      <summary>Kind is Name</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.Description">
      <summary>Kind is Description</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.Password">
      <summary>Kind is Password</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.MediaName">
      <summary>Kind is MediaName</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.MediaDescription">
      <summary>Kind is MediaDescription</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.MediaPassword">
      <summary>Kind is MediaPassword</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.BlockSize">
      <summary>Kind is BlockSize</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.BufferCount">
      <summary>Kind is BufferCount</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.MaxTransferSize">
      <summary>Kind is MaxTransferSize</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.EnhancedIntegrity">
      <summary>Kind is EnhancedIntegrity</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.Compression">
      <summary />
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupOptionKind.NoCompression">
      <summary />
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BackupRestoreFileInfo">
      <summary>Represents information about files or file groups being backed up or restored.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BackupRestoreFileInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BackupRestoreFileInfo" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BackupRestoreFileInfo.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BackupRestoreFileInfo.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BackupRestoreFileInfo.ItemKind">
      <summary>Gets or sets the backup and restore item kind.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BackupRestoreItemKind" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BackupRestoreFileInfo.Items">
      <summary>Gets a list of files or file groups (if the read_write_filegroups kind was not specified).</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BackupRestoreItemKind">
      <summary>Specifies the kind of backup restore item.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupRestoreItemKind.None">
      <summary>Item is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupRestoreItemKind.Files">
      <summary>Item is Files</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupRestoreItemKind.FileGroups">
      <summary />
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupRestoreItemKind.Page">
      <summary>Item is Page</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BackupRestoreItemKind.ReadWriteFileGroups">
      <summary />
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BackupRestoreMasterKeyStatementBase">
      <summary>Represents the common part of BACKUP and RESTORE (SERVICE) MASTER KEY statements.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BackupRestoreMasterKeyStatementBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BackupRestoreMasterKeyStatementBase" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BackupRestoreMasterKeyStatementBase.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BackupRestoreMasterKeyStatementBase.File">
      <summary>Gets or sets the file to save to or load from the service master key.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BackupRestoreMasterKeyStatementBase.Password">
      <summary>Gets or sets the encryption or decryption password.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BackupServiceMasterKeyStatement">
      <summary>Represents the BACKUP SERVICE MASTER KEY statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BackupServiceMasterKeyStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BackupServiceMasterKeyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BackupServiceMasterKeyStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BackupServiceMasterKeyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BackupStatement">
      <summary>Represents the BACKUP/DUMP statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BackupStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BackupStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BackupStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BackupStatement.DatabaseName">
      <summary>Gets or sets the database to back up.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BackupStatement.Devices">
      <summary>Gets or sets where backup should put data.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DeviceInfoCollection" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BackupStatement.MirrorToClauses">
      <summary>Gets a list of where the backup should be mirrored.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BackupStatement.Options">
      <summary>Gets a list of backup statement options.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BackupTransactionLogStatement">
      <summary>Represents the BACKUP TRANSACTION statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BackupTransactionLogStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BackupTransactionLogStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BackupTransactionLogStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BackupTransactionLogStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BackwardsCompatibleDropIndexClause">
      <summary>Represents an old-style clause in a DROP INDEX statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BackwardsCompatibleDropIndexClause.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BackwardsCompatibleDropIndexClause" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BackwardsCompatibleDropIndexClause.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BackwardsCompatibleDropIndexClause.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BackwardsCompatibleDropIndexClause.Index">
      <summary>Gets or sets the index and table name together.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ChildObjectName" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BeginConversationTimerStatement">
      <summary>Represents the BEGIN CONVERSATION TIMER statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BeginConversationTimerStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BeginConversationTimerStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BeginConversationTimerStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BeginConversationTimerStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BeginConversationTimerStatement.Handle">
      <summary>Gets or sets the conversation handle.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BeginConversationTimerStatement.Timeout">
      <summary>Gets or sets the amount of time, in seconds, to wait before putting the message in the queue.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BeginDialogStatement">
      <summary>Represents the BEGIN DIALOG statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BeginDialogStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BeginDialogStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BeginDialogStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BeginDialogStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BeginDialogStatement.ContractName">
      <summary>Gets or sets the contract that this conversation follows.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BeginDialogStatement.Encryption">
      <summary>Gets or sets an optional encryption option.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OptionState" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BeginDialogStatement.Handle">
      <summary>Gets or sets the conversation handle.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BeginDialogStatement.InitiatorServiceName">
      <summary>Gets or sets the service that initiates the dialog. Can be an Identifier or a SchemaObjectName.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BeginDialogStatement.InstanceSpec">
      <summary>Gets or sets the database that hosts the target service. Can be a string Literal or a Variable.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BeginDialogStatement.IsConversation">
      <summary>Gets or sets whether CONVERSATION is specified.</summary>
      <returns>Returns true if CONVERSATION was specified, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BeginDialogStatement.Lifetime"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BeginDialogStatement.RelatedConversation">
      <summary>Gets or sets an optional related conversation option.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BeginDialogStatement.RelatedConversationGroup">
      <summary>Gets or sets an optional related conversation group option.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BeginDialogStatement.TargetServiceName">
      <summary>Gets or sets the target service with which to initiate the dialog. Can be a string Literal or a Variable.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BeginEndBlockStatement">
      <summary>Represents a group of statements that start with a BEGIN keyword and finish with an END keyword.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BeginEndBlockStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BeginEndBlockStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BeginEndBlockStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BeginEndBlockStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BeginEndBlockStatement.StatementList">
      <summary>Gets or sets a statement list.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.StatementList" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BeginTransactionStatement">
      <summary>Represents the BEGIN TRANSACTION and BEGIN DISTRIBUTED TRANSACTION statements.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BeginTransactionStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BeginTransactionStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BeginTransactionStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BeginTransactionStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BeginTransactionStatement.Distributed">
      <summary>Gets or sets whether this is a distributed transaction.</summary>
      <returns>Returns true if this is a distributed transaction, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BeginTransactionStatement.MarkDefined">
      <summary>Gets or sets whether the mark is defined.</summary>
      <returns>Returns true if the mark is defined, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BeginTransactionStatement.MarkDescription">
      <summary>Gets or sets the description of the mark.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpression">
      <summary>Represents an expression that has two expressions as children.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpression" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpression.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpression.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpression.BinaryExpressionType">
      <summary>Gets or sets the binary expression type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpressionType" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpression.FirstExpression">
      <summary>Gets or sets the first child expression.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpression.SecondExpression">
      <summary>Gets or sets the second child expression.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpressionType">
      <summary>Specifies the type of binary expression.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpressionType.Add">
      <summary>Type is Add</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpressionType.Subtract">
      <summary />
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpressionType.Multiply">
      <summary>Type is Multiply</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpressionType.Divide">
      <summary>Type is Divide</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpressionType.Modulo">
      <summary>Type is Modulo</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpressionType.BitwiseAnd">
      <summary>Type is BitwiseAnd</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpressionType.BitwiseOr">
      <summary>Type is BitwiseOr</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpressionType.BitwiseXor">
      <summary>Type is BitwiseXor</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpressionType.Equals">
      <summary>Type is Equals</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpressionType.GreaterThan">
      <summary>Type is GreaterThan</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpressionType.LessThan">
      <summary>Type is LessThan</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpressionType.GreaterThanOrEqualTo">
      <summary>Type is GreaterThanOrEqualTo</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpressionType.LessThanOrEqualTo">
      <summary>Type is LessThanOrEqualTo</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpressionType.NotEqualToBrackets">
      <summary>Type is NotEqualToBrackets</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpressionType.NotEqualToExclamation">
      <summary>Type is NotEqualToExclamation</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpressionType.NotLessThan">
      <summary>Type is NotLessThan</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpressionType.NotGreaterThan">
      <summary>Type is NotGreaterThan</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpressionType.LeftOuterJoin">
      <summary>Type is LeftOuterJoin</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpressionType.RightOuterJoin">
      <summary>Type is RightOuterJoin</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpressionType.And">
      <summary>Type is And</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpressionType.Or">
      <summary>Type is Or</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BinaryQueryExpression">
      <summary>Represents the union that is used in a select statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BinaryQueryExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BinaryQueryExpression" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BinaryQueryExpression.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BinaryQueryExpression.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BinaryQueryExpression.All">
      <summary>Gets or sets whether the All keyword is used.</summary>
      <returns>Returns true if the ALL keyword is used, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BinaryQueryExpression.BinaryQueryExpressionType">
      <summary>Gets or sets the type of the expression.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BinaryQueryExpressionType" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BinaryQueryExpression.FirstQueryExpression">
      <summary>Gets or sets the first query expression.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.QueryExpression" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BinaryQueryExpression.SecondQueryExpression">
      <summary>Gets or sets the second query expression.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.QueryExpression" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BinaryQueryExpressionType">
      <summary>Specifies the type of binary query expression.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BinaryQueryExpressionType.Union">
      <summary>Type is Union</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BinaryQueryExpressionType.Except">
      <summary>Type is Except</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BinaryQueryExpressionType.Intersect">
      <summary>Type is Intersect</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BoundingBoxParameter">
      <summary>Represents the spatial index structured parameter by name.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BoundingBoxParameter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BoundingBoxParameter" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BoundingBoxParameter.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BoundingBoxParameter.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BoundingBoxParameter.Parameter">
      <summary>Gets or sets the spatial index structured parameter by name spatial index option BOUNDING_BOX.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BoundingBoxParameterType" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BoundingBoxParameter.Value">
      <summary>Gets or sets a numeric four-tuple that defines the four coordinates of the bounding box: the x-min and y-min coordinates of the lower left corner, and the x-max and y-max coordinates of the upper right corner.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BoundingBoxParameterType">
      <summary>Specifies the type of bounding box parameter.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BoundingBoxParameterType.None">
      <summary>Parameter is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BoundingBoxParameterType.XMin">
      <summary>Parameter is XMin</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BoundingBoxParameterType.YMin">
      <summary>Parameter is YMin</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BoundingBoxParameterType.XMax">
      <summary>Parameter is XMax</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BoundingBoxParameterType.YMax">
      <summary>Parameter is YMax</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BoundingBoxSpatialIndexOption">
      <summary>Represents the BOUNDING_BOX spatial index option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BoundingBoxSpatialIndexOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BoundingBoxSpatialIndexOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BoundingBoxSpatialIndexOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BoundingBoxSpatialIndexOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BoundingBoxSpatialIndexOption.BoundingBoxParameters">
      <summary>Gets a list of bounding box parameters.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BreakStatement">
      <summary>Represents the BREAK statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BreakStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BreakStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BreakStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BreakStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityParameter">
      <summary>Represents the broker priority statement parameter.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityParameter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityParameter" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityParameter.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityParameter.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityParameter.IsDefaultOrAny">
      <summary>Gets or sets the broker priority parameter special type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityParameterSpecialType" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityParameter.ParameterType">
      <summary>Gets or sets the broker priority parameter type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityParameterType" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityParameter.ParameterValue">
      <summary>Gets or sets the parameter value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityParameterSpecialType">
      <summary>Specifies the type of broker priority parameter.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityParameterSpecialType.None">
      <summary>Type is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityParameterSpecialType.Any">
      <summary>Type is Any</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityParameterSpecialType.Default">
      <summary>Type is Default</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityParameterType">
      <summary>Specifies a broker priority parameter type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityParameterType.Unknown">
      <summary>Type is Unknown</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityParameterType.ContractName">
      <summary>Type is ContractName</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityParameterType.LocalServiceName">
      <summary>Type is LocalServiceName</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityParameterType.RemoteServiceName">
      <summary>Type is RemoteServiceName</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityParameterType.PriorityLevel">
      <summary>Type is PriorityLevel</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityStatement">
      <summary>Represents the CREATE and ALTER BROKER PRIORITY statements.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityStatement.BrokerPriorityParameters">
      <summary>Gets a list of broker priority parameters.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityStatement.Name">
      <summary>Gets or sets the broker priority statement name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BrowseForClause">
      <summary>Represents the FOR BROWSE case.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BrowseForClause.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BrowseForClause" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BrowseForClause.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BrowseForClause.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BuiltInFunctionTableSource">
      <summary>Represents the built-in functions as simple table sources.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BuiltInFunctionTableSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BuiltInFunctionTableSource" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BuiltInFunctionTableSource.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BuiltInFunctionTableSource.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BuiltInFunctionTableSource.Name">
      <summary>Gets or sets the name of the built-in function.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BuiltInFunctionTableSource.Parameters">
      <summary>Gets a list of parameters for the function.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BulkInsertBase">
      <summary>Represents the BULK INSERT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BulkInsertBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BulkInsertBase" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BulkInsertBase.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BulkInsertBase.Options">
      <summary>Gets a list of possible options.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BulkInsertBase.To">
      <summary>Gets or sets the table to insert data into.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BulkInsertOption">
      <summary>Represents a single option in a BULK INSERT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BulkInsertOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BulkInsertOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BulkInsertOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BulkInsertStatement">
      <summary>Represents the BULK INSERT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BulkInsertStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BulkInsertStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BulkInsertStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BulkInsertStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BulkInsertStatement.From">
      <summary>Gets or sets the data source for BULK INSERT.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.BulkOpenRowset">
      <summary>Represents the OPENROWSET (BULK ...) table source.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BulkOpenRowset.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BulkOpenRowset" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BulkOpenRowset.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.BulkOpenRowset.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BulkOpenRowset.DataFile">
      <summary>Gets or sets the data file.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.BulkOpenRowset.Options">
      <summary>Gets a list of bulk insert options.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CallTarget">
      <summary>Represents the target of a function call.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CallTarget.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CallTarget" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CallTarget.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CaseExpression">
      <summary>Represents the case expression.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CaseExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CaseExpression" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CaseExpression.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CaseExpression.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CaseExpression.ElseExpression">
      <summary>Gets or sets the expression that comes after Else.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CaseExpression.InputExpression">
      <summary>Gets or sets the input expression.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CaseExpression.WhenClauses">
      <summary>Gets a list of When clauses.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CastCall">
      <summary>Represents the cast call.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CastCall.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CastCall" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CastCall.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CastCall.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CastCall.DataType">
      <summary>Gets or sets the data type to which the expression will be casted.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DataType" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CastCall.Parameter">
      <summary>Gets or sets the parameter that will be casted.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CellsPerObjectSpatialIndexOption">
      <summary>Represents the CELLS_PER_OBJECT spatial index option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CellsPerObjectSpatialIndexOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CellsPerObjectSpatialIndexOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CellsPerObjectSpatialIndexOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CellsPerObjectSpatialIndexOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CellsPerObjectSpatialIndexOption.Value">
      <summary>Gets or sets the number of tessellation cells per object that can be used for a single spatial object in the index by the tessellation process.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CertificateCreateLoginSource">
      <summary>Represents the Certificate case in a CREATE LOGIN statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CertificateCreateLoginSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CertificateCreateLoginSource" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CertificateCreateLoginSource.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CertificateCreateLoginSource.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CertificateCreateLoginSource.Certificate">
      <summary>Gets or sets the certificate name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CertificateCreateLoginSource.Credential">
      <summary>Gets or sets the credential name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CertificateOption">
      <summary>Represents single SUBJECT, START_DATE, or EXPIRE_DATE options in a CREATE CERTIFICATE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CertificateOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CertificateOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CertificateOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CertificateOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CertificateOption.Kind">
      <summary>Gets or sets the certificate option kind.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CertificateOptionKinds" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CertificateOption.Value">
      <summary>Gets or sets the option value.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CertificateOptionKinds">
      <summary>Specifies certificate option kind.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CertificateOptionKinds.None">
      <summary>Kind is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CertificateOptionKinds.Subject">
      <summary>Kind is Subject</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CertificateOptionKinds.StartDate">
      <summary>Kind is StartDate</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CertificateOptionKinds.ExpiryDate">
      <summary>Kind is ExpiryDate</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CertificateStatementBase">
      <summary>Represents the CREATE CERTIFICATE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CertificateStatementBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CertificateStatementBase" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CertificateStatementBase.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CertificateStatementBase.ActiveForBeginDialog">
      <summary>Gets or sets the ACTIVE FOR BEGIN_DIALOG optional option value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OptionState" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CertificateStatementBase.DecryptionPassword">
      <summary>Gets or sets the decryption password.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CertificateStatementBase.EncryptionPassword">
      <summary>Gets or sets the encryption password.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CertificateStatementBase.Name">
      <summary>Gets or sets the certificate name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CertificateStatementBase.PrivateKeyPath">
      <summary>Gets or sets the optional path to the private key.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ChangeRetentionChangeTrackingOptionDetail">
      <summary>Represents the CHANGE_RETENTION part of the CHANGE_TRACKING option in an ALTER DATABASE SET statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ChangeRetentionChangeTrackingOptionDetail.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ChangeRetentionChangeTrackingOptionDetail" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ChangeRetentionChangeTrackingOptionDetail.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ChangeRetentionChangeTrackingOptionDetail.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ChangeRetentionChangeTrackingOptionDetail.RetentionPeriod">
      <summary>Gets or sets the retention period.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ChangeRetentionChangeTrackingOptionDetail.Unit">
      <summary>Gets or sets the units (days|hours|minutes) value for the retention period.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.RetentionUnit" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTableChangesTableSource">
      <summary>Represents the CHANGETABLE clause with the CHANGES option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTableChangesTableSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTableChangesTableSource" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTableChangesTableSource.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTableChangesTableSource.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTableChangesTableSource.SinceVersion">
      <summary>Gets or sets the point from which changes are required.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTableChangesTableSource.Target">
      <summary>Gets or sets the table on which to obtain tracked changes.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTableVersionTableSource">
      <summary>Represents the CHANGETABLE clause with the VERSION option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTableVersionTableSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTableVersionTableSource" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTableVersionTableSource.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTableVersionTableSource.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTableVersionTableSource.PrimaryKeyColumns">
      <summary>Gets a list of primary key column names.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTableVersionTableSource.PrimaryKeyValues">
      <summary>Gets a list of values for primary key columns.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTableVersionTableSource.Target">
      <summary>Gets or sets the table on which to obtain tracked changes.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingAlterDatabaseOption">
      <summary>Represents the CHANGE_TRACKING option in an ALTER DATABASE statement, SET case.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingAlterDatabaseOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingAlterDatabaseOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingAlterDatabaseOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingAlterDatabaseOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingAlterDatabaseOption.Details">
      <summary>Gets a list of the optional CHANGE_RETENTION and AUTO_CLEANUP details.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingAlterDatabaseOption.OptionState">
      <summary>Gets or sets the option state.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OptionState" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingFullTextIndexOption"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingFullTextIndexOption.#ctor"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingFullTextIndexOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingFullTextIndexOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingFullTextIndexOption.Value"></member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingOption">
      <summary>Specifies the change tracking option.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingOption.NotSpecified">
      <summary>Option is NotSpecified</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingOption.Auto">
      <summary>Option is Auto</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingOption.Manual">
      <summary>Option is Manual</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingOption.Off">
      <summary>Option is Off</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingOption.OffNoPopulation">
      <summary>Option is OffNoPopulation</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingOptionDetail">
      <summary>Represents one detail for <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingAlterDatabaseOption" />.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingOptionDetail.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingOptionDetail" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingOptionDetail.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CharacterSetPayloadOption">
      <summary>Represents the CHARACTER_SET payload option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CharacterSetPayloadOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CharacterSetPayloadOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CharacterSetPayloadOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CharacterSetPayloadOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CharacterSetPayloadOption.IsSql">
      <summary>Gets or sets whether the character set is SQL.</summary>
      <returns>Returns true in case of SQL, false in case of an XML character set.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CheckConstraint">
      <summary>Represents the check constraint.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CheckConstraint.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CheckConstraint" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CheckConstraint.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CheckConstraint.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CheckConstraint.CheckCondition">
      <summary>Gets or sets the check condition.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CheckConstraint.NotForReplication">
      <summary>Gets or sets whether Not For Replication is used.</summary>
      <returns>Returns true if Not For Replication is used, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CheckpointStatement">
      <summary>Represents the CHECKPOINT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CheckpointStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CheckpointStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CheckpointStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CheckpointStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CheckpointStatement.Duration">
      <summary>Gets or sets the duration.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ChildObjectName">
      <summary>Represents the name of a schema object child.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ChildObjectName.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ChildObjectName" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ChildObjectName.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ChildObjectName.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ChildObjectName.BaseIdentifier">
      <summary>Gets the base identifier.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ChildObjectName.ChildIdentifier">
      <summary>Gets the child identifier.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ChildObjectName.DatabaseIdentifier">
      <summary>Gets the database identifier.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ChildObjectName.SchemaIdentifier">
      <summary>Gets the schema identifier.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ChildObjectName.ServerIdentifier">
      <summary>Gets the server identifier.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CloseCursorStatement">
      <summary>Represents the CLOSE cursor statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CloseCursorStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CloseCursorStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CloseCursorStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CloseCursorStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CloseMasterKeyStatement">
      <summary>Represents the CLOSE MASTER KEY statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CloseMasterKeyStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CloseMasterKeyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CloseMasterKeyStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CloseMasterKeyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CloseSymmetricKeyStatement">
      <summary>Represents the CLOSE SYMMETRIC KEY statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CloseSymmetricKeyStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CloseSymmetricKeyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CloseSymmetricKeyStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CloseSymmetricKeyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CloseSymmetricKeyStatement.All">
      <summary>Gets or sets whether All is defined.</summary>
      <returns>Returns true if All is defined, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CloseSymmetricKeyStatement.Name">
      <summary>Gets or sets the name of the key.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CoalesceExpression">
      <summary>Represents the coalesce expression.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CoalesceExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CoalesceExpression" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CoalesceExpression.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CoalesceExpression.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CoalesceExpression.Expressions">
      <summary>Gets a list of expressions, which must have at least two elements.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.Column">
      <summary>Represents a column identifier with a sort order.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Column.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Column" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Column.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Column.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.Column.ColumnType">
      <summary>Gets or sets the column type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ColumnType" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.Column.Identifiers">
      <summary>Gets a list of column identifiers.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ColumnDefinition">
      <summary>Represents a column definition.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ColumnDefinition.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ColumnDefinition" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ColumnDefinition.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ColumnDefinition.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ColumnDefinition.ComputedColumnExpression">
      <summary>Gets or sets the computed column expression.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ColumnDefinition.Constraints">
      <summary>Gets a list of constraints for this column.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ColumnDefinition.DefaultConstraint">
      <summary>Gets or sets the default value, if not NULL.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ColumnDefinition.IdentityIncrement">
      <summary>Gets or sets the identity increment.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ColumnDefinition.IdentitySeed">
      <summary>Gets or sets the identity seed.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ColumnDefinition.IsIdentity">
      <summary>Gets or sets whether this is an identity column.</summary>
      <returns>Returns true if it is an identity column, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ColumnDefinition.IsIdentityNotForReplication">
      <summary>Gets or sets whether identity is not for replication.</summary>
      <returns>Returns true if identity is not for replication, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ColumnDefinition.IsPersisted">
      <summary>Gets or sets whether the column is persisted.</summary>
      <returns>Returns true if the column is persisted, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ColumnDefinition.IsRowGuidCol"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ColumnDefinition.StorageOptions">
      <summary>Gets or sets column storage options.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ColumnStorageOptions" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ColumnDefinitionBase">
      <summary>Represents the most basic column definition.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ColumnDefinitionBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ColumnDefinitionBase" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ColumnDefinitionBase.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ColumnDefinitionBase.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ColumnDefinitionBase.Collation">
      <summary>Gets or sets the collation identifier.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ColumnDefinitionBase.ColumnIdentifier">
      <summary>Gets or sets the column name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ColumnDefinitionBase.DataType">
      <summary>Gets or sets the data type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DataType" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ColumnStorageOptions">
      <summary>Represents column storage options.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ColumnStorageOptions.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ColumnStorageOptions" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ColumnStorageOptions.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ColumnStorageOptions.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ColumnStorageOptions.IsFileStream">
      <summary>Gets or sets whether the column is a file stream column.</summary>
      <returns>Returns true if the column is a file stream column, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ColumnStorageOptions.SparseOption">
      <summary>Gets or sets the sparse column option value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SparseColumnOption" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ColumnType">
      <summary>Specifies the column type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ColumnType.Regular">
      <summary>Type is Regular</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ColumnType.IdentityCol">
      <summary>Type is IdentityCol</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ColumnType.RowGuidCol">
      <summary />
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ColumnType.Wildcard">
      <summary>Type is Wildcard</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ColumnType.PseudoColumnIdentity">
      <summary>Type is PseudoColumnIdentity</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ColumnType.PseudoColumnRowGuid">
      <summary />
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ColumnType.PseudoColumnAction">
      <summary>Type is PseudoColumnAction</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ColumnType.PseudoColumnCuid">
      <summary>Type is PseudoColumnCuid</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ColumnWithSortOrder">
      <summary>Represents a column identifier with a sort order.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ColumnWithSortOrder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ColumnWithSortOrder" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ColumnWithSortOrder.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ColumnWithSortOrder.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ColumnWithSortOrder.ColumnIdentifier">
      <summary>Gets or sets the column identifier.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ColumnWithSortOrder.SortOrder">
      <summary>Gets or sets the sort order.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SortOrder" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CommandOptions">
      <summary>Specifies the command options.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CommandOptions.None">
      <summary>Option is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CommandOptions.CreateDatabase">
      <summary>Option is CreateDatabase</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CommandOptions.CreateDefault">
      <summary>Option is CreateDefault</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CommandOptions.CreateProcedure">
      <summary>Option is CreateProcedure</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CommandOptions.CreateFunction">
      <summary>Option is CreateFunction</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CommandOptions.CreateRule">
      <summary>Option is CreateRule</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CommandOptions.CreateTable">
      <summary>Option is CreateTable</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CommandOptions.CreateView">
      <summary>Option is CreateView</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CommandOptions.BackupDatabase">
      <summary>Option is BackupDatabase</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CommandOptions.BackupLog">
      <summary>Option is BackupLog</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CommandSecurityElement80">
      <summary>Represents the security element that has commands.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CommandSecurityElement80.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CommandSecurityElement80" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CommandSecurityElement80.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CommandSecurityElement80.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CommandSecurityElement80.All">
      <summary>Gets or sets whether ALL is defined.</summary>
      <returns>Returns true if ALL is defined, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CommandSecurityElement80.CommandOptions">
      <summary>Gets or sets command options.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CommandOptions" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CommitTransactionStatement">
      <summary>Represents the COMMIT TRANSACTION statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CommitTransactionStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CommitTransactionStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CommitTransactionStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CommitTransactionStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CommonTableExpression">
      <summary>Represents the common table expression.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CommonTableExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CommonTableExpression" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CommonTableExpression.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CommonTableExpression.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CommonTableExpression.Columns">
      <summary>Gets a list of the column names.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CommonTableExpression.ExpressionName">
      <summary>Gets or sets the expression name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CommonTableExpression.Subquery">
      <summary>Gets or sets the query definition.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Subquery" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CompatibilityLevelAlterDatabaseOption">
      <summary>Represents the COMPATIBILITY_LEVEL option in an ALTER DATABASE statement, SET case.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CompatibilityLevelAlterDatabaseOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CompatibilityLevelAlterDatabaseOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CompatibilityLevelAlterDatabaseOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CompatibilityLevelAlterDatabaseOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CompatibilityLevelAlterDatabaseOption.Value">
      <summary>Gets or sets the compatibility level.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CompositeGroupingSpecification">
      <summary>Composes a list of sub-specifications.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CompositeGroupingSpecification.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CompositeGroupingSpecification" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CompositeGroupingSpecification.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CompositeGroupingSpecification.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CompositeGroupingSpecification.Items">
      <summary>Gets a list of grouping specification items.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CompressionEndpointProtocolOption">
      <summary>Represents the PORTS HTTP endpoint protocol option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CompressionEndpointProtocolOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CompressionEndpointProtocolOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CompressionEndpointProtocolOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CompressionEndpointProtocolOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CompressionEndpointProtocolOption.IsEnabled">
      <summary>Gets or sets whether compression is set to ENABLED.</summary>
      <returns>Returns true if compression is set to ENABLED, false if set to DISABLED.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CompressionPartitionRange">
      <summary>Represents a single range in the DATA_COMPRESSION option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CompressionPartitionRange.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CompressionPartitionRange" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CompressionPartitionRange.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CompressionPartitionRange.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CompressionPartitionRange.From">
      <summary>Gets or sets the first partition number expression.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CompressionPartitionRange.To">
      <summary>Gets or sets the optional second partition number expression.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ComputeClause">
      <summary>Represents the Compute By clause that can be used in statements such as Select.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ComputeClause.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ComputeClause" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ComputeClause.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ComputeClause.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ComputeClause.ByExpressions">
      <summary>Gets a list of the expressions that come after By.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ComputeClause.ComputeFunctions">
      <summary>Gets a list of the Compute functions. At least one is required.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ComputeFunction">
      <summary>Represents a compute function that can be used in a Compute clause.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ComputeFunction.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ComputeFunction" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ComputeFunction.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ComputeFunction.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ComputeFunction.ComputeFunctionType">
      <summary>Gets or sets the compute function type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ComputeFunctionType" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ComputeFunction.Expression">
      <summary>Gets or sets the expression.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ComputeFunctionType">
      <summary>Specifies the compute function type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ComputeFunctionType.NotSpecified">
      <summary>Type is NotSpecified</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ComputeFunctionType.Avg">
      <summary>Type is Avg</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ComputeFunctionType.Count">
      <summary>Type is Count</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ComputeFunctionType.Max">
      <summary>Type is Max</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ComputeFunctionType.Min">
      <summary>Type is Min</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ComputeFunctionType.Stdev">
      <summary>Type is Stdev</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ComputeFunctionType.Stdevp">
      <summary>Type is Stdevp</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ComputeFunctionType.Var">
      <summary>Type is Var</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ComputeFunctionType.Varp">
      <summary>Type is Varp</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ComputeFunctionType.Sum">
      <summary>Type is Sum</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ComputeFunctionType.CountBig">
      <summary>Type is CountBig</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ComputeFunctionType.ChecksumAgg">
      <summary>Type is ChecksumAgg</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.Constraint">
      <summary>Represents the base class for constraints.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Constraint.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Constraint" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Constraint.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.Constraint.ConstraintIdentifier">
      <summary>Gets or sets the constraint name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ConstraintEnforcement">
      <summary>Specifies constraint enforcement.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ConstraintEnforcement.NotSpecified">
      <summary>Constraint is NotSpecified</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ConstraintEnforcement.NoCheck">
      <summary>Constraint is NoCheck</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ConstraintEnforcement.Check">
      <summary>Constraint is Check</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ContinueStatement">
      <summary>Represents the CONTINUE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ContinueStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ContinueStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ContinueStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ContinueStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ContractMessage">
      <summary>Represents information about a single message in a CREATE CONTRACT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ContractMessage.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ContractMessage" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ContractMessage.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ContractMessage.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ContractMessage.Name">
      <summary>Gets or sets the message name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ContractMessage.SentBy">
      <summary>Gets or sets the message sender.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.MessageSender" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ConvertCall">
      <summary>Represents the convert call.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ConvertCall.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ConvertCall" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ConvertCall.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ConvertCall.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ConvertCall.DataType">
      <summary>Gets or sets the data type to which the expression will be converted.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DataType" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ConvertCall.Parameter">
      <summary>Gets or sets the parameter that will be converted.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ConvertCall.Style">
      <summary>Gets or sets the style of the date format. Optional, may be NULL.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateAggregateStatement">
      <summary>Represents the CREATE AGGREGATE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateAggregateStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateAggregateStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateAggregateStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateAggregateStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateAggregateStatement.AssemblyName">
      <summary>Gets or sets the assembly/class to bind with the user-defined aggregate function.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AssemblyName" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateAggregateStatement.Name">
      <summary>Gets or sets the aggregate function name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateAggregateStatement.Parameters">
      <summary>Gets a list of aggregate parameters.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateAggregateStatement.ReturnType">
      <summary>Gets or sets the aggregate function return type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DataType" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateApplicationRoleStatement">
      <summary>Represents the CREATE APPLICATION ROLE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateApplicationRoleStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateApplicationRoleStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateApplicationRoleStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateApplicationRoleStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateAssemblyStatement">
      <summary>Represents the CREATE ASSEMBLY statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateAssemblyStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateAssemblyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateAssemblyStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateAssemblyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateAssemblyStatement.Owner">
      <summary>Gets or sets the owner name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateAsymmetricKeyStatement">
      <summary>Represents the CREATE ASYMMETRIC KEY statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateAsymmetricKeyStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateAsymmetricKeyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateAsymmetricKeyStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateAsymmetricKeyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateAsymmetricKeyStatement.EncryptionAlgorithm">
      <summary>Gets or sets the encryption algorithm to use.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionAlgorithm" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateAsymmetricKeyStatement.KeySource">
      <summary>Gets or sets the encryption key source.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionSource" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateAsymmetricKeyStatement.Name">
      <summary>Gets or sets the key name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateAsymmetricKeyStatement.Owner">
      <summary>Gets or sets the owner name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateAsymmetricKeyStatement.Password">
      <summary>Gets or sets the optional password with which to encrypt the private key.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateBrokerPriorityStatement">
      <summary>Represents the CREATE BROKER PRIORITY statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateBrokerPriorityStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateBrokerPriorityStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateBrokerPriorityStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateBrokerPriorityStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateCertificateStatement">
      <summary>Represents the CREATE CERTIFICATE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateCertificateStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateCertificateStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateCertificateStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateCertificateStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateCertificateStatement.CertificateOptions">
      <summary>Gets a list of subject and start/expire date options in case of new keys generation.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateCertificateStatement.CertificateSource">
      <summary>Gets or sets the certificate source.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionSource" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateCertificateStatement.Owner">
      <summary>Gets or sets the certificate owner name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateContractStatement">
      <summary>Represents the CREATE CONTRACT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateContractStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateContractStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateContractStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateContractStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateContractStatement.Messages">
      <summary>Gets a list of information about messages in the contract.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateContractStatement.Name">
      <summary>Gets or sets the contract name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateContractStatement.Owner">
      <summary>Gets or sets the contract owner.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateCredentialStatement">
      <summary>Represents the CREATE CREDENTIAL statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateCredentialStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateCredentialStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateCredentialStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateCredentialStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateCredentialStatement.CryptographicProviderName">
      <summary>Gets or sets the name of an Enterprise Key Management Provider (EKM).</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateCryptographicProviderStatement">
      <summary>Represents the CREATE CRYPTOGRAPHIC PROVIDER statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateCryptographicProviderStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateCryptographicProviderStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateCryptographicProviderStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateCryptographicProviderStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateCryptographicProviderStatement.File">
      <summary>Gets or sets the cryptographic provider file.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateCryptographicProviderStatement.Name">
      <summary>Gets or sets the cryptographic provider name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseAuditSpecificationStatement">
      <summary>Creates a database audit specification.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseAuditSpecificationStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseAuditSpecificationStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseAuditSpecificationStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseAuditSpecificationStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseEncryptionKeyStatement">
      <summary>Creates a database encryption key.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseEncryptionKeyStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseEncryptionKeyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseEncryptionKeyStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseEncryptionKeyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseStatement">
      <summary>Represents the CREATE DATABASE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseStatement.AttachMode">
      <summary>Gets or sets the attach mode.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AttachMode" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseStatement.Collation">
      <summary>Gets or sets the collation name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseStatement.DatabaseName">
      <summary>Gets or sets the name of the database being created.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseStatement.DatabaseSnapshot">
      <summary>Gets or sets the database snapshot name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseStatement.DBChaining"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseStatement.FileGroups"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseStatement.LogOn">
      <summary>Gets a list of log on file declarations.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseStatement.ServiceBrokerOption">
      <summary>Gets or sets the service broker option.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ServiceBrokerOptions" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseStatement.Trustworthy">
      <summary>Gets or sets the trustworthy external access option.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OptionState" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateDefaultStatement">
      <summary>Represents the CREATE DEFAULT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateDefaultStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateDefaultStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateDefaultStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateDefaultStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateDefaultStatement.Expression">
      <summary>Gets or sets the expression.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateDefaultStatement.Name">
      <summary>Gets or sets the name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateEndpointStatement">
      <summary>Represents the CREATE ENDPOINT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateEndpointStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateEndpointStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateEndpointStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateEndpointStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateEndpointStatement.Owner">
      <summary>Gets or sets the owner name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateEventNotificationStatement">
      <summary>Represents the CREATE EVENT NOTIFICATION statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateEventNotificationStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateEventNotificationStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateEventNotificationStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateEventNotificationStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateEventNotificationStatement.BrokerInstanceSpecifier">
      <summary>Gets or sets the name of the broker instance specifier.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateEventNotificationStatement.BrokerService">
      <summary>Gets or sets the name of the broker service.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateEventNotificationStatement.EventTypeGroups">
      <summary>Gets a list of event types or groups.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateEventNotificationStatement.Name">
      <summary>Gets or sets the name of the event notification.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateEventNotificationStatement.Scope">
      <summary>Gets or sets the scope for event notification.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationObjectScope" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateEventNotificationStatement.WithFanIn">
      <summary>Gets or sets whether With FAN_IN is defined.</summary>
      <returns>Returns true if With FAN_IN is defined, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateEventSessionStatement">
      <summary>Represents the CREATE EVENT SESSION statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateEventSessionStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateEventSessionStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateEventSessionStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateEventSessionStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextCatalogStatement"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextCatalogStatement.#ctor"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextCatalogStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextCatalogStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextCatalogStatement.FileGroup"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextCatalogStatement.IsDefault"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextCatalogStatement.Owner"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextCatalogStatement.Path"></member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextIndexStatement"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextIndexStatement.#ctor"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextIndexStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextIndexStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextIndexStatement.CatalogAndFileGroup"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextIndexStatement.FullTextIndexColumns"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextIndexStatement.KeyIndexName"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextIndexStatement.OnName"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextIndexStatement.Options"></member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextStopListStatement"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextStopListStatement.#ctor"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextStopListStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextStopListStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextStopListStatement.DatabaseName"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextStopListStatement.IsSystemStopList"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextStopListStatement.Name"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextStopListStatement.Owner"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextStopListStatement.SourceStopListName"></member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateFunctionStatement">
      <summary>Represents the CREATE FUNCTION statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateFunctionStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateFunctionStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateFunctionStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateFunctionStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateIndexStatement">
      <summary>Represents the CREATE INDEX statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateIndexStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateIndexStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateIndexStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateIndexStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateIndexStatement.Clustered">
      <summary>Gets or sets whether the Clustered keyword is used.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateIndexStatement.Columns">
      <summary>Gets a list of the defined columns.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateIndexStatement.FileStreamOn">
      <summary>Gets or sets the file stream specification.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateIndexStatement.FilterPredicate">
      <summary>Gets or sets the optional filter predicate for the index.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateIndexStatement.IncludeColumns">
      <summary>Gets a list of the include columns.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateIndexStatement.OnFileGroupOrPartitionScheme"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateIndexStatement.Translated80SyntaxTo90">
      <summary>Gets or sets whether the 80 syntax was translated into 90.</summary>
      <returns>Returns true if the 80 syntax was translated into 90, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateIndexStatement.Unique">
      <summary>Gets or sets whether the Unique keyword is used.</summary>
      <returns>Returns true if the Unique keyword is used, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateLoginSource">
      <summary>Represents the base class for different login sources in a CREATE LOGIN statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateLoginSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateLoginSource" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateLoginSource.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateLoginStatement">
      <summary>Represents the CREATE LOGIN statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateLoginStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateLoginStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateLoginStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateLoginStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateLoginStatement.Name">
      <summary>Gets or sets the login name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateLoginStatement.Source">
      <summary>Gets or sets the login creation details.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateLoginSource" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateMasterKeyStatement">
      <summary>Represents the CREATE MASTER KEY statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateMasterKeyStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateMasterKeyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateMasterKeyStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateMasterKeyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateMessageTypeStatement">
      <summary>Represents the CREATE MESSAGE TYPE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateMessageTypeStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateMessageTypeStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateMessageTypeStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateMessageTypeStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateMessageTypeStatement.Owner">
      <summary>Gets or sets the owner name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreatePartitionFunctionStatement">
      <summary>Represents the CREATE PARTITION FUNCTION statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreatePartitionFunctionStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreatePartitionFunctionStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreatePartitionFunctionStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreatePartitionFunctionStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreatePartitionFunctionStatement.BoundaryValues">
      <summary>Gets a list of boundary values for each partition.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreatePartitionFunctionStatement.Name">
      <summary>Gets or sets the function name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreatePartitionFunctionStatement.ParameterType">
      <summary>Gets or sets the optional parameter type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.PartitionParameterType" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreatePartitionFunctionStatement.Range">
      <summary>Gets or sets the boundary side for boundary values.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.PartitionFunctionRange" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreatePartitionSchemeStatement">
      <summary>Represents the CREATE PARTITION SCHEME statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreatePartitionSchemeStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreatePartitionSchemeStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreatePartitionSchemeStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreatePartitionSchemeStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreatePartitionSchemeStatement.FileGroups"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreatePartitionSchemeStatement.IsAll">
      <summary>Gets or sets whether the ALL option is specified.</summary>
      <returns>Returns true if the ALL option was specified, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreatePartitionSchemeStatement.Name">
      <summary>Gets or sets the partition scheme name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreatePartitionSchemeStatement.PartitionFunction">
      <summary>Gets or sets the partition function name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateProcedureStatement">
      <summary>Represents the CREATE PROCEDURE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateProcedureStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateProcedureStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateProcedureStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateProcedureStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateQueueStatement">
      <summary>Represents the CREATE QUEUE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateQueueStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateQueueStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateQueueStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateQueueStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateQueueStatement.OnFileGroup"></member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateRemoteServiceBindingStatement">
      <summary>Represents the CREATE REMOTE SERVICE BINDING statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateRemoteServiceBindingStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateRemoteServiceBindingStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateRemoteServiceBindingStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateRemoteServiceBindingStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateRemoteServiceBindingStatement.Owner">
      <summary>Gets or sets the owner name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateRemoteServiceBindingStatement.Service">
      <summary>Gets or sets the service name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateResourcePoolStatement">
      <summary>Represents the CREATE RESOURCE POOL statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateResourcePoolStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateResourcePoolStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateResourcePoolStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateResourcePoolStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateRoleStatement">
      <summary>Represents the CREATE ROLE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateRoleStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateRoleStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateRoleStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateRoleStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateRoleStatement.Owner">
      <summary>Gets or sets the owner name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateRouteStatement">
      <summary>Represents the CREATE ROUTE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateRouteStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateRouteStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateRouteStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateRouteStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateRouteStatement.Owner">
      <summary>Gets or sets the owner name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateRuleStatement">
      <summary>Represents the CREATE RULE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateRuleStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateRuleStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateRuleStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateRuleStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateRuleStatement.Expression">
      <summary>Gets or sets the expression that is the rule.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Expression" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateRuleStatement.Name">
      <summary>Gets or sets the schema object name.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateSchemaStatement">
      <summary>Represents the CREATE SCHEMA statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateSchemaStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateSchemaStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateSchemaStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateSchemaStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateSchemaStatement.Name">
      <summary>Gets or sets the schema name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateSchemaStatement.Owner">
      <summary>Gets or sets the owner name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateSchemaStatement.StatementList">
      <summary>Gets or sets the optional list of statements.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.StatementList" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateServerAuditSpecificationStatement">
      <summary>Creates a server audit specification.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateServerAuditSpecificationStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateServerAuditSpecificationStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateServerAuditSpecificationStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateServerAuditSpecificationStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateServerAuditStatement">
      <summary>Creates a server audit.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateServerAuditStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateServerAuditStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateServerAuditStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateServerAuditStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateServiceStatement">
      <summary>Represents the CREATE SERVICE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateServiceStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateServiceStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateServiceStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateServiceStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateServiceStatement.Owner">
      <summary>Gets or sets the owner name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateSpatialIndexStatement">
      <summary>Represents the CREATE SPATIAL INDEX statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateSpatialIndexStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateSpatialIndexStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateSpatialIndexStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateSpatialIndexStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateSpatialIndexStatement.Name">
      <summary>Gets or sets the name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateSpatialIndexStatement.Object">
      <summary>Gets or sets the schema object.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateSpatialIndexStatement.OnFileGroup"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateSpatialIndexStatement.SpatialColumnName">
      <summary>Gets or sets the spatial column name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateSpatialIndexStatement.SpatialIndexingScheme">
      <summary>Gets or sets the spatial index scheme.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SpatialIndexingSchemeType" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateSpatialIndexStatement.SpatialIndexOptions">
      <summary>Gets a list of spatial index parameters.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateStatisticsStatement">
      <summary>Represents the CREATE STATISTICS statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateStatisticsStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateStatisticsStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateStatisticsStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateStatisticsStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateStatisticsStatement.Columns">
      <summary>Gets a list of the columns of the table or view that are relevant to the statistic.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateStatisticsStatement.FilterPredicate">
      <summary>Gets or sets the optional filter predicate for the CREATE STATISTICS statement.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateStatisticsStatement.Name">
      <summary>Gets or sets the name of the statistic.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateStatisticsStatement.OnName">
      <summary>Gets or sets the table or view this statistic is on.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateStatisticsStatement.StatisticsOptions">
      <summary>Gets a list of the statistics options.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateSymmetricKeyStatement">
      <summary>Represents the CREATE SYMMETRIC KEY statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateSymmetricKeyStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateSymmetricKeyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateSymmetricKeyStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateSymmetricKeyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateSymmetricKeyStatement.KeyOptions">
      <summary>Gets a list of options for this key.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateSymmetricKeyStatement.Owner">
      <summary>Gets or sets the owner name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateSymmetricKeyStatement.Provider">
      <summary>Gets or sets the provider name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateSynonymStatement">
      <summary>Represents the CREATE SYNONYM statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateSynonymStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateSynonymStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateSynonymStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateSynonymStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateSynonymStatement.ForName">
      <summary>Gets or sets the name of the object the synonym is for.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateSynonymStatement.Name">
      <summary>Gets or sets the name of the synonym.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateTableStatement">
      <summary>Represents the CREATE TABLE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateTableStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateTableStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateTableStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateTableStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateTableStatement.ColumnDefinitions">
      <summary>Gets a list of column definitions.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateTableStatement.DataCompressionOptions">
      <summary>Gets a list of data compression options.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateTableStatement.FileStreamOn">
      <summary>Gets or sets the specification of the filestream.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateTableStatement.OnFileGroupOrPartitionScheme"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateTableStatement.SchemaObjectName">
      <summary>Gets or sets the name of the table.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateTableStatement.TableConstraints">
      <summary>Gets a list of table constraints.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateTableStatement.TextImageOn">
      <summary>Gets or sets the filegroup identifier that comes after textimage_on.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateTriggerStatement">
      <summary>Represents the CREATE TRIGGER statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateTriggerStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateTriggerStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateTriggerStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateTriggerStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeStatement">
      <summary>Represents the CREATE TYPE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeStatement.Name">
      <summary>Gets or sets the name of the type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeTableStatement">
      <summary>Creates a table type.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeTableStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeTableStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeTableStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeTableStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeTableStatement.TableBody">
      <summary>Gets or sets the table elements.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DeclareTableBody" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeUddtStatement">
      <summary>Represents the CREATE TYPE statement for user-defined data types, the ones that derive from SQL types.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeUddtStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeUddtStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeUddtStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeUddtStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeUddtStatement.DataType">
      <summary>Gets or sets the data type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DataType" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeUddtStatement.NullableConstraint">
      <summary>Gets or sets the nullable constraint.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.NullableConstraint" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeUdtStatement">
      <summary>Represents the CREATE TYPE statement for user-defined types, the ones that derive from CLR types.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeUdtStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeUdtStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeUdtStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeUdtStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeUdtStatement.AssemblyName">
      <summary>Gets or sets the assembly name.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AssemblyName" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateUserStatement">
      <summary>Represents the CREATE USER statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateUserStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateUserStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateUserStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateUserStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateUserStatement.UserLoginOption">
      <summary>Gets or sets the user login options.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.UserLoginOption" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateViewStatement">
      <summary>Represents the CREATE VIEW statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateViewStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateViewStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateViewStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateViewStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateWorkloadGroupStatement">
      <summary>Represents the CREATE WORKLOAD GROUP statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateWorkloadGroupStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateWorkloadGroupStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateWorkloadGroupStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateWorkloadGroupStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateXmlIndexStatement">
      <summary>Represents the CREATE XML INDEX statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateXmlIndexStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateXmlIndexStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateXmlIndexStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateXmlIndexStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateXmlIndexStatement.Primary">
      <summary>Gets or sets whether the Primary keyword is used.</summary>
      <returns>Returns true if the Primary keyword is used, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateXmlIndexStatement.SecondaryXmlIndexName">
      <summary>Gets or sets the secondary XML index name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateXmlIndexStatement.SecondaryXmlIndexType">
      <summary>Gets or sets the secondary XML index type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SecondaryXmlIndexType" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateXmlIndexStatement.XmlColumn">
      <summary>Gets or sets the XML column.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateXmlSchemaCollectionStatement">
      <summary>Represents the CREATE XML SCHEMA COLLECTION statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateXmlSchemaCollectionStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreateXmlSchemaCollectionStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateXmlSchemaCollectionStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreateXmlSchemaCollectionStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateXmlSchemaCollectionStatement.Expression">
      <summary>Gets or sets the expression that defines the collection.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Expression" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreateXmlSchemaCollectionStatement.Name">
      <summary>Gets or sets the name of the collection.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CreationDispositionKeyOption">
      <summary>Represents the CREATION_DISPOSITION option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreationDispositionKeyOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CreationDispositionKeyOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreationDispositionKeyOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CreationDispositionKeyOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CreationDispositionKeyOption.IsCreateNew">
      <summary>Gets or sets whether CREATE_NEW is specified.</summary>
      <returns>Returns true if CREATE_NEW was specified, false in case of OPEN_EXISTING.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CredentialStatement">
      <summary>Represents common parts of ALTER and CREATE CREDENTIAL statements.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CredentialStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CredentialStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CredentialStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CredentialStatement.Identity">
      <summary>Gets or sets the name of the account to be used when connecting outside the server.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CredentialStatement.Name">
      <summary>Gets or sets the credential name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CredentialStatement.Secret">
      <summary>Gets or sets the secret required for outgoing authentication.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CryptoMechanism">
      <summary>Represents the decryption mechanism.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CryptoMechanism.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CryptoMechanism" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CryptoMechanism.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CryptoMechanism.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CryptoMechanism.CryptoMechanismType">
      <summary>Gets or sets the decryption mechanism type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CryptoMechanismType" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CryptoMechanism.Identifier">
      <summary>Gets or sets the name of the key or certificate.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CryptoMechanism.PasswordOrSignature">
      <summary>Gets or sets the password or signature.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CryptoMechanismType">
      <summary>Specifies the decryption mechanism type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CryptoMechanismType.Certificate">
      <summary>Type is Certificate</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CryptoMechanismType.AsymmetricKey">
      <summary>Type is AsymmetricKey</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CryptoMechanismType.SymmetricKey">
      <summary>Type is SymmetricKey</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CryptoMechanismType.Password">
      <summary>Type is Password</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CubeGroupingSpecification">
      <summary>Represents the CUBE grouping specification.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CubeGroupingSpecification.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CubeGroupingSpecification" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CubeGroupingSpecification.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CubeGroupingSpecification.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CubeGroupingSpecification.Arguments">
      <summary>Gets a list of sub-specifications.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CursorDefaultAlterDatabaseOption">
      <summary>Represents the CURSOR_DEFAULT option in the ALTER DATABASE statement, SET case.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CursorDefaultAlterDatabaseOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CursorDefaultAlterDatabaseOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CursorDefaultAlterDatabaseOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CursorDefaultAlterDatabaseOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CursorDefaultAlterDatabaseOption.IsLocal">
      <summary>Gets or sets whether the cursor default is set to LOCAL.</summary>
      <returns>Returns true if the cursor default is set to LOCAL, false if set to GLOBAL.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CursorDefinition">
      <summary>Represents the cursor definition.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CursorDefinition.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CursorDefinition" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CursorDefinition.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CursorDefinition.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CursorDefinition.Options">
      <summary>Gets or sets cursor options.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CursorOptions" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CursorDefinition.Select">
      <summary>Gets or sets the SELECT statement.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SelectStatement" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CursorId">
      <summary>Represents a reference to the cursor.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CursorId.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CursorId" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CursorId.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CursorId.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CursorId.IsGlobal">
      <summary>Gets or sets whether the cursor is global.</summary>
      <returns>Returns true if the cursor is global, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CursorId.Name">
      <summary>Gets or sets the cursor name.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CursorOptions">
      <summary>Specifies the cursor option.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CursorOptions.None">
      <summary>Option is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CursorOptions.Local">
      <summary>Option is Local</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CursorOptions.Global">
      <summary>Option is Global</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CursorOptions.Scroll">
      <summary>Option is Scroll</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CursorOptions.ForwardOnly">
      <summary>Option is ForwardOnly</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CursorOptions.Insensitive">
      <summary>Option is Insensitive</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CursorOptions.Keyset">
      <summary>Option is Keyset</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CursorOptions.Dynamic">
      <summary>Option is Dynamic</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CursorOptions.FastForward">
      <summary>Option is FastForward</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CursorOptions.ScrollLocks">
      <summary>Option is ScrollLocks</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CursorOptions.Optimistic">
      <summary>Option is Optimistic</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CursorOptions.ReadOnly">
      <summary>Option is ReadOnly</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CursorOptions.Static">
      <summary>Option is Static</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.CursorOptions.TypeWarning">
      <summary>Option is TypeWarning</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.CursorStatement">
      <summary>Represents the base type for open/close/fetch cursor statements.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CursorStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CursorStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.CursorStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.CursorStatement.Cursor">
      <summary>Gets or sets the cursor reference.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CursorId" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseAuditAction">
      <summary>Represents a single action in the audit action specification.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseAuditAction.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseAuditAction" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseAuditAction.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseAuditAction.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseAuditAction.ActionKind">
      <summary>Gets or sets the audit action kind.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseAuditActionKind" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseAuditActionKind">
      <summary>Specifies the database audit action kind.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseAuditActionKind.Select">
      <summary>Action is Select</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseAuditActionKind.Update">
      <summary>Action is Update</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseAuditActionKind.Insert">
      <summary>Action is Insert</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseAuditActionKind.Delete">
      <summary>Action is Delete</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseAuditActionKind.Execute">
      <summary>Action is Execute</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseAuditActionKind.Receive">
      <summary>Action is Receive</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseAuditActionKind.References">
      <summary>Action is References</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseEncryptionKeyAlgorithm">
      <summary>Specifies the database encryption key algorithm.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseEncryptionKeyAlgorithm.None">
      <summary>Algorithm is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseEncryptionKeyAlgorithm.Aes128">
      <summary>Algorithm is Aes128</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseEncryptionKeyAlgorithm.Aes192">
      <summary>Algorithm is Aes192</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseEncryptionKeyAlgorithm.Aes256">
      <summary>Algorithm is Aes256</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseEncryptionKeyAlgorithm.TripleDes3Key">
      <summary>Algorithm is TripleDes3Key</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseEncryptionKeyStatement">
      <summary>Represents the base class for statements dealing with an encryption key.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseEncryptionKeyStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseEncryptionKeyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseEncryptionKeyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseEncryptionKeyStatement.Algorithm">
      <summary>Gets or sets the algorithm used for the encryption key.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseEncryptionKeyAlgorithm" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseEncryptionKeyStatement.Encryptor">
      <summary>Gets or sets the encryptor.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CryptoMechanism" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseMirroringEndpointRole">
      <summary>Specifies the database mirroring endpoint role.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseMirroringEndpointRole.NotSpecified">
      <summary>Role is NotSpecified</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseMirroringEndpointRole.Witness">
      <summary>Role is Witness</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseMirroringEndpointRole.Partner">
      <summary>Role is Partner</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseMirroringEndpointRole.All">
      <summary>Role is All</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DataCompressionLevel">
      <summary>Specifies the data compression level.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DataCompressionLevel.None">
      <summary>Compression is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DataCompressionLevel.Row">
      <summary>Compression is Row</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DataCompressionLevel.Page">
      <summary>Compression is Page</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DataCompressionOption">
      <summary>Represents a single data compression option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DataCompressionOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DataCompressionOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DataCompressionOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DataCompressionOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DataCompressionOption.CompressionLevel">
      <summary>Gets or sets the data compression level.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DataCompressionLevel" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DataCompressionOption.PartitionRanges">
      <summary>Gets a list of partitions to which this option applies.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DataModificationStatement">
      <summary>Represents a sub-DML with an output clause, which serves as a table source.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DataModificationStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DataModificationStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DataModificationStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DataModificationStatement.OptimizerHints">
      <summary>Gets a list of optimizer hints.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DataModificationStatement.OutputClause">
      <summary>Gets or sets the output clause.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DataModificationStatement.Target">
      <summary>Gets or sets the data modification target.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DataModificationTarget" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DataModificationStatement.TopRowFilter">
      <summary>Gets or sets the top row filter.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TopRowFilter" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DataModificationStatementTableSource">
      <summary>Represents a sub-DML with an output clause, which serves as a table source.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DataModificationStatementTableSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DataModificationStatementTableSource" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DataModificationStatementTableSource.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DataModificationStatementTableSource.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DataModificationStatementTableSource.Statement">
      <summary>Gets or sets the sub-DML statement.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DataModificationTarget">
      <summary>Represents the DML target that is used in Insert, Update, Delete and Merge statements.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DataModificationTarget.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DataModificationTarget" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DataModificationTarget.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DataType">
      <summary>Represents the base data type class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DataType.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DataType" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DataType.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DataType.Name"></member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand">
      <summary>Specifies the Dbcc command.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.None">
      <summary>Command is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.ActiveCursors">
      <summary>Command is ActiveCursors</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.AddExtendedProc">
      <summary>Command is AddExtendedProc</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.AddInstance">
      <summary>Command is AddInstance</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.AuditEvent">
      <summary>Command is AuditEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.AutoPilot">
      <summary>Command is AutoPilot</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.Buffer">
      <summary>Command is Buffer</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.Bytes">
      <summary>Command is Bytes</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.CacheProfile">
      <summary>Command is CacheProfile</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.CacheStats">
      <summary>Command is CacheStats</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.CallFullText">
      <summary />
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.CheckAlloc">
      <summary>Command is CheckAlloc</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.CheckCatalog">
      <summary>Command is CheckCatalog</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.CheckConstraints">
      <summary>Command is CheckConstraints</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.CheckDB">
      <summary>Command is CheckDB</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.CheckFileGroup">
      <summary />
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.CheckIdent">
      <summary>Command is CheckIdent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.CheckPrimaryFile">
      <summary>Command is CheckPrimaryFile</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.CheckTable">
      <summary>Command is CheckTable</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.CleanTable">
      <summary>Command is CleanTable</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.ClearSpaceCaches">
      <summary>Command is ClearSpaceCaches</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.CollectStats">
      <summary>Command is CollectStats</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.ConcurrencyViolation">
      <summary>Command is ConcurrencyViolation</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.CursorStats">
      <summary>Command is CursorStats</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.DBRecover">
      <summary>Command is DBRecovery</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.DBReindex">
      <summary>Command is DBReindex</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.DBReindexAll">
      <summary>Command is DBReindexAll</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.DBRepair">
      <summary>Command is DBRepair</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.DebugBreak">
      <summary>Command is DebugBreak</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.DeleteInstance">
      <summary>Command is DeleteInstance</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.DetachDB">
      <summary>Command is DetachDB</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.DropCleanBuffers">
      <summary>Command is DropCleanBuffers</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.DropExtendedProc">
      <summary>Command is DropExtendedProc</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.DumpConfig">
      <summary>Command is DumpConfig</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.DumpDBInfo">
      <summary>Command is DumpDBInfo</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.DumpDBTable">
      <summary>Command is DumpDBTable</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.DumpLock">
      <summary>Command is DumpLock</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.DumpLog">
      <summary>Command is DumpLog</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.DumpPage">
      <summary>Command is DumpPage</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.DumpResource">
      <summary>Command is DumpResource</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.DumpTrigger">
      <summary>Command is DumpTrigger</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.ErrorLog">
      <summary>Command is ErrorLog</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.ExtentInfo">
      <summary>Command is ExtentInfo</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.FileHeader">
      <summary>Command is FileHeader</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.FixAllocation">
      <summary>Command is FixAllocation</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.Flush">
      <summary>Command is Flush</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.FlushProcInDB">
      <summary>Command is FlushProcInDB</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.ForceGhostCleanup">
      <summary>Command is ForceGhostCleanup</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.Free">
      <summary>Command is Free</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.FreeProcCache">
      <summary>Command is FreeProcCache</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.FreeSessionCache">
      <summary>Command is FreeSessionCache</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.FreeSystemCache">
      <summary>Command is FreeSystemCache</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.FreezeIO">
      <summary>Command is FreezeIO</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.Help">
      <summary>Command is Help</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.IcecapQuery">
      <summary />
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.IncrementInstance">
      <summary>Command is IncrementInstance</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.Ind">
      <summary>Command is Ind</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.IndexDefrag">
      <summary>Command is IndexDefrag</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.InputBuffer">
      <summary>Command is InputBuffer</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.InvalidateTextptr">
      <summary>Command is InvalidateTextptr</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.InvalidateTextptrObjid">
      <summary>Command is InvalidateTextptrObjid</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.Latch">
      <summary>Command is Latch</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.LogInfo">
      <summary>Command is LogInfo</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.MapAllocUnit">
      <summary>Command is MapAllocUnit</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.MemObjList">
      <summary>Command is MemObjList</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.MemoryMap">
      <summary>Command is MemoryMap</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.MemoryStatus">
      <summary>Command is MemoryStatus</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.Metadata">
      <summary>Command is Metadata</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.MovePage">
      <summary>Command is MovePage</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.NoTextptr">
      <summary>Command is NoTextptr</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.OpenTran">
      <summary>Command is OpenTran</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.OptimizerWhatIf">
      <summary>Command is OptimizerWhatIf</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.OutputBuffer">
      <summary>Command is OutputBuffer</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.PerfMonStats">
      <summary>Command is PerfMonStats</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.PersistStackHash">
      <summary>Command is PersistStackHash</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.PinTable">
      <summary>Command is PinTable</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.ProcCache">
      <summary>Command is ProcCache</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.PrtiPage">
      <summary>Command is PrtiPage</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.ReadPage">
      <summary>Command is ReadPage</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.RenameColumn">
      <summary>Command is RenameColumn</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.RuleOff">
      <summary>Command is RuleOff</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.RuleOn">
      <summary>Command is RuleOn</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.SeMetadata">
      <summary>Command is SetMetadata</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.SetCpuWeight">
      <summary>Command is SetCpuWeight</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.SetInstance">
      <summary>Command is SetInstance</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.SetIOWeight">
      <summary>Command is SetIOWeight</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.ShowStatistics">
      <summary>Command is ShowStatistics</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.ShowContig">
      <summary>Command is ShowContig</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.ShowDBAffinity">
      <summary>Command is ShowDBAffinity</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.ShowFileStats">
      <summary>Command is ShowFileStats</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.ShowOffRules">
      <summary>Command is ShowOffRules</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.ShowOnRules">
      <summary>Command is ShowOnRules</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.ShowTableAffinity">
      <summary>Command is ShowTableAffinity</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.ShowText">
      <summary>Command is ShowText</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.ShowWeights">
      <summary>Command is ShowWeights</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.ShrinkDatabase">
      <summary>Command is ShrinkDatabase</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.ShrinkFile">
      <summary>Command is ShrinkFile</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.SqlMgrStats">
      <summary>Command is SqlMgrStats</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.SqlPerf">
      <summary>Command is SqlPerf</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.StackDump">
      <summary>Command is StackDump</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.Tec">
      <summary>Command is Tec</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.ThawIO">
      <summary>Command is ThawIO</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.TraceOff">
      <summary>Command is TraceOff</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.TraceOn">
      <summary>Command is TraceOn</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.TraceStatus">
      <summary>Command is TraceStatus</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.UnpinTable">
      <summary>Command is UnpinTable</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.UpdateUsage">
      <summary>Command is UpdateUsage</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.UsePlan">
      <summary>Command is UsePlan</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.UserOptions">
      <summary>Command is UserOptions</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand.WritePage">
      <summary>Command is WritePage</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DbccNamedLiteral">
      <summary>Represents a named literal in a DBCC statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DbccNamedLiteral.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DbccNamedLiteral" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DbccNamedLiteral.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DbccNamedLiteral.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DbccNamedLiteral.Name">
      <summary>Gets or sets the optional literal name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DbccNamedLiteral.Value">
      <summary>Gets or sets the literal value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DbccOptions">
      <summary>Specifies the Dbcc options.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccOptions.None">
      <summary>Option is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccOptions.AllErrorMessages">
      <summary>Option is AllErrorMessages</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccOptions.CountRows">
      <summary>Option is CountRows</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccOptions.NoInfoMessages">
      <summary>Option is NoInfoMessages</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccOptions.TableResults">
      <summary>Option is TableResults</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccOptions.TabLock">
      <summary>Option is TabLock</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccOptions.StatHeader">
      <summary>Option is StatHeader</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccOptions.DensityVector">
      <summary>Option is DensityVector</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccOptions.HistogramSteps">
      <summary>Option is HistogramSteps</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccOptions.EstimateOnly">
      <summary>Option is EstimateOnly</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccOptions.Fast">
      <summary>Option is Fast</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccOptions.AllLevels">
      <summary>Option is AllLevels</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccOptions.AllIndexes">
      <summary>Option is AllIndexes</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccOptions.PhysicalOnly">
      <summary>Option is PhysicalOnly</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccOptions.AllConstraints">
      <summary>Option is AllConstraints</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccOptions.StatsStream">
      <summary>Option is StatsStream</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccOptions.Histogram">
      <summary>Option is Histogram</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccOptions.DataPurity">
      <summary>Option is DataPurity</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccOptions.MarkInUseForRemoval">
      <summary>Option is MarkInUseForRemoval</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DbccOptions.Join">
      <summary>Option is Join</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DbccStatement">
      <summary>Represents the DBCC statement (all variants).</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DbccStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DbccStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DbccStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DbccStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DbccStatement.Command">
      <summary>Gets or sets the DBCC statement type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DbccCommand" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DbccStatement.DllName">
      <summary>Gets or sets the DLL name in the case of a FREE command.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DbccStatement.Literals">
      <summary>Gets a list of named literals.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DbccStatement.Options">
      <summary>Gets or sets the DBCC statement options.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DbccOptions" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DbccStatement.ParenthesisRequired">
      <summary>Gets or sets whether empty parentheses are required, even if there were no literals.</summary>
      <returns>Returns true if empty parentheses are required even if there were no literals, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DeallocateCursorStatement">
      <summary>Represents the DEALLOCATE cursor statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DeallocateCursorStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DeallocateCursorStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DeallocateCursorStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DeallocateCursorStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DeclareCursorStatement">
      <summary>Represents the DECLARE CURSOR statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DeclareCursorStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DeclareCursorStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DeclareCursorStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DeclareCursorStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DeclareCursorStatement.CursorDefinition">
      <summary>Gets or sets the select and cursor options.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CursorDefinition" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DeclareCursorStatement.Name">
      <summary>Gets or sets the cursor name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DeclareTableBody">
      <summary>Represents the body of the DECLARE @variable table variation.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DeclareTableBody.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DeclareTableBody" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DeclareTableBody.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DeclareTableBody.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DeclareTableBody.AsDefined">
      <summary>Gets or sets whether the optional AS is used.</summary>
      <returns>Returns true if the optional AS was used, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DeclareTableBody.ColumnDefinitions">
      <summary>Gets a list of column definitions.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DeclareTableBody.TableConstraints">
      <summary>Gets a list of table constraints.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DeclareTableBody.VariableName">
      <summary>Gets or sets the name of the variable.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DeclareTableStatement">
      <summary>Represents the DECLARE @variable statement's table variation.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DeclareTableStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DeclareTableStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DeclareTableStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DeclareTableStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DeclareTableStatement.Body">
      <summary>Gets or sets the statement body.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DeclareTableBody" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DeclareVariableElement">
      <summary>Represents a single declaration in the body of a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DeclareVariableStatement" />.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DeclareVariableElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DeclareVariableElement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DeclareVariableElement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DeclareVariableElement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DeclareVariableElement.DataType">
      <summary>Gets or sets the data type of the variable. The table type is invalid.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DeclareVariableElement.InitialValue">
      <summary>Gets or sets the initial variable value specified in the declaration.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DeclareVariableElement.VariableName">
      <summary>Gets or sets the name of the variable, including the @ at the beginning.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DeclareVariableStatement">
      <summary>Represents the DECLARE @variable statement, except table declarations.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DeclareVariableStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DeclareVariableStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DeclareVariableStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DeclareVariableStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DeclareVariableStatement.Declarations">
      <summary>Gets the list of declarations.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DefaultConstraint">
      <summary>Represents the default constraint.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DefaultConstraint.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DefaultConstraint" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DefaultConstraint.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DefaultConstraint.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DefaultConstraint.Column">
      <summary>Gets or sets the name of the column that the constraint is on.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DefaultConstraint.Expression">
      <summary>Gets or sets the value of the constraint.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DefaultConstraint.WithValues">
      <summary>Gets or sets whether WITH VALUES tokens were defined.</summary>
      <returns>Returns true if WITH VALUES tokens were defined, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DeleteMergeAction">
      <summary>Represents the delete merge action.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DeleteMergeAction.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DeleteMergeAction" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DeleteMergeAction.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DeleteMergeAction.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DeleteStatement">
      <summary>Represents the DELETE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DeleteStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DeleteStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DeleteStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DeleteStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DeleteStatement.FromClauses">
      <summary>Gets a list of optional FROM clauses.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DeleteStatement.WhereClause">
      <summary>Gets or sets a WHERE clause.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.WhereClause" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DeleteUpdateAction">
      <summary>Specifies the delete update action.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DeleteUpdateAction.NoAction">
      <summary>Action is NoAction</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DeleteUpdateAction.Cascade">
      <summary>Action is Cascade</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DeleteUpdateAction.SetNull">
      <summary>Action is SetNull</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DeleteUpdateAction.SetDefault">
      <summary>Action is SetDefault</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DenyStatement">
      <summary>Represents the DENY statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DenyStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DenyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DenyStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DenyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DenyStatement.CascadeOption">
      <summary>Gets or sets whether CASCADE is defined.</summary>
      <returns>Returns true if CASCADE is defined, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DenyStatement80">
      <summary>Represents the DENY statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DenyStatement80.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DenyStatement80" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DenyStatement80.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DenyStatement80.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DenyStatement80.CascadeOption">
      <summary>Gets or sets whether the CASCADE option is defined.</summary>
      <returns>Returns true if the CASCADE option is defined, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DeviceInfo">
      <summary>Represents information about the device used for backup or restore.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DeviceInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DeviceInfo" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DeviceInfo.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DeviceInfo.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DeviceInfo.DeviceType">
      <summary>Gets or sets the device type value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DeviceType" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DeviceInfo.LogicalDevice">
      <summary>Gets or sets the logical device.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DeviceInfo.PhysicalDevice">
      <summary>Gets or sets the physical device.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DeviceType">
      <summary>Specifies the device type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DeviceType.None">
      <summary>Type is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DeviceType.Disk">
      <summary>Type is Disk</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DeviceType.Tape">
      <summary>Type is Tape</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DeviceType.VirtualDevice">
      <summary>Type is VirtualDevice</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DeviceType.DatabaseSnapshot">
      <summary>Type is DatabaseSnapshot</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropAggregateStatement">
      <summary>Represents the DROP AGGREGATE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropAggregateStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropAggregateStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropAggregateStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropAggregateStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropAlterFullTextIndexAction">
      <summary>Represents a DROP action for an ALTER FULLTEXT INDEX statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropAlterFullTextIndexAction.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropAlterFullTextIndexAction" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropAlterFullTextIndexAction.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropAlterFullTextIndexAction.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DropAlterFullTextIndexAction.Columns">
      <summary>Gets a list of column names to drop.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DropAlterFullTextIndexAction.WithNoPopulation">
      <summary>Gets or sets whether WITH NO POPULATION is specified.</summary>
      <returns>Returns true if WITH NO POPULATION was specified, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropApplicationRoleStatement">
      <summary>Represents the DROP APPLICATION ROLE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropApplicationRoleStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropApplicationRoleStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropApplicationRoleStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropApplicationRoleStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropAssemblyStatement">
      <summary>Represents the DROP ASSEMBLY statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropAssemblyStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropAssemblyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropAssemblyStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropAssemblyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DropAssemblyStatement.WithNoDependents">
      <summary>Gets or sets whether WITH NO DEPENDENTS is defined.</summary>
      <returns>Returns true if WITH NO DEPENDENTS is defined, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropAsymmetricKeyStatement">
      <summary>Represents the DROP ASYMMETRIC KEY statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropAsymmetricKeyStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropAsymmetricKeyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropAsymmetricKeyStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropAsymmetricKeyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DropAsymmetricKeyStatement.RemoveProviderKey">
      <summary>Gets or sets whether the DROP PROVIDER KEY clause was specified.</summary>
      <returns>Returns true if the DROP PROVIDER KEY clause was specified, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropBrokerPriorityStatement">
      <summary>Represents the DROP BROKER PRIORITY statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropBrokerPriorityStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropBrokerPriorityStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropBrokerPriorityStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropBrokerPriorityStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropCertificateStatement">
      <summary>Represents the DROP CERTIFICATE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropCertificateStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropCertificateStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropCertificateStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropCertificateStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropChildObjectsStatement">
      <summary>Represents a DROP that has child objects (DROP INDEX or STATISTICS).</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropChildObjectsStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropChildObjectsStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropChildObjectsStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DropChildObjectsStatement.Objects">
      <summary>Gets a list of child objects to be dropped.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintFragmentOption">
      <summary>The abstract base class for drop clustered constraints.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintFragmentOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintFragmentOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintFragmentOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintFragmentOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintFragmentOption.TSqlFragment">
      <summary>Gets or sets a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.FilegroupOrPartitionScheme" /> or literal of type integer.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintOption">
      <summary>Represents a drop clustered constraint option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintOption.Option">
      <summary>Gets or sets the option type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintOptionType" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintOptionType">
      <summary>Specifies the constraint option type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintOptionType.MaxDop">
      <summary>Type is MaxDop</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintOptionType.Online">
      <summary>Type is Online</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintOptionType.MoveTo">
      <summary>Type is MoveTo</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintStateOption">
      <summary>Represents the drop clustered constraint state option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintStateOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintStateOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintStateOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintStateOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintStateOption.OptionState">
      <summary>Gets or sets the constraint option state value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OptionState" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropContractStatement">
      <summary>Represents the DROP CONTRACT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropContractStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropContractStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropContractStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropContractStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropCredentialStatement">
      <summary>Represents the DROP CREDENTIAL statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropCredentialStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropCredentialStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropCredentialStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropCredentialStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropCryptographicProviderStatement">
      <summary>Represents the DROP CRYPTOGRAPHIC PROVIDER statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropCryptographicProviderStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropCryptographicProviderStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropCryptographicProviderStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropCryptographicProviderStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropDatabaseAuditSpecificationStatement">
      <summary>Represents the DROP DATABASE AUDIT SPECIFICATION statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropDatabaseAuditSpecificationStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropDatabaseAuditSpecificationStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropDatabaseAuditSpecificationStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropDatabaseAuditSpecificationStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropDatabaseEncryptionKeyStatement">
      <summary>Represents the DROP DATABASE ENCRYPTION KEY statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropDatabaseEncryptionKeyStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropDatabaseEncryptionKeyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropDatabaseEncryptionKeyStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropDatabaseEncryptionKeyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropDatabaseStatement">
      <summary>Represents the DROP DATABASE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropDatabaseStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropDatabaseStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropDatabaseStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropDatabaseStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DropDatabaseStatement.Databases">
      <summary>Gets a list of databases to drop.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropDefaultStatement">
      <summary>Represents the DROP DEFAULT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropDefaultStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropDefaultStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropDefaultStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropDefaultStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropEndpointStatement">
      <summary>Represents the DROP ENDPOINT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropEndpointStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropEndpointStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropEndpointStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropEndpointStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropEventNotificationStatement">
      <summary>Represents the DROP EVENT NOTIFICATION statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropEventNotificationStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropEventNotificationStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropEventNotificationStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropEventNotificationStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DropEventNotificationStatement.Notifications">
      <summary>Gets a list of the names of event notifications to be dropped.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DropEventNotificationStatement.Scope">
      <summary>Gets or sets the scope for event notification.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationObjectScope" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropEventSessionStatement">
      <summary>Represents the DROP EVENT SESSION statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropEventSessionStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropEventSessionStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropEventSessionStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropEventSessionStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropFullTextCatalogStatement">
      <summary>Represents the DROP FULLTEXT CATALOG statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropFullTextCatalogStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropFullTextCatalogStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropFullTextCatalogStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropFullTextCatalogStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropFullTextIndexStatement">
      <summary>Represents the DROP FULLTEXT INDEX statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropFullTextIndexStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropFullTextIndexStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropFullTextIndexStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropFullTextIndexStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DropFullTextIndexStatement.TableName">
      <summary>Gets or sets the name of the table with the fulltext index.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropFullTextStopListStatement">
      <summary>Represents the DROP FULLTEXT STOPLIST statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropFullTextStopListStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropFullTextStopListStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropFullTextStopListStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropFullTextStopListStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropFunctionStatement">
      <summary>Represents the DROP FUNCTION statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropFunctionStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropFunctionStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropFunctionStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropFunctionStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropIndexClause">
      <summary>Represents a relational or XML index in a DROP INDEX statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropIndexClause.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropIndexClause" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropIndexClause.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropIndexClause.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DropIndexClause.FileStreamOn">
      <summary>Gets or sets an optional specification of the file stream.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DropIndexClause.Index">
      <summary>Gets or sets the index name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DropIndexClause.MoveTo">
      <summary>Gets or sets the file group or partition scheme.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.FilegroupOrPartitionScheme" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DropIndexClause.Object">
      <summary>Gets or sets the table or view name.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DropIndexClause.Options">
      <summary>Gets a list of the options for the DROP INDEX statement.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropIndexClauseBase">
      <summary>Represents a single clause in the DROP INDEX statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropIndexClauseBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropIndexClauseBase" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropIndexClauseBase.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropIndexStatement">
      <summary>Represents the DROP INDEX statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropIndexStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropIndexStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropIndexStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropIndexStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DropIndexStatement.DropIndexClauses">
      <summary>Gets a list of indices (possibly with options) to be dropped.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropLoginStatement">
      <summary>Represents the DROP LOGIN statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropLoginStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropLoginStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropLoginStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropLoginStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropMasterKeyStatement">
      <summary>Represents the DROP MASTER KEY statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropMasterKeyStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropMasterKeyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropMasterKeyStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropMasterKeyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropMessageTypeStatement">
      <summary>Represents the DROP MESSAGE TYPE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropMessageTypeStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropMessageTypeStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropMessageTypeStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropMessageTypeStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropObjectsStatement">
      <summary>Represents a DROP statement that references a list of objects.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropObjectsStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropObjectsStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropObjectsStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DropObjectsStatement.Objects">
      <summary>Gets a list of objects to be dropped.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropPartitionFunctionStatement">
      <summary>Represents the DROP PARTITION FUNCTION statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropPartitionFunctionStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropPartitionFunctionStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropPartitionFunctionStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropPartitionFunctionStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropPartitionSchemeStatement">
      <summary>Represents the DROP PARTITION SCHEME statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropPartitionSchemeStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropPartitionSchemeStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropPartitionSchemeStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropPartitionSchemeStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropProcedureStatement">
      <summary>Represents the DROP PROCEDURE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropProcedureStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropProcedureStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropProcedureStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropProcedureStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropQueueStatement">
      <summary>Represents the DROP QUEUE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropQueueStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropQueueStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropQueueStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropQueueStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DropQueueStatement.Name">
      <summary>Gets or sets the name of the queue.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropRemoteServiceBindingStatement">
      <summary>Represents the DROP REMOTE SERVICE BINDING statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropRemoteServiceBindingStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropRemoteServiceBindingStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropRemoteServiceBindingStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropRemoteServiceBindingStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropResourcePoolStatement">
      <summary>Represents the DROP RESOURCE POOL statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropResourcePoolStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropResourcePoolStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropResourcePoolStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropResourcePoolStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropRoleStatement">
      <summary>Represents the DROP ROLE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropRoleStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropRoleStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropRoleStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropRoleStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropRouteStatement">
      <summary>Represents the DROP ROUTE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropRouteStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropRouteStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropRouteStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropRouteStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropRuleStatement">
      <summary>Represents the DROP RULE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropRuleStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropRuleStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropRuleStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropRuleStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropSchemaBehavior">
      <summary>Specifies the DROP SCHEMA behavior.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DropSchemaBehavior.None">
      <summary>Behavior is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DropSchemaBehavior.Cascade">
      <summary>Behavior is Cascade</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.DropSchemaBehavior.Restrict">
      <summary>Behavior is Restrict</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropSchemaStatement">
      <summary>Represents the DROP SCHEMA statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropSchemaStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropSchemaStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropSchemaStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropSchemaStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DropSchemaStatement.DropBehavior">
      <summary>Gets or sets the DROP SCHEMA behavior value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropSchemaBehavior" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DropSchemaStatement.Schema">
      <summary>Gets or sets the name of the schema to be dropped.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropServerAuditSpecificationStatement">
      <summary>Represents the DROP SERVER AUDIT SPECIFICATION statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropServerAuditSpecificationStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropServerAuditSpecificationStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropServerAuditSpecificationStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropServerAuditSpecificationStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropServerAuditStatement">
      <summary>Represents the DROP SERVER AUDIT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropServerAuditStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropServerAuditStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropServerAuditStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropServerAuditStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropServiceStatement">
      <summary>Represents the DROP SERVICE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropServiceStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropServiceStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropServiceStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropServiceStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropSignatureStatement">
      <summary>Represents the DROP SIGNATURE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropSignatureStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropSignatureStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropSignatureStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropSignatureStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropStatisticsStatement">
      <summary>Represents the DROP STATISTICS statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropStatisticsStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropStatisticsStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropStatisticsStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropStatisticsStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropSymmetricKeyStatement">
      <summary>Represents the DROP SYMMETRIC KEY statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropSymmetricKeyStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropSymmetricKeyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropSymmetricKeyStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropSymmetricKeyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DropSymmetricKeyStatement.RemoveProviderKey">
      <summary>Gets or sets whether the DROP PROVIDER KEY clause was specified.</summary>
      <returns>Returns true if the DROP PROVIDER KEY clause was specified, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropSynonymStatement">
      <summary>Represents the DROP SYNONYM statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropSynonymStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropSynonymStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropSynonymStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropSynonymStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropTableStatement">
      <summary>Represents the DROP TABLE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropTableStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropTableStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropTableStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropTableStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropTriggerStatement">
      <summary>Represents the DROP TRIGGER statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropTriggerStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropTriggerStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropTriggerStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropTriggerStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DropTriggerStatement.TriggerScope">
      <summary>Gets or sets the trigger scope value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TriggerScope" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropTypeStatement">
      <summary>Represents the DROP TYPE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropTypeStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropTypeStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropTypeStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropTypeStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DropTypeStatement.Name">
      <summary>Gets or sets the name of the type to drop.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropUnownedObjectStatement">
      <summary>Represents a DROP statement for unowned objects.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropUnownedObjectStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropUnownedObjectStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropUnownedObjectStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DropUnownedObjectStatement.Name">
      <summary>Gets or sets the name of the object to be dropped.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropUserStatement">
      <summary>Represents the DROP USER statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropUserStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropUserStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropUserStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropUserStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropViewStatement">
      <summary>Represents the DROP VIEW statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropViewStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropViewStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropViewStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropViewStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropWorkloadGroupStatement">
      <summary>Represents the DROP WORKLOAD GROUP statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropWorkloadGroupStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropWorkloadGroupStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropWorkloadGroupStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropWorkloadGroupStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.DropXmlSchemaCollectionStatement">
      <summary>Represents the DROP XML SCHEMA COLLECTION statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropXmlSchemaCollectionStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DropXmlSchemaCollectionStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropXmlSchemaCollectionStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.DropXmlSchemaCollectionStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.DropXmlSchemaCollectionStatement.Name">
      <summary>Gets or sets the name of the collection.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EnabledDisabledPayloadOption">
      <summary>Represents an option that can be either ENABLED or DISABLED.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EnabledDisabledPayloadOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EnabledDisabledPayloadOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EnabledDisabledPayloadOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EnabledDisabledPayloadOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EnabledDisabledPayloadOption.IsEnabled">
      <summary>Gets or sets whether the option value is ENABLED.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EnableDisableOptionType">
      <summary>Specifies the option type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EnableDisableOptionType.None">
      <summary>Option is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EnableDisableOptionType.Enable">
      <summary>Option is Enable</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EnableDisableOptionType.Disable">
      <summary>Option is Disable</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EnableDisableTriggerStatement">
      <summary>Defines the modifications to triggers, which can be enabled or disabled.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EnableDisableTriggerStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EnableDisableTriggerStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EnableDisableTriggerStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EnableDisableTriggerStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EnableDisableTriggerStatement.All">
      <summary>Gets or sets whether the modification is for all triggers.</summary>
      <returns>Returns true if the modification is for all triggers, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EnableDisableTriggerStatement.TriggerEnforcement">
      <summary>Gets or sets the new enforcement option on the trigger.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TriggerEnforcement" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EnableDisableTriggerStatement.TriggerNames">
      <summary>Gets a list of the names of triggers to be modified.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EnableDisableTriggerStatement.TriggerObject">
      <summary>Gets or sets the target.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TriggerObject" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionAlgorithm">
      <summary>Specifies the encryption algorithm.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionAlgorithm.None">
      <summary>Algorithm is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionAlgorithm.RC2">
      <summary>Algorithm is RC2</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionAlgorithm.RC4">
      <summary>Algorithm is RC4</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionAlgorithm.RC4_128">
      <summary>Algorithm is RC4_128</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionAlgorithm.Des">
      <summary>Algorithm is Des</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionAlgorithm.TripleDes">
      <summary>Algorithm is TripleDes</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionAlgorithm.DesX">
      <summary>Algorithm is DesX</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionAlgorithm.Aes128">
      <summary>Algorithm is Aes128</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionAlgorithm.Aes192">
      <summary>Algorithm is Aes192</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionAlgorithm.Aes256">
      <summary>Algorithm is Aes256</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionAlgorithm.Rsa512">
      <summary>Algorithm is Rsa512</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionAlgorithm.Rsa1024">
      <summary>Algorithm is Rsa1024</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionAlgorithm.Rsa2048">
      <summary>Algorithm is Rsa2048</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionAlgorithmPreference">
      <summary>Specifies the encryption algorithm preference.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionAlgorithmPreference.NotSpecified">
      <summary>Preference is NotSpecified</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionAlgorithmPreference.Aes">
      <summary>Preference is Aes</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionAlgorithmPreference.Rc4">
      <summary>Preference is Rc4</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionPayloadOption">
      <summary>Represents the ENCRYPTION payload option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionPayloadOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionPayloadOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionPayloadOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionPayloadOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionPayloadOption.AlgorithmPartOne">
      <summary>Gets or sets the first preference algorithm, if specified.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionAlgorithmPreference" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionPayloadOption.AlgorithmPartTwo">
      <summary>Gets or sets the second preference algorithm, if specified.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionAlgorithmPreference" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionPayloadOption.EncryptionSupport">
      <summary>Gets or sets a value that describes how encryption is used in the process.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EndpointEncryptionSupport" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionSource">
      <summary>Represents the base class for different key/certificate sources.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionSource" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EncryptionSource.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EndConversationStatement">
      <summary>Represents the END CONVERSATION statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EndConversationStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EndConversationStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EndConversationStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EndConversationStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EndConversationStatement.Conversation">
      <summary>Gets or sets a conversation handle.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EndConversationStatement.ErrorCode">
      <summary>Gets or sets an error code, if the WITH ERROR clause was specified.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EndConversationStatement.ErrorDescription">
      <summary>Gets or sets an error description, if the WITH ERROR clause was specified.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EndConversationStatement.WithCleanup">
      <summary>Gets or sets whether the WITH CLEANUP option is specified.</summary>
      <returns>Returns true if the WITH CLEANUP option is specified, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EndpointAffinity">
      <summary>Represents the AFFINITY option in CREATE/ALTER ENDPOINT statements.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EndpointAffinity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EndpointAffinity" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EndpointAffinity.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EndpointAffinity.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EndpointAffinity.Kind">
      <summary>Gets or sets the affinity kind.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AffinityKind" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EndpointAffinity.Value">
      <summary>Gets or sets the affinity value.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EndpointEncryptionSupport">
      <summary>Specifies the endpoint encryption support.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointEncryptionSupport.NotSpecified">
      <summary>Support is NotSpecified</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointEncryptionSupport.Disabled">
      <summary>Support is Disabled</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointEncryptionSupport.Supported">
      <summary>Support is Supported</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointEncryptionSupport.Required">
      <summary>Support is Required</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocol">
      <summary>Specifies the endpoint protocol.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocol.None">
      <summary>Protocol is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocol.Http">
      <summary>Protocol is Http</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocol.Tcp">
      <summary>Protocol is Tcp</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocolOption">
      <summary>Represents a single protocol option in a CREATE ENDPOINT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocolOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocolOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocolOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocolOption.Kind">
      <summary>Gets or sets the option kind.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocolOptions" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocolOptions">
      <summary>Specifies the endpoint protocol options.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocolOptions.None">
      <summary>Option is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocolOptions.HttpAuthenticationRealm">
      <summary>Option is HttpAuthenticationRealm</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocolOptions.HttpAuthentication">
      <summary>Option is HttpAuthentication</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocolOptions.HttpClearPort">
      <summary>Option is HttpClearPort</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocolOptions.HttpCompression">
      <summary>Option is HttpCompression</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocolOptions.HttpDefaultLogonDomain">
      <summary>Option is HttpDefaultLogonDomain</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocolOptions.HttpPath">
      <summary>Option is HttpPath</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocolOptions.HttpPorts">
      <summary>Option is HttpPorts</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocolOptions.HttpSite">
      <summary>Option is HttpSite</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocolOptions.HttpSslPort">
      <summary>Option is HttpSslPort</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocolOptions.HttpOptions">
      <summary>Option is HttpOptions</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocolOptions.TcpListenerIp">
      <summary>Option is TcpListenerIp</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocolOptions.TcpListenerPort">
      <summary>Option is TcpListenerPort</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocolOptions.TcpOptions">
      <summary>Option is TcpOptions</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EndpointState">
      <summary>Specifies the endpoint state.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointState.NotSpecified">
      <summary>State is NotSpecified</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointState.Disabled">
      <summary>State is Disabled</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointState.Started">
      <summary>State is Started</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointState.Stopped">
      <summary>State is Stopped</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EndpointType">
      <summary>Specifies the endpoint type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointType.NotSpecified">
      <summary>Type is NotSpecified</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointType.Soap">
      <summary>Type is Soap</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointType.TSql">
      <summary>Type is Transact-SQL</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointType.ServiceBroker">
      <summary>Type is ServiceBroker</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EndpointType.DatabaseMirroring">
      <summary>Type is DatabaseMirroring</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EventDeclaration">
      <summary>Represents the event declaration.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EventDeclaration.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EventDeclaration" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EventDeclaration.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EventDeclaration.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EventDeclaration.EventDeclarationActionParameters">
      <summary>Gets a list of event declaration parameters for an ACTION clause.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EventDeclaration.EventDeclarationPredicateParameter">
      <summary>Gets or sets the event declaration parameter for a WHERE clause.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EventDeclaration.EventDeclarationSetParameters">
      <summary>Gets a list of event declaration parameters for a SET clause.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EventDeclaration.ObjectName">
      <summary>Gets or sets the event object name.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionObjectName" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EventDeclarationCompareFunctionParameter">
      <summary>Represents the event declaration predicate parameter.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EventDeclarationCompareFunctionParameter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EventDeclarationCompareFunctionParameter" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EventDeclarationCompareFunctionParameter.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EventDeclarationCompareFunctionParameter.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EventDeclarationCompareFunctionParameter.EventValue">
      <summary>Gets or sets the event value in a compare function declaration predicate.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EventDeclarationCompareFunctionParameter.Name">
      <summary>Gets or sets the event compare function declaration name.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionObjectName" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EventDeclarationCompareFunctionParameter.SourceDeclaration">
      <summary>Gets or sets the event source declaration name.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SourceDeclaration" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EventDeclarationSetParameter">
      <summary>Represents the event declaration set parameter.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EventDeclarationSetParameter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EventDeclarationSetParameter" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EventDeclarationSetParameter.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EventDeclarationSetParameter.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EventDeclarationSetParameter.EventField">
      <summary>Gets or sets the event field in a SET clause.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EventDeclarationSetParameter.EventValue">
      <summary>Gets or sets the event value in a SET clause.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EventGroupContainer">
      <summary>Represents an event type.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EventGroupContainer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EventGroupContainer" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EventGroupContainer.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EventGroupContainer.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EventGroupContainer.EventGroup">
      <summary>Gets or sets the event group type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup">
      <summary>Specifies the event group.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.Unknown">
      <summary>Group is Unknown</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlApplicationRoleEvents">
      <summary>Group is DdlApplicationRoleEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlAssemblyEvents">
      <summary>Group is DdlAssemblyEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlAuthorizationDatabaseEvents">
      <summary>Group is DdlAuthorizationDatabaseEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlCertificateEvents">
      <summary>Group is DdlCertificateEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlContractEvents">
      <summary>Group is DdlContractEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlDatabaseLevelEvents">
      <summary>Group is DdlDatabaseLevelEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlDatabaseSecurityEvents">
      <summary>Group is DdlDatabaseSecurityEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlEventNotificationEvents">
      <summary>Group is DdlEventNotificationEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlFunctionEvents">
      <summary>Group is DdlFunctionEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlGdrDatabaseEvents">
      <summary>Group is DdlGdrDatabaseEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlIndexEvents">
      <summary>Group is DdlIndexEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlMessageTypeEvents">
      <summary>Group is DdlMessageTypeEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlPartitionEvents">
      <summary>Group is DdlPartitionEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlPartitionFunctionEvents">
      <summary>Group is DdlPartitionFunctionEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlPartitionSchemeEvents">
      <summary>Group is DdlPartitionSchemeEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlProcedureEvents">
      <summary>Group is DdlProcedureEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlQueueEvents">
      <summary>Group is DdlQueueEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlRemoteServiceBindingEvents">
      <summary>Group is DdlRemoteServiceBindingEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlRoleEvents">
      <summary>Group is DdlRoleEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlRouteEvents">
      <summary>Group is DdlRouteEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlSchemaEvents">
      <summary>Group is DdlSchemaEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlServiceEvents">
      <summary>Group is DdlServiceEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlSsbEvents">
      <summary>Group is DdlSsbEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlStatisticsEvents">
      <summary>Group is DdlStatisticsEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlSynonymEvents">
      <summary>Group is DdlSynonymEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlTableEvents">
      <summary>Group is DdlTableEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlTableViewEvents">
      <summary>Group is DdlTableViewEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlTriggerEvents">
      <summary>Group is DdlTriggerEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlTypeEvents">
      <summary>Group is DdlTypeEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlUserEvents">
      <summary>Group is DdlUserEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlViewEvents">
      <summary>Group is DdlViewEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlXmlSchemaCollectionEvents">
      <summary>Group is DdlXmlSchemaCollectionEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlAuthorizationServerEvents">
      <summary>Group is DdlAuthorizationServerEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlEndpointEvents">
      <summary>Group is DdlEndpointEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlEvents">
      <summary>Group is DdlEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlGdrServerEvents">
      <summary>Group is DdlGdrServerEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlLoginEvents">
      <summary>Group is DdlLoginEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlServerLevelEvents">
      <summary>Group is DdlServerLevelEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlServerSecurityEvents">
      <summary>Group is DdlServerSecurityEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlAsymmetricKeyEvents">
      <summary>Group is DdlAsymmetricKeyEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlBrokerPriorityEvents">
      <summary>Group is DdlBrokerPriorityEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlCryptoSignatureEvents">
      <summary>Group is DdlCryptoSignatureEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlDatabaseAuditSpecificationEvents">
      <summary>Group is DdlDatabaseAuditSpecificationEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlDatabaseEncryptionKeyEvents">
      <summary>Group is DdlDatabaseEncryptionKeyEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlDefaultEvents">
      <summary>Group is DdlDefaultEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlExtendedPropertyEvents">
      <summary>Group is DdlExtendedPropertyEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlFullTextCatalogEvents">
      <summary>Group is DdlFullTextCatalogEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlFullTextStopListEvents">
      <summary>Group is DdlFullTextStopListEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlMasterKeyEvents">
      <summary>Group is DdlMasterKeyEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlPlanGuideEvents">
      <summary>Group is DdlPlanGuideEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlRuleEvents">
      <summary>Group is DdlRuleEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlSymmetricKeyEvents">
      <summary>Group is DdlSymmetricKeyEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlCredentialEvents">
      <summary>Group is DdlCredentialEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlDatabaseEvents">
      <summary>Group is DdlDatabaseEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlCryptographicProviderEvents">
      <summary>Group is DdlCryptographicProviderEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlEventSessionEvents">
      <summary>Group is DdlEventSessionEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlExtendedProcedureEvents">
      <summary>Group is DdlExtendedProcedureEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlLinkedServerEvents">
      <summary>Group is DdlLinkedServerEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlLinkedServerLoginEvents">
      <summary>Group is DdlLinkedServerLoginEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlMessageEvents">
      <summary>Group is DdlMessageEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlRemoteServerEvents">
      <summary>Group is DdlRemoteServerEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlResourceGovernorEvents">
      <summary>Group is DdlResourceGovernorEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlResourcePool">
      <summary>Group is DdlResourcePool</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlServerAuditEvents">
      <summary>Group is DdlServerAuditEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlServerAuditSpecificationEvents">
      <summary>Group is DdlServerAuditSpecificationEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlServiceMasterKeyEvents">
      <summary>Group is DdlServiceMasterKeyEvents</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.DdlWorkloadGroup">
      <summary>Group is DdlWorkloadGroup</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.TrcClr">
      <summary>Group is TrcClr</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.TrcDatabase">
      <summary>Group is TrcDatabase</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.TrcDeprecation">
      <summary>Group is TrcDeprecation</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.TrcErrorsAndWarnings">
      <summary>Group is TrcErrorsAndWarnings</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.TrcFullText">
      <summary>Group is TrcFullText</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.TrcLocks">
      <summary>Group is TrcLocks</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.TrcObjects">
      <summary>Group is TrcObjects</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.TrcOledb">
      <summary>Group is TrcOledb</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.TrcPerformance">
      <summary>Group is TrcPerformance</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.TrcQueryNotifications">
      <summary>Group is TrcQueryNotifications</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.TrcSecurityAudit">
      <summary>Group is TrcSecurityAudit</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.TrcServer">
      <summary>Group is TrcServer</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.TrcStoredProcedures">
      <summary>Group is TrcStoredProcedures</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.TrcTSql">
      <summary>Group is TrcTSql</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.TrcUserConfigurable">
      <summary>Group is TrcUserConfigurable</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventGroup.TrcAllEvents">
      <summary>Group is TrcAllEvents</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType">
      <summary>Specifies the event notification event type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.Unknown">
      <summary>Type is Unknown</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AddRoleMember">
      <summary>Type is AddRoleMember</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterApplicationRole">
      <summary>Type is AlterApplicationRole</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterAssembly">
      <summary>Type is AlterAssembly</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterAuthorizationDatabase">
      <summary>Type is AlterAuthorizationDatabase</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterCertificate">
      <summary>Type is AlterCertificate</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterFunction">
      <summary>Type is AlterFunction</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterIndex">
      <summary>Type is AlterIndex</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterMessageType">
      <summary>Type is AlterMessageType</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterPartitionFunction">
      <summary>Type is AlterPartitionFunction</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterPartitionScheme">
      <summary>Type is AlterPartitionScheme</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterProcedure">
      <summary>Type is AlterProcedure</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterQueue">
      <summary>Type is AlterQueue</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterRemoteServiceBinding">
      <summary>Type is AlterRemoteServiceBinding</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterRole">
      <summary>Type is AlterRole</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterRoute">
      <summary>Type is AlterRoute</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterSchema">
      <summary>Type is AlterSchema</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterService">
      <summary>Type is AlterService</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterTable">
      <summary>Type is AlterTable</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterTrigger">
      <summary>Type is AlterTrigger</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterUser">
      <summary>Type is AlterUser</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterView">
      <summary>Type is AlterView</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterXmlSchemaCollection">
      <summary>Type is AlterXmlSchemaCollection</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateApplicationRole">
      <summary>Type is CreateApplicationRole</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateAssembly">
      <summary>Type is CreateAssembly</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateCertificate">
      <summary>Type is CreateCertificate</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateContract">
      <summary>Type is CreateContract</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateEventNotification">
      <summary>Type is CreateEventNotification</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateFunction">
      <summary>Type is CreateFunction</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateIndex">
      <summary>Type is CreateIndex</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateMessageType">
      <summary>Type is CreateMessageType</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreatePartitionFunction">
      <summary>Type is CreatePartitionFunction</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreatePartitionScheme">
      <summary>Type is CreatePartitionScheme</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateProcedure">
      <summary>Type is CreateProcedure</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateQueue">
      <summary>Type is CreateQueue</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateRemoteServiceBinding">
      <summary>Type is CreateRemoteServiceBinding</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateRole">
      <summary>Type is CreateRole</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateRoute">
      <summary>Type is CreateRoute</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateSchema">
      <summary>Type is CreateSchema</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateService">
      <summary>Type is CreateService</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateStatistics">
      <summary>Type is CreateStatistics</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateSynonym">
      <summary>Type is CreateSynonym</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateTable">
      <summary>Type is CreateTable</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateTrigger">
      <summary>Type is CreateTrigger</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateType">
      <summary>Type is CreateType</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateUser">
      <summary>Type is CreateUser</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateView">
      <summary>Type is CreateView</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateXmlIndex">
      <summary>Type is CreateXmlIndex</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateXmlSchemaCollection">
      <summary>Type is CreateXmlSchemaCollection</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DenyDatabase">
      <summary>Type is DenyDatabase</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropApplicationRole">
      <summary>Type is DropApplicationRole</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropAssembly">
      <summary>Type is DropAssembly</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropCertificate">
      <summary>Type is DropCertificate</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropContract">
      <summary>Type is DropContract</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropEventNotification">
      <summary>Type is DropEventNotification</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropFunction">
      <summary>Type is DropFunction</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropIndex">
      <summary>Type is DropIndex</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropMessageType">
      <summary>Type is DropMessageType</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropPartitionFunction">
      <summary>Type is DropPartitionFunction</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropPartitionScheme">
      <summary>Type is DropPartitionScheme</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropProcedure">
      <summary>Type is DropProcedure</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropQueue">
      <summary>Type is DropQueue</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropRemoteServiceBinding">
      <summary>Type is DropRemoteServiceBinding</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropRole">
      <summary>Type is DropRole</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropRoleMember">
      <summary>Type is DropRoleMember</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropRoute">
      <summary>Type is DropRoute</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropSchema">
      <summary>Type is DropSchema</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropService">
      <summary>Type is DropService</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropStatistics">
      <summary>Type is DropStatistics</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropSynonym">
      <summary>Type is DropSynonym</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropTable">
      <summary>Type is DropTable</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropTrigger">
      <summary>Type is DropTrigger</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropType">
      <summary>Type is DropType</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropUser">
      <summary>Type is DropUser</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropView">
      <summary>Type is DropView</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropXmlSchemaCollection">
      <summary>Type is DropXmlSchemaCollection</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.GrantDatabase">
      <summary>Type is GrantDatabase</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.RevokeDatabase">
      <summary>Type is RevokeDatabase</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.UpdateStatistics">
      <summary>Type is UpdateStatistics</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AddServerRoleMember">
      <summary>Type is AddServerRoleMember</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterAuthorizationServer">
      <summary>Type is AlterAuthorizationServer</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterDatabase">
      <summary>Type is AlterDatabase</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterEndpoint">
      <summary>Type is AlterEndpoint</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterLogin">
      <summary>Type is AlterLogin</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateDatabase">
      <summary>Type is CreateDatabase</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateEndpoint">
      <summary>Type is CreateEndpoint</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateLogin">
      <summary>Type is CreateLogin</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DenyServer">
      <summary>Type is DenyServer</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropDatabase">
      <summary>Type is DropDatabase</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropEndpoint">
      <summary>Type is DropEndpoint</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropLogin">
      <summary>Type is DropLogin</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropServerRoleMember">
      <summary>Type is DropServerRoleMember</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.GrantServer">
      <summary>Type is GrantServer</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.RevokeServer">
      <summary>Type is RevokeServer</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AddSignature">
      <summary>Type is AddSignature</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AddSignatureSchemaObject">
      <summary>Type is AddSignatureSchemaObject</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterAsymmetricKey">
      <summary>Type is AlterAsymmetricKey</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterBrokerPriority">
      <summary>Type is AlterBrokerPriority</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterDatabaseAuditSpecification">
      <summary>Type is AlterDatabaseAuditSpecification</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterDatabaseEncryptionKey">
      <summary>Type is AlterDatabaseEncryptionKey</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterExtendedProperty">
      <summary>Type is AlterExtendedProperty</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterFullTextCatalog">
      <summary>Type is AlterFullTextCatalog</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterFullTextIndex">
      <summary>Type is AlterFullTextIndex</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterFullTextStopList">
      <summary>Type is AlterFullTextStopList</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterMasterKey">
      <summary>Type is AlterMasterKey</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterPlanGuide">
      <summary>Type is AlterPlanGuide</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterSymmetricKey">
      <summary>Type is AlterSymmetricKey</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.BindDefault">
      <summary>Type is BindDefault</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.BindRule">
      <summary>Type is BindRule</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateAsymmetricKey">
      <summary>Type is CreateAsymmetricKey</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateBrokerPriority">
      <summary>Type is CreateBrokerPriority</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateDatabaseAuditSpecification">
      <summary>Type is CreateDatabaseAuditSpecification</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateDatabaseEncryptionKey">
      <summary>Type is CreateDatabaseEncryptionKey</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateDefault">
      <summary>Type is CreateDefault</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateExtendedProperty">
      <summary>Type is CreateExtendedProperty</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateFullTextCatalog">
      <summary>Type is CreateFullTextCatalog</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateFullTextIndex">
      <summary>Type is CreateFullTextIndex</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateFullTextStopList">
      <summary>Type is CreateFullTextStopList</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateMasterKey">
      <summary>Type is CreateMasterKey</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreatePlanGuide">
      <summary>Type is CreatePlanGuide</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateRule">
      <summary>Type is CreateRule</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateSpatialIndex">
      <summary>Type is CreateSpatialIndex</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateSymmetricKey">
      <summary>Type is CreateSymmetricKey</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropAsymmetricKey">
      <summary>Type is DropAsymmetricKey</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropBrokerPriority">
      <summary>Type is DropBrokerPriority</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropDatabaseAuditSpecification">
      <summary>Type is DropDatabaseAuditSpecification</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropDatabaseEncryptionKey">
      <summary>Type is DropDatabaseEncryptionKey</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropDefault">
      <summary>Type is DropDefault</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropExtendedProperty">
      <summary>Type is DropExtendedProperty</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropFullTextCatalog">
      <summary>Type is DropFullTextCatalog</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropFullTextIndex">
      <summary>Type is DropFullTextIndex</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropFullTextStopList">
      <summary>Type is DropFullTextStopList</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropMasterKey">
      <summary>Type is DropMasterKey</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropPlanGuide">
      <summary>Type is DropPlanGuide</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropRule">
      <summary>Type is DropRule</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropSignature">
      <summary>Type is DropSignature</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropSignatureSchemaObject">
      <summary>Type is DropSignatureSchemaObject</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropSymmetricKey">
      <summary>Type is DropSymmetricKey</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.Rename">
      <summary>Type is Rename</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.UnbindDefault">
      <summary>Type is UnbindDefault</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.UnbindRule">
      <summary>Type is UnbindRule</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterCredential">
      <summary>Type is AlterCredential</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterCryptographicProvider">
      <summary>Type is AlterCryptographicProvider</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterEventSession">
      <summary>Type is AlterEventSession</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterInstance">
      <summary>Type is AlterInstance</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterLinkedServer">
      <summary>Type is AlterLinkedServer</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterMessage">
      <summary>Type is AlterMessage</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterRemoteServer">
      <summary>Type is AlterRemoteServer</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterResourceGovernorConfig">
      <summary>Type is AlterResourceGovernorConfig</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterResourcePool">
      <summary>Type is AlterResourcePool</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterServerAudit">
      <summary>Type is AlterServerAudit</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterServerAuditSpecification">
      <summary>Type is AlterServerAuditSpecification</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterServiceMasterKey">
      <summary>Type is AlterServiceMasterKey</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AlterWorkloadGroup">
      <summary>Type is AlterWorkloadGroup</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateCredential">
      <summary>Type is CreateCredential</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateCryptographicProvider">
      <summary>Type is CreateCryptographicProvider</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateEventSession">
      <summary>Type is CreateEventSession</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateExtendedProcedure">
      <summary>Type is CreateExtendedProcedure</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateLinkedServer">
      <summary>Type is CreateLinkedServer</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateLinkedServerLogin">
      <summary>Type is CreateLinkedServerLogin</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateMessage">
      <summary>Type is CreateMessage</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateRemoteServer">
      <summary>Type is CreateRemoteServer</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateResourcePool">
      <summary>Type is CreateResourcePool</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateServerAudit">
      <summary>Type is CreateServerAudit</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateServerAuditSpecification">
      <summary>Type is CreateServerAuditSpecification</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CreateWorkloadGroup">
      <summary>Type is CreateWorkloadGroup</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropCredential">
      <summary>Type is DropCredential</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropCryptographicProvider">
      <summary>Type is DropCryptographicProvider</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropEventSession">
      <summary>Type is DropEventSession</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropExtendedProcedure">
      <summary>Type is DropExtendedProcedure</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropLinkedServer">
      <summary>Type is DropLinkedServer</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropLinkedServerLogin">
      <summary>Type is DropLinkedServerLogin</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropMessage">
      <summary>Type is DropMessage</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropRemoteServer">
      <summary>Type is DropRemoteServer</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropResourcePool">
      <summary>Type is DropResourcePool</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropServerAudit">
      <summary>Type is DropServerAudit</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropServerAuditSpecification">
      <summary>Type is DropServerAuditSpecification</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DropWorkloadGroup">
      <summary>Type is DropWorkloadGroup</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AssemblyLoad">
      <summary>Type is AssemblyLoad</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditAddDBUserEvent">
      <summary>Type is AuditAddDBUserEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditAddLoginEvent">
      <summary>Type is AuditAddLoginEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditAddLoginToServerRoleEvent">
      <summary>Type is AuditAddLoginToServerRoleEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditAddMemberToDBRoleEvent">
      <summary>Type is AuditAddMemberToDBRoleEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditAddRoleEvent">
      <summary>Type is AuditAddRoleEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditAppRoleChangePasswordEvent">
      <summary>Type is AuditAppRoleChangePasswordEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditBackupRestoreEvent">
      <summary>Type is AuditBackupRestoreEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditChangeAuditEvent">
      <summary>Type is AuditChangeAuditEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditChangeDatabaseOwner">
      <summary>Type is AuditChangeDatabaseOwner</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditDatabaseManagementEvent">
      <summary>Type is AuditDatabaseManagementEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditDatabaseObjectAccessEvent">
      <summary>Type is AuditDatabaseObjectAccessEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditDatabaseObjectGdrEvent">
      <summary>Type is AuditDatabaseObjectGdrEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditDatabaseObjectManagementEvent">
      <summary>Type is AuditDatabaseObjectManagementEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditDatabaseObjectTakeOwnershipEvent">
      <summary>Type is AuditDatabaseObjectTakeOwnershipEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditDatabaseOperationEvent">
      <summary>Type is AuditDatabaseOperationEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditDatabasePrincipalImpersonationEvent">
      <summary>Type is AuditDatabasePrincipalImpersonationEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditDatabasePrincipalManagementEvent">
      <summary>Type is AuditDatabasePrincipalManagementEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditDatabaseScopeGdrEvent">
      <summary>Type is AuditDatabaseScopeGdrEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditDbccEvent">
      <summary>Type is AuditDbccEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditLogin">
      <summary>Type is AuditLogin</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditLoginChangePasswordEvent">
      <summary>Type is AuditLoginChangePasswordEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditLoginChangePropertyEvent">
      <summary>Type is AuditLoginChangePropertyEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditLoginFailed">
      <summary>Type is AuditLoginFailed</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditLoginGdrEvent">
      <summary>Type is AuditLoginGdrEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditLogout">
      <summary>Type is AuditLogout</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditSchemaObjectAccessEvent">
      <summary>Type is AuditSchemaObjectAccessEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditSchemaObjectGdrEvent">
      <summary>Type is AuditSchemaObjectGdrEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditSchemaObjectManagementEvent">
      <summary>Type is AuditSchemaObjectManagementEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditSchemaObjectTakeOwnershipEvent">
      <summary>Type is AuditSchemaObjectTakeOwnershipEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditServerAlterTraceEvent">
      <summary>Type is AuditServerAlterTraceEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditServerObjectGdrEvent">
      <summary>Type is AuditServerObjectGdrEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditServerObjectManagementEvent">
      <summary>Type is AuditServerObjectManagementEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditServerObjectTakeOwnershipEvent">
      <summary>Type is AuditServerObjectTakeOwnershipEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditServerOperationEvent">
      <summary>Type is AuditServerOperationEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditServerPrincipalImpersonationEvent">
      <summary>Type is AuditServerPrincipalImpersonationEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditServerPrincipalManagementEvent">
      <summary>Type is AuditServerPrincipalManagementEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditServerScopeGdrEvent">
      <summary>Type is AuditServerScopeGdrEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.BlockedProcessReport">
      <summary>Type is BlockedProcessReport</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.BrokerQueueDisabled">
      <summary>Type is BrokerQueueDisabled</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DataFileAutoGrow">
      <summary>Type is DataFileAutoGrow</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DataFileAutoShrink">
      <summary>Type is DataFileAutoShrink</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DatabaseMirroringStateChange">
      <summary>Type is DatabaseMirroringStateChange</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DeadlockGraph">
      <summary>Type is DeadlockGraph</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DeprecationAnnouncement">
      <summary>Type is DeprecationAnnouncement</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DeprecationFinalSupport">
      <summary>Type is DeprecationFinalSupport</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.ErrorLog">
      <summary>Type is ErrorLog</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.EventLog">
      <summary>Type is EventLog</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.Exception">
      <summary>Type is Exception</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.ExchangeSpillEvent">
      <summary>Type is ExchangeSpillEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.ExecutionWarnings">
      <summary>Type is ExecutionWarnings</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.FtCrawlAborted">
      <summary>Type is FtCrawlAborted</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.FtCrawlStarted">
      <summary>Type is FtCrawlStarted</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.FtCrawlStopped">
      <summary>Type is FtCrawlStopped</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.HashWarning">
      <summary>Type is HashWarning</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.LockDeadlock">
      <summary>Type is LockDeadlock</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.LockDeadlockChain">
      <summary>Type is LockDeadlockChain</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.LockEscalation">
      <summary>Type is LockEscalation</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.LogFileAutoGrow">
      <summary>Type is LogFileAutoGrow</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.LogFileAutoShrink">
      <summary>Type is LogFileAutoShrink</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.MissingColumnStatistics">
      <summary>Type is MissingColumnStatistics</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.MissingJoinPredicate">
      <summary>Type is MissingJoinPredicate</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.MountTape">
      <summary>Type is MountTape</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.ObjectAltered">
      <summary>Type is ObjectAltered</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.ObjectCreated">
      <summary>Type is ObjectCreated</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.ObjectDeleted">
      <summary>Type is ObjectDeleted</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.OledbCallEvent">
      <summary>Type is OledbCallEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.OledbDataReadEvent">
      <summary>Type is OledbDataReadEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.OledbErrors">
      <summary>Type is OledbErrors</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.OledbProviderInformation">
      <summary>Type is OledbProviderInformation</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.OledbQueryInterfaceEvent">
      <summary>Type is OledbQueryInterfaceEvent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.QnDynamics">
      <summary>Type is QnDynamics</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.QnParameterTable">
      <summary>Type is QnParameterTable</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.QnSubscription">
      <summary>Type is QnSubscription</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.QnTemplate">
      <summary>Type is QnTemplate</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.QueueActivation">
      <summary>Type is QueueActivation</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.ServerMemoryChange">
      <summary>Type is ServerMemoryChange</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.ShowPlanAllForQueryCompile">
      <summary>Type is ShowPlanAllForQueryCompile</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.ShowPlanXmlForQueryCompile">
      <summary>Type is ShowPlanXmlForQueryCompile</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.ShowPlanXml">
      <summary>Type is ShowPlanXml</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.ShowPlanXmlStatisticsProfile">
      <summary>Type is ShowPlanXmlStatisticsProfile</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.SortWarnings">
      <summary>Type is SortWarnings</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.SpCacheInsert">
      <summary>Type is SpCacheInsert</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.SpCacheMiss">
      <summary>Type is SpCacheMiss</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.SpCacheRemove">
      <summary>Type is SpCacheRemove</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.SpRecompile">
      <summary>Type is SpRecompile</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.SqlStmtRecompile">
      <summary>Type is SqlStmtRecompile</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.TraceFileClose">
      <summary>Type is TraceFileClose</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.UserErrorMessage">
      <summary>Type is UserErrorMessage</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.UserConfigurable0">
      <summary>Type is UserConfigurable0</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.UserConfigurable1">
      <summary>Type is UserConfigurable1</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.UserConfigurable2">
      <summary>Type is UserConfigurable2</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.UserConfigurable3">
      <summary>Type is UserConfigurable3</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.UserConfigurable4">
      <summary>Type is UserConfigurable4</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.UserConfigurable5">
      <summary>Type is UserConfigurable5</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.UserConfigurable6">
      <summary>Type is UserConfigurable6</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.UserConfigurable7">
      <summary>Type is UserConfigurable7</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.UserConfigurable8">
      <summary>Type is UserConfigurable8</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.UserConfigurable9">
      <summary>Type is UserConfigurable9</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.XQueryStaticType">
      <summary>Type is XQueryStaticType</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.AuditFullText">
      <summary>Type is AuditFullText</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.BitmapWarning">
      <summary>Type is BitmapWarning</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.CpuThresholdExceeded">
      <summary>Type is CpuThresholdExceeded</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType.DatabaseSuspectDataPage">
      <summary>Type is DatabaseSuspectDataPage</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationObjectScope">
      <summary>Represents the scope of the event notification.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationObjectScope.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationObjectScope" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationObjectScope.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationObjectScope.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationObjectScope.QueueName">
      <summary>Gets or sets the name of the queue if the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationTarget" /> is of type Queue. Otherwise, the value is NULL.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationObjectScope.Target">
      <summary>Gets or sets the target for event notification.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationTarget" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationTarget">
      <summary>Specifies the event notification target.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationTarget.Unknown">
      <summary>Target is Unknown</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationTarget.Server">
      <summary>Target is Server</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationTarget.Database">
      <summary>Target is Database</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationTarget.Queue">
      <summary>Target is Queue</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EventRetentionSessionOption">
      <summary>Represents the EVENT_RETENTION_MODE session option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EventRetentionSessionOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EventRetentionSessionOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EventRetentionSessionOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EventRetentionSessionOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EventRetentionSessionOption.Value">
      <summary>Gets or sets the event retention values.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionEventRetentionModeType" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionEventRetentionModeType">
      <summary>Specifies the event retention mode type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionEventRetentionModeType.Unknown">
      <summary>Type is Unknown</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionEventRetentionModeType.AllowSingleEventLoss">
      <summary>Type is AllowSingleEventLoss</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionEventRetentionModeType.AllowMultipleEventLoss">
      <summary>Type is AllowMultipleEventLoss</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionEventRetentionModeType.NoEventLoss">
      <summary>Type is NoEventLoss</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionMemoryPartitionModeType">
      <summary>Specifies the memory partition mode type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionMemoryPartitionModeType.Unknown">
      <summary>Type is Unknown</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionMemoryPartitionModeType.None">
      <summary>Type is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionMemoryPartitionModeType.PerNode">
      <summary>Type is PerNode</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionMemoryPartitionModeType.PerCpu">
      <summary>Type is PerCpu</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionObjectName">
      <summary>Represents object names used in CREATE and ALTER EVENT SESSION statements.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionObjectName.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionObjectName" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionObjectName.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionObjectName.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionObjectName.Identifiers">
      <summary>Gets a list of identifiers.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionStatement">
      <summary>Represents the CREATE and ALTER EVENT SESSION statements.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionStatement.EventDeclarations">
      <summary>Gets a list of event declarations.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionStatement.Name">
      <summary>Gets or sets the session name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionStatement.SessionOptions">
      <summary>Gets a list of event session options.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionStatement.TargetDeclarations">
      <summary>Gets a list of target declarations.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EventTypeContainer">
      <summary>Represents the event type.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EventTypeContainer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EventTypeContainer" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EventTypeContainer.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EventTypeContainer.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.EventTypeContainer.EventType">
      <summary>Gets or sets the event type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationEventType" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.EventTypeGroupContainer">
      <summary>Represents the event type or group.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EventTypeGroupContainer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EventTypeGroupContainer" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.EventTypeGroupContainer.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ExecutableEntity">
      <summary>The base class for all the things that can be executed with an EXECUTE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExecutableEntity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ExecutableEntity" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExecutableEntity.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ExecutableEntity.Parameters">
      <summary>Gets a list of execute parameters.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ExecutableProcedureReference">
      <summary>Represents a reference to a procedure by name.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExecutableProcedureReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ExecutableProcedureReference" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExecutableProcedureReference.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExecutableProcedureReference.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ExecutableProcedureReference.AdhocDataSource">
      <summary>Gets or sets the ad hoc data source clause.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AdhocDatasource" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ExecutableProcedureReference.ProcedureReference">
      <summary>Gets or sets a procedure reference.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ExecutableProcedureReference.WithRecompile">
      <summary>Gets or sets whether compile is specified.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ExecutableStringList">
      <summary>Represents strings for commands that are passed to the EXECUTE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExecutableStringList.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ExecutableStringList" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExecutableStringList.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExecutableStringList.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ExecutableStringList.Strings">
      <summary>Gets a list of strings, which can also hold variable names.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsClause">
      <summary>Represents the EXECUTE AS clause.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsClause.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsClause" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsClause.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsClause.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsClause.ExecuteAsOption">
      <summary>Gets or sets the Execute As option.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsOption" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsClause.Literal">
      <summary>Gets or sets the literal value.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsOption">
      <summary>Specifies the Execute As option.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsOption.Caller">
      <summary>Option is Caller</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsOption.Self">
      <summary>Option is Self</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsOption.Owner">
      <summary>Option is Owner</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsOption.String">
      <summary>Option is String</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsOption.Login">
      <summary>Option is Login</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsOption.User">
      <summary>Option is User</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsStatement">
      <summary>Represents the EXECUTE AS statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsStatement.Cookie">
      <summary>Gets or sets the cookie variable, if the WITH COOKIE option was used.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsStatement.ExecuteContext">
      <summary>Gets or sets the execute context.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteContext" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsStatement.WithNoRevert">
      <summary>Gets or sets whether the NO REVERT option was specified.</summary>
      <returns>Returns true if the NO REVERT option was specified, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteContext">
      <summary>Represents the execute context.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteContext" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteContext.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteContext.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteContext.Kind">
      <summary>Gets or sets the kind to execute as.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsOption" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteContext.Principal">
      <summary>Gets or sets the principal.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteParameter">
      <summary>Represents a parameter passed to a procedure in an EXECUTE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteParameter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteParameter" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteParameter.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteParameter.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteParameter.IsOutput">
      <summary>Gets or sets whether OUTPUT is defined for the parameter.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteParameter.ParameterValue">
      <summary>Gets or sets the parameter value.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteParameter.Variable">
      <summary>Gets or sets a variable.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteStatement">
      <summary>This class represents the EXECUTE Transact-SQL statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteStatement.ExecutableEntity">
      <summary>Gets or sets the executable entity.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ExecutableEntity" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteStatement.ExecuteContext">
      <summary>Gets or sets the execute context.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteContext" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteStatement.LinkedServer">
      <summary>Gets or sets the linked server.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Identifier" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteStatement.Variable">
      <summary>Gets or sets the variable.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Literal" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ExistsPredicate">
      <summary>Represents the EXISTS predicate.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExistsPredicate.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ExistsPredicate" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExistsPredicate.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExistsPredicate.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ExistsPredicate.Subquery">
      <summary>Gets or sets the subquery.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Subquery" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.Expression">
      <summary>Represents an expression.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Expression.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Expression" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Expression.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ExpressionCallTarget">
      <summary>Represents an expression target of a function call.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExpressionCallTarget.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ExpressionCallTarget" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExpressionCallTarget.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExpressionCallTarget.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ExpressionCallTarget.Expression">
      <summary>Gets or sets the expression.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ExpressionGroupingSpecification">
      <summary>Represents an expression on which a grouping operation is performed.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExpressionGroupingSpecification.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ExpressionGroupingSpecification" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExpressionGroupingSpecification.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExpressionGroupingSpecification.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ExpressionGroupingSpecification.Expression">
      <summary>Gets or sets the expression.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ExpressionWithSortOrder">
      <summary>Represents an expression with a sort order.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExpressionWithSortOrder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ExpressionWithSortOrder" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExpressionWithSortOrder.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExpressionWithSortOrder.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ExpressionWithSortOrder.Expression">
      <summary>Gets or sets the expression.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ExpressionWithSortOrder.SortOrder">
      <summary>Gets or sets the sort order.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SortOrder" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ExtractFromExpression">
      <summary>Represents the expression that starts with Extract From.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExtractFromExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ExtractFromExpression" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExtractFromExpression.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ExtractFromExpression.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ExtractFromExpression.Expression">
      <summary>Gets or sets the inner expression.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.FetchCursorStatement">
      <summary>Represents the FETCH cursor statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FetchCursorStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.FetchCursorStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FetchCursorStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FetchCursorStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FetchCursorStatement.FetchType">
      <summary>Gets or sets the fetch information.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.FetchType" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FetchCursorStatement.IntoVariables">
      <summary>Gets a list of INTO variables.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.FetchOrientation">
      <summary>Specifies the FETCH orientation.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.FetchOrientation.None">
      <summary>Orientation is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.FetchOrientation.First">
      <summary>Orientation is First</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.FetchOrientation.Next">
      <summary>Orientation is Next</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.FetchOrientation.Prior">
      <summary>Orientation is Prior</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.FetchOrientation.Last">
      <summary>Orientation is Last</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.FetchOrientation.Relative">
      <summary>Orientation is Relative</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.FetchOrientation.Absolute">
      <summary>Orientation is Absolute</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.FetchType">
      <summary>Represents information about different FETCH orientations.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FetchType.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.FetchType" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FetchType.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FetchType.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FetchType.Orientation">
      <summary>Gets or sets the FETCH orientation.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.FetchOrientation" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FetchType.RowOffset">
      <summary>Gets or sets the row offset for ABSOLUTE and RELATIVE orientations.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.FileDeclaration">
      <summary>Represents a single file declaration in a CREATE DATABASE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FileDeclaration.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.FileDeclaration" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FileDeclaration.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FileDeclaration.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FileDeclaration.IsPrimary">
      <summary>Gets or sets whether a file declaration belongs to a primary file group.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FileDeclaration.Options">
      <summary>Gets a list of the options that make up the declaration.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.FileDeclarationOption">
      <summary>Represents a single file declaration option in a CREATE DATABASE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FileDeclarationOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.FileDeclarationOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FileDeclarationOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.FileEncryptionSource">
      <summary>Represents a reference to a file containing a key or a certificate.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FileEncryptionSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.FileEncryptionSource" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FileEncryptionSource.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FileEncryptionSource.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FileEncryptionSource.File">
      <summary>Gets or sets the file path.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FileEncryptionSource.IsExecutable">
      <summary>Gets or sets whether the file is EXECUTABLE.</summary>
      <returns>Returns true if the file is EXECUTABLE, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.FileGroup">
      <summary>Represents a file group in a CREATE DATABASE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FileGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.FileGroup" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FileGroup.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FileGroup.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FileGroup.ContainsFileStream">
      <summary>Gets or sets whether the file group contains a file stream.</summary>
      <returns>Returns true if the file group contains a file stream, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FileGroup.FileDeclarations">
      <summary>Gets a list of the file declarations in this file group.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FileGroup.IsDefault">
      <summary>Gets or sets whether this file group is the default one in the database.</summary>
      <returns>Returns true if this file group is the default one in the database, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FileGroup.Name">
      <summary>Gets or sets the file group name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.FileGroupOrPartitionScheme"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FileGroupOrPartitionScheme.#ctor"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FileGroupOrPartitionScheme.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FileGroupOrPartitionScheme.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FileGroupOrPartitionScheme.Name"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FileGroupOrPartitionScheme.PartitionSchemeColumns"></member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.FileGrowthFileDeclarationOption">
      <summary>Represents the file growth declaration option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FileGrowthFileDeclarationOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.FileGrowthFileDeclarationOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FileGrowthFileDeclarationOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FileGrowthFileDeclarationOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FileGrowthFileDeclarationOption.GrowthIncrement">
      <summary>Gets or sets the growth increment option value.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FileGrowthFileDeclarationOption.Units">
      <summary>Gets or sets the unit of measure in which size is expressed.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.MemoryUnit" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.FileNameFileDeclarationOption">
      <summary>Represents the file name file declaration option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FileNameFileDeclarationOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.FileNameFileDeclarationOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FileNameFileDeclarationOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FileNameFileDeclarationOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FileNameFileDeclarationOption.OSFileName">
      <summary>Gets or sets the option value.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.FileOptionKinds"></member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.FileOptionKinds.None">
      <summary />
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.FileOptionKinds.Name">
      <summary />
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.FileOptionKinds.FileName">
      <summary />
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.FileOptionKinds.Size">
      <summary />
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.FileOptionKinds.MaxSize">
      <summary />
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.FileOptionKinds.FileGrowth">
      <summary />
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.FileOptionKinds.NewName">
      <summary />
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.FileOptionKinds.Offline">
      <summary />
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.FilePathAuditFileOption">
      <summary>Represents a file path audit file option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FilePathAuditFileOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.FilePathAuditFileOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FilePathAuditFileOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FilePathAuditFileOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FilePathAuditFileOption.Value">
      <summary>Gets or sets the option value.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.FileStreamOnTableOption">
      <summary>Represents the FILESTREAM_ON table option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FileStreamOnTableOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.FileStreamOnTableOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FileStreamOnTableOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FileStreamOnTableOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FileStreamOnTableOption.Value">
      <summary>Gets or sets the option value.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.FipsComplianceLevel">
      <summary>Specifies the Fips compliance level.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.FipsComplianceLevel.Off">
      <summary>Level is Off</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.FipsComplianceLevel.Entry">
      <summary>Level is Entry</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.FipsComplianceLevel.Intermediate">
      <summary>Level is Intermediate</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.FipsComplianceLevel.Full">
      <summary>Level is Full</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ForClause">
      <summary>Base class for FOR clauses in SELECT statements.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ForClause.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ForClause" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ForClause.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ForeignKeyConstraint">
      <summary>Represents the foreign key constraint.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ForeignKeyConstraint.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ForeignKeyConstraint" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ForeignKeyConstraint.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ForeignKeyConstraint.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ForeignKeyConstraint.Columns">
      <summary>Gets a list of columns for the constraint.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ForeignKeyConstraint.DeleteAction">
      <summary>Gets or sets the action to be taken at delete.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DeleteUpdateAction" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ForeignKeyConstraint.NotForReplication">
      <summary>Gets or sets whether NOT FOR REPLICATION was defined.</summary>
      <returns>Returns true if NOT FOR REPLICATION was defined, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ForeignKeyConstraint.ReferencedTableColumns">
      <summary>Gets a list of columns for the referenced table.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ForeignKeyConstraint.ReferenceTableName">
      <summary>Gets or sets the table that the constraint references.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ForeignKeyConstraint.UpdateAction">
      <summary>Gets or sets the action to be taken at update.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DeleteUpdateAction" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.FullTextCatalogAndFileGroup"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FullTextCatalogAndFileGroup.#ctor"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FullTextCatalogAndFileGroup.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FullTextCatalogAndFileGroup.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FullTextCatalogAndFileGroup.CatalogName"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FullTextCatalogAndFileGroup.FileGroupIsFirst"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FullTextCatalogAndFileGroup.FileGroupName"></member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.FullTextCatalogStatement">
      <summary>Represents the CREATE FULLTEXT CATALOG statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FullTextCatalogStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.FullTextCatalogStatement" /> class.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FullTextCatalogStatement.AccentSensitivity">
      <summary>Gets or sets whether the catalog is accent-sensitive or accent-insensitive for full-text indexing.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FullTextCatalogStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FullTextCatalogStatement.Name">
      <summary>Gets or sets the catalog name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.FullTextFunctionType">
      <summary>Specifies the full text function type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.FullTextFunctionType.None">
      <summary>Type is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.FullTextFunctionType.Contains">
      <summary>Type is Contains</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.FullTextFunctionType.FreeText">
      <summary>Type is FreeText</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.FullTextIndexColumn">
      <summary>Represents the column for a full text index.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FullTextIndexColumn.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.FullTextIndexColumn" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FullTextIndexColumn.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FullTextIndexColumn.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FullTextIndexColumn.LanguageTerm">
      <summary>Gets or sets the language term, identifier or literal of type integer, string or hexadecimal.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FullTextIndexColumn.Name">
      <summary>Gets or sets the name of the column.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FullTextIndexColumn.TypeColumn">
      <summary>Gets or sets the type of the column.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.FullTextIndexOption">
      <summary>Represents a single option in a CREATE FULLTEXT INDEX statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FullTextIndexOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.FullTextIndexOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FullTextIndexOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.FullTextPredicate">
      <summary>Represents the full text predicate.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FullTextPredicate.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.FullTextPredicate" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FullTextPredicate.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FullTextPredicate.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FullTextPredicate.Columns">
      <summary>Gets a list of the columns that are used in the function.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FullTextPredicate.FullTextFunctionType">
      <summary>Gets or sets the full text function type.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FullTextPredicate.LanguageTerm">
      <summary>Gets or sets the language term.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FullTextPredicate.Value">
      <summary>Gets or sets the value of the search condition.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.FullTextStopListAction">
      <summary>Represents the action in an ALTER FULLTEXT STOPLIST statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FullTextStopListAction.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.FullTextStopListAction" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FullTextStopListAction.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FullTextStopListAction.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FullTextStopListAction.IsAdd">
      <summary>Gets or sets whether this is an ADD/DROP action.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FullTextStopListAction.IsAll">
      <summary>Gets or sets whether ALL is specified in the DROP action.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FullTextStopListAction.LanguageTerm">
      <summary>Gets or sets the language term, identifier or literal of type integer, string or hexadecimal.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FullTextStopListAction.StopWord">
      <summary>Gets or sets the stop word.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.FullTextTableSource">
      <summary>Represents the FREETEXTTABLE and CONTAINSTABLE table sources.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FullTextTableSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.FullTextTableSource" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FullTextTableSource.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FullTextTableSource.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FullTextTableSource.Columns">
      <summary>Gets a list of column names.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FullTextTableSource.IsFreeText">
      <summary>Gets or sets whether this is a FREETEXTTABLE row set.</summary>
      <returns>Returns true if this is a FREETEXTTABLE row set, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FullTextTableSource.Language">
      <summary>Gets or sets the optional language whose resources will be used for word breaking, stemming, and thesaurus and noise-word removal.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FullTextTableSource.SearchCondition">
      <summary>Gets or sets the search condition or text to search.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FullTextTableSource.TableName">
      <summary>Gets or sets the table name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FullTextTableSource.TopN">
      <summary>Gets or sets the optional number of top-ranked results to return.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.FunctionCall">
      <summary>Represents a function call.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FunctionCall.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.FunctionCall" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FunctionCall.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FunctionCall.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FunctionCall.CallTarget">
      <summary>Gets or sets an optional function call target.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FunctionCall.FunctionName">
      <summary>Gets or sets the name of the function being called.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FunctionCall.OverClause">
      <summary>Gets or sets the OVER clause.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OverClause" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FunctionCall.Parameters">
      <summary>Gets a list of function parameters.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FunctionCall.UniqueRowFilter">
      <summary>Gets or sets a unique row filter.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.UniqueRowFilter" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.FunctionCallSetClause">
      <summary>Represents a function call for a SET clause.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FunctionCallSetClause.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.FunctionCallSetClause" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FunctionCallSetClause.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FunctionCallSetClause.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FunctionCallSetClause.Parameters">
      <summary>Gets a list of parameters to the function call.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.FunctionOptions">
      <summary>Specifies function options.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.FunctionOptions.None">
      <summary>Option is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.FunctionOptions.Encryption">
      <summary>Option is Encryption</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.FunctionOptions.SchemaBinding">
      <summary>Option is SchemaBinding</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.FunctionOptions.ReturnsNullOnNullInput">
      <summary>Option is ReturnsNullOnNullInput</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.FunctionOptions.CalledOnNullInput">
      <summary>Option is CalledOnNullInput</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.FunctionReturnType">
      <summary>Represents the function return type.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FunctionReturnType.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.FunctionReturnType" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FunctionReturnType.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.FunctionStatementBody">
      <summary>Represents the CREATE/ALTER FUNCTION statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FunctionStatementBody.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.FunctionStatementBody" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.FunctionStatementBody.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FunctionStatementBody.Name">
      <summary>Gets or sets the name of the function.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FunctionStatementBody.Options">
      <summary>Gets or sets options in a WITH clause.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FunctionStatementBody.OrderHint">
      <summary>Gets or sets an optional CLR table-valued options order hint.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.FunctionStatementBody.ReturnType">
      <summary>Gets or sets the function return type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.FunctionReturnType" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.GeneralSetCommand">
      <summary>Represents a single command in a SET statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GeneralSetCommand.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.GeneralSetCommand" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GeneralSetCommand.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GeneralSetCommand.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.GeneralSetCommand.CommandType">
      <summary>Gets or sets the command type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.GeneralSetCommandType" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.GeneralSetCommand.Parameter">
      <summary>Gets or sets a command parameter.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.GeneralSetCommandType">
      <summary>Specifies the general SET command type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.GeneralSetCommandType.None">
      <summary>Type is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.GeneralSetCommandType.Language">
      <summary>Type is Language</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.GeneralSetCommandType.DateFormat">
      <summary>Type is DateFormat</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.GeneralSetCommandType.DateFirst">
      <summary>Type is DateFirst</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.GeneralSetCommandType.DeadlockPriority">
      <summary>Type is DeadlockPriority</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.GeneralSetCommandType.LockTimeout">
      <summary>Type is LockTimeout</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.GeneralSetCommandType.QueryGovernorCostLimit">
      <summary>Type is QueryGovernorCostLimit</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.GeneralSetCommandType.ContextInfo">
      <summary>Type is ContextInfo</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.GetConversationGroupStatement">
      <summary>Represents the GET CONVERSATION GROUP statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GetConversationGroupStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.GetConversationGroupStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GetConversationGroupStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GetConversationGroupStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.GetConversationGroupStatement.GroupId">
      <summary>Gets or sets the conversation group ID.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.GetConversationGroupStatement.Queue">
      <summary>Gets or sets the name of the queue from which to get the conversation group.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.GoToStatement">
      <summary>Represents the GOTO statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GoToStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.GoToStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GoToStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GoToStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.GoToStatement.LabelName">
      <summary>Gets or sets the label name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.GrandTotalGroupingSpecification">
      <summary>Represents the grand total grouping specification.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GrandTotalGroupingSpecification.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.GrandTotalGroupingSpecification" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GrandTotalGroupingSpecification.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GrandTotalGroupingSpecification.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.GrantStatement">
      <summary>Represents the GRANT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GrantStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.GrantStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GrantStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GrantStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.GrantStatement.WithGrantOption">
      <summary>Gets or sets whether the WITH GRANT OPTION is defined.</summary>
      <returns>Returns true if the WITH GRANT OPTION is defined, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.GrantStatement80">
      <summary>Represents the GRANT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GrantStatement80.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.GrantStatement80" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GrantStatement80.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GrantStatement80.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.GrantStatement80.AsClause">
      <summary>Gets or sets the AS clause.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.GrantStatement80.WithGrantOption">
      <summary>Gets or sets whether the WITH GRANT OPTION is defined.</summary>
      <returns>Returns true if the WITH GRANT OPTION is defined, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.GridParameter">
      <summary>Represents the spatial index structured parameter for a GRIDS option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GridParameter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.GridParameter" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GridParameter.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GridParameter.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.GridParameter.Parameter">
      <summary>Gets or sets the grid parameter type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.GridParameterType" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.GridParameter.Value">
      <summary>Gets or sets the importance parameter type value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ImportanceParameterType" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.GridParameterType">
      <summary>Specifies the grid parameter type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.GridParameterType.None">
      <summary>Type is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.GridParameterType.Level1">
      <summary>Type is Level1</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.GridParameterType.Level2">
      <summary>Type is Level2</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.GridParameterType.Level3">
      <summary>Type is Level3</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.GridParameterType.Level4">
      <summary>Type is Level4</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.GridsSpatialIndexOption">
      <summary>Represents the GRIDS spatial index option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GridsSpatialIndexOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.GridsSpatialIndexOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GridsSpatialIndexOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GridsSpatialIndexOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.GridsSpatialIndexOption.GridParameters">
      <summary>Gets a list of GRIDS parameters.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.GroupByClause">
      <summary>Represents the GROUP BY clause, which can be used in statements such as SELECT and UPDATE.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GroupByClause.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.GroupByClause" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GroupByClause.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GroupByClause.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.GroupByClause.All">
      <summary>Gets or sets whether the ALL keyword is used.</summary>
      <returns>Returns true if the ALL keyword is used, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.GroupByClause.GroupByOption">
      <summary>Gets or sets the GROUP BY option.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.GroupByOption" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.GroupByClause.GroupingSpecifications">
      <summary>Gets a list of grouping specifications.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.GroupByOption">
      <summary>Specifies the GROUP BY option.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.GroupByOption.None">
      <summary>Option is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.GroupByOption.Cube">
      <summary>Option is Cube</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.GroupByOption.Rollup">
      <summary>Option is Rollup</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.GroupingSetsGroupingSpecification">
      <summary>Represents the GROUPING SETS grouping specification.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GroupingSetsGroupingSpecification.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.GroupingSetsGroupingSpecification" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GroupingSetsGroupingSpecification.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GroupingSetsGroupingSpecification.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.GroupingSetsGroupingSpecification.Sets">
      <summary>Gets a list of included grouping sets.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.GroupingSpecification">
      <summary>Represents a single grouping specification in a GROUP BY clause.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GroupingSpecification.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.GroupingSpecification" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.GroupingSpecification.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.HavingClause">
      <summary>Represents the HAVING clause, which can be used in statements such as SELECT.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.HavingClause.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.HavingClause" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.HavingClause.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.HavingClause.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.HavingClause.SearchCondition">
      <summary>Gets or sets the search condition.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.IAuthorization">
      <summary>Represents the owner.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.IAuthorization.Owner">
      <summary>Gets or sets the owner of the object.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ICollationSetter">
      <summary>Represents the collation identifier.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ICollationSetter.Collation">
      <summary>Gets or sets the collation identifier.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.Identifier">
      <summary>This fragment is used to represent an identifier.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Identifier.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Identifier" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Identifier.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Identifier.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Identifier.DecodeIdentifier(System.String,Microsoft.Data.Schema.ScriptDom.Sql.QuoteType@)">
      <summary>Decodes the identifier.</summary>
      <param name="identifier">Specifies the identifier</param>
      <param name="quote">Specifies the quote type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Identifier.EncodeIdentifier(System.String)">
      <summary>Encodes the identifier.</summary>
      <param name="identifier">Specifies the identifier</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Identifier.EncodeIdentifier(System.String,Microsoft.Data.Schema.ScriptDom.Sql.QuoteType)">
      <summary>Encodes the identifier.</summary>
      <param name="identifier">Specifies the identifier</param>
      <param name="quoteType">Specifies the quote type</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.Identifier.QuoteType">
      <summary>Gets or sets the quote type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.QuoteType" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.Identifier.Value">
      <summary>Gets or sets the value of the identifier.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.IdentifierLoginOption">
      <summary>Represents options with an identifier value in a CREATE or ALTER LOGIN statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IdentifierLoginOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.IdentifierLoginOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IdentifierLoginOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IdentifierLoginOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.IdentifierLoginOption.Value">
      <summary>Gets or sets the option value.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.IdentifiersCallTarget">
      <summary>Represents the target of a call that is a column or CLR property on a column.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IdentifiersCallTarget.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.IdentifiersCallTarget" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IdentifiersCallTarget.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IdentifiersCallTarget.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.IdentifiersCallTarget.Identifiers">
      <summary>Gets a list of column and property names.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.IdentityFunction">
      <summary>Represents an identity function that can be used by <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SelectColumn" />.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IdentityFunction.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.IdentityFunction" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IdentityFunction.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IdentityFunction.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.IdentityFunction.DataType">
      <summary>Gets or sets the data type for the column.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DataType" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.IdentityFunction.Increment">
      <summary>Gets or sets the increment for the identity.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.IdentityFunction.Seed">
      <summary>Gets or sets the seed for the identity.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.IdentityValueKeyOption">
      <summary>Represents an IDENTITY_VALUE option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IdentityValueKeyOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.IdentityValueKeyOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IdentityValueKeyOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IdentityValueKeyOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.IdentityValueKeyOption.IdentityPhrase">
      <summary>Gets or sets an identity phrase from which to generate a GUID for tagging data that is encrypted with a temporary key.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.IFileStreamSpecifier">
      <summary>Represents a specification of the file stream.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.IFileStreamSpecifier.FileStreamOn">
      <summary>Gets or sets an optional specification of the file stream.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.IfStatement">
      <summary>Represents the IF statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IfStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.IfStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IfStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IfStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.IfStatement.ElseStatement">
      <summary>Gets or sets the statement that will be executed if the predicate evaluates false.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlStatement" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.IfStatement.Predicate">
      <summary>Gets or sets the expression that is the predicate for the IF statement.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.IfStatement.ThenStatement">
      <summary>Gets or sets the statement that will be executed if the predicate evaluates true.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlStatement" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ImportanceParameterType">
      <summary>Specifies the importance parameter type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ImportanceParameterType.Unknown">
      <summary>Type is Unknown</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ImportanceParameterType.Low">
      <summary>Type is Low</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ImportanceParameterType.Medium">
      <summary>Type is Medium</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ImportanceParameterType.High">
      <summary>Type is High</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.IndexExpressionOption">
      <summary>Represents the index option that could be an expression.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IndexExpressionOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.IndexExpressionOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IndexExpressionOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IndexExpressionOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.IndexExpressionOption.Expression">
      <summary>Gets or sets the index expression.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.IndexOption">
      <summary>Represents the index option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IndexOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.IndexOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IndexOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.IndexOption.Option">
      <summary>Gets or sets the index option type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.IndexOptionType" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.IndexOptionType">
      <summary>Specifies the index option type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.IndexOptionType.PadIndex">
      <summary>Type is PadIndex</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.IndexOptionType.FillFactor">
      <summary>Type is FillFactor</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.IndexOptionType.SortInTempDB">
      <summary />
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.IndexOptionType.IgnoreDupKey">
      <summary>Type is IgnoreDupKey</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.IndexOptionType.StatisticsNoRecompute">
      <summary>Type is StatisticsNoRecompute</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.IndexOptionType.DropExisting">
      <summary>Type is DropExisting</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.IndexOptionType.Online">
      <summary>Type is Online</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.IndexOptionType.AllowRowLocks">
      <summary>Type is AllowRowLocks</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.IndexOptionType.AllowPageLocks">
      <summary>Type is AllowPageLocks</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.IndexOptionType.MaxDop">
      <summary>Type is MaxDop</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.IndexOptionType.LobCompaction">
      <summary>Type is LobCompaction</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.IndexOptionType.FileStreamOn">
      <summary>Type is FileStreamOn</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.IndexOptionType.DataCompression">
      <summary>Type is DataCompression</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.IndexStatement">
      <summary>Represents the base for CREATE INDEX statements.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IndexStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.IndexStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IndexStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.IndexStatement.IndexOptions">
      <summary>Gets a list of index options.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.IndexStatement.Name">
      <summary>Gets or sets the index name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.IndexStatement.OnName">
      <summary>Gets or sets the table or view name that comes after the ON keyword.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.IndexStateOption">
      <summary>Represents the index option state.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IndexStateOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.IndexStateOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IndexStateOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IndexStateOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.IndexStateOption.OptionState">
      <summary>Gets or sets the index option state.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OptionState" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.IndexTableHint">
      <summary>Represents an INDEX table hint.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IndexTableHint.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.IndexTableHint" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IndexTableHint.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IndexTableHint.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.IndexTableHint.IndexValues">
      <summary>Gets a list of parameters for the index hint.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.InlineDerivedTable">
      <summary>Represents a derived table.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InlineDerivedTable.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.InlineDerivedTable" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InlineDerivedTable.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InlineDerivedTable.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.InlineDerivedTable.RowValues">
      <summary>Gets a list of row data values.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.InPredicate">
      <summary>Represents the IN predicate.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InPredicate.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.InPredicate" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InPredicate.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InPredicate.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.InPredicate.Expression">
      <summary>Gets or sets the expression.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.InPredicate.NotDefined">
      <summary>Returns whether NOT is defined.</summary>
      <returns>Returns true if NOT is used, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.InPredicate.Subquery">
      <summary>Gets or sets the subquery.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.InPredicate.Values">
      <summary>Gets a list of the values in parentheses.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.InsertBulkColumnDefinition">
      <summary>Represents a column definition in an INSERT BULK statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InsertBulkColumnDefinition.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.InsertBulkColumnDefinition" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InsertBulkColumnDefinition.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InsertBulkColumnDefinition.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.InsertBulkColumnDefinition.Column">
      <summary>Gets or sets the most basic part of a column definition.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ColumnDefinitionBase" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.InsertBulkColumnDefinition.NullNotNull">
      <summary>Gets or sets a value with respect to null.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.NullNotNull" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.InsertBulkStatement">
      <summary>Represents the INSERT BULK statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InsertBulkStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.InsertBulkStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InsertBulkStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InsertBulkStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.InsertBulkStatement.ColumnDefinitions">
      <summary>Gets a list of column definitions.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.InsertMergeAction">
      <summary>Represents the insert merge action.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InsertMergeAction.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.InsertMergeAction" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InsertMergeAction.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InsertMergeAction.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.InsertMergeAction.Columns">
      <summary>Gets a list of columns of the target table in which to insert data.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.InsertMergeAction.Source">
      <summary>Gets or sets the insert source.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ValuesInsertSource" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.InsertOption">
      <summary>Specifies the insert option.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.InsertOption.None">
      <summary>Option is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.InsertOption.Into">
      <summary>Option is Into</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.InsertOption.Over">
      <summary>Option is Over</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.InsertStatement">
      <summary>Represents the INSERT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InsertStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.InsertStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InsertStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InsertStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.InsertStatement.Columns">
      <summary>Gets a list of optional target columns.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.InsertStatement.InsertOption">
      <summary>Gets or sets the insert option.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.InsertOption" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.InsertStatement.InsertSource">
      <summary>Gets or sets the insert source, which can be ValuesInsertSource, SelectStatement, or ExecuteStatement.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.IntegerValueSessionOption">
      <summary>Represents the MAX_MEMORY event session option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IntegerValueSessionOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.IntegerValueSessionOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IntegerValueSessionOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.IntegerValueSessionOption.Unit">
      <summary>Gets or sets the session memory unit.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.MemoryUnit" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.IntegerValueSessionOption.Value">
      <summary>Gets or sets the session option value.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.InternalOpenRowset">
      <summary>Represents the OPENROWSET table source - undocumented case.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InternalOpenRowset.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.InternalOpenRowset" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InternalOpenRowset.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InternalOpenRowset.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.InternalOpenRowset.Identifier">
      <summary>Gets or sets the first parameter in parentheses.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.InternalOpenRowset.VarArgs">
      <summary>Gets or sets a list of the optional remaining parameters.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.InvalidExpression">
      <summary>Represents an expression in Transact-SQL script that is not valid.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InvalidExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.InvalidExpression" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InvalidExpression.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InvalidExpression.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.InvalidExpression.Script">
      <summary>Gets or sets the expression script.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.InvalidIdentifier">
      <summary>Represents an identifier in Transact-SQL script that is not valid.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InvalidIdentifier.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.InvalidIdentifier" /> class. </summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InvalidIdentifier.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InvalidIdentifier.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls the Accept method on the children with the given visitor.</summary>
      <param name="visitor"></param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.InvalidIdentifier.Script">
      <summary>Gets or sets the identifier script.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.InvalidSchemaObjectName">
      <summary>Represents Transact-SQL script that contains a schema object name that is not valid.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InvalidSchemaObjectName.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.InvalidSchemaObjectName" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InvalidSchemaObjectName.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InvalidSchemaObjectName.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.InvalidSchemaObjectName.Script">
      <summary>Gets or sets the object script.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.InvalidSelectStatement">
      <summary>Represents Transact-SQL script that contains a select statement whose definition is not valid.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InvalidSelectStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.InvalidSelectStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InvalidSelectStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InvalidSelectStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.InvalidSelectStatement.Script">
      <summary>Gets or sets the select statement script.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.InvalidStatementList">
      <summary>Represents Transact-SQL script that contains a list of statements that are not valid Transact-SQL statements.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InvalidStatementList.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.InvalidStatementList" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InvalidStatementList.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InvalidStatementList.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.InvalidStatementList.Script">
      <summary>Gets or sets the statement list script.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.InvalidTSqlFragment">
      <summary>Represents a Transact-SQL fragment that is not valid.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InvalidTSqlFragment.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.InvalidTSqlFragment" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InvalidTSqlFragment.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InvalidTSqlFragment.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.InvalidTSqlFragment.Script">
      <summary>Gets or sets the Transact-SQL fragment script.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.InvalidTSqlStatement">
      <summary>Represents Transact-SQL script that is not recognized as a valid Transact-SQL statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InvalidTSqlStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.InvalidTSqlStatement" /> class. </summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InvalidTSqlStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.InvalidTSqlStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls the Accept method on the children with the given visitor.</summary>
      <param name="visitor"></param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.InvalidTSqlStatement.Script">
      <summary>Gets or sets the Transact-SQL script for the unrecognized statement.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.IPasswordChangeOption">
      <summary>Holds passwords for encrypting/decrypting a private key.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.IPasswordChangeOption.DecryptionPassword">
      <summary>Gets or sets an optional private key decryption password.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.IPasswordChangeOption.EncryptionPassword">
      <summary>Gets or sets an optional private key encryption password.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.IPv4">
      <summary>Represents an IP address (x.x.x.x).</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IPv4.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.IPv4" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IPv4.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.IPv4.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.IPv4.OctetFour">
      <summary>Gets or sets the fourth octet.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.IPv4.OctetOne">
      <summary>Gets or sets the first octet.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.IPv4.OctetThree">
      <summary>Gets or sets the third octet.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.IPv4.OctetTwo">
      <summary>Gets or sets the second octet.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.IsolationLevel">
      <summary>Specifies the isolation level.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.IsolationLevel.None">
      <summary>Level is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.IsolationLevel.ReadCommitted">
      <summary>Level is ReadCommitted</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.IsolationLevel.ReadUncommitted">
      <summary>Level is ReadUncommitted</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.IsolationLevel.RepeatableRead">
      <summary>Level is RepeatableRead</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.IsolationLevel.Serializable">
      <summary>Level is Serializable</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.IsolationLevel.Snapshot">
      <summary>Level is Snapshot</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ITableElementContainer">
      <summary>Represents the table element container.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ITableElementContainer.ColumnDefinitions">
      <summary>Gets a list of column definitions.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ITableElementContainer.TableConstraints">
      <summary>Gets a list of table constraints.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.JoinHint">
      <summary>Specifies the join hint.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.JoinHint.None">
      <summary>Hint is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.JoinHint.Loop">
      <summary>Hint is Loop</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.JoinHint.Hash">
      <summary>Hint is Hash</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.JoinHint.Merge">
      <summary>Hint is Merge</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.JoinHint.Remote">
      <summary>Hint is Remote</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.JoinParenthesis">
      <summary>Represents the parentheses that can encapsulate a join.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.JoinParenthesis.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.JoinParenthesis" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.JoinParenthesis.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.JoinParenthesis.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.JoinParenthesis.Join">
      <summary>Gets or sets the element inside the parentheses.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TableSource" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.KeyOption">
      <summary>Represents the key option in a CREATE SYMMETRIC KEY statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.KeyOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.KeyOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.KeyOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.KeySourceKeyOption">
      <summary>Represents the KEY_SOURCE option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.KeySourceKeyOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.KeySourceKeyOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.KeySourceKeyOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.KeySourceKeyOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.KeySourceKeyOption.PassPhrase">
      <summary>Gets or sets the pass phrase from which to derive the key.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.KeywordCasing">
      <summary>Specifies keyword casing.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.KeywordCasing.Lowercase">
      <summary>Casing is Lowercase</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.KeywordCasing.Uppercase">
      <summary>Case is Uppercase</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.KeywordCasing.PascalCase">
      <summary>Casing is PascalCase</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.KillQueryNotificationSubscriptionStatement">
      <summary>Represents the kill query notification subscription statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.KillQueryNotificationSubscriptionStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.KillQueryNotificationSubscriptionStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.KillQueryNotificationSubscriptionStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.KillQueryNotificationSubscriptionStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.KillQueryNotificationSubscriptionStatement.All">
      <summary>Gets or sets whether ALL is specified.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.KillQueryNotificationSubscriptionStatement.SubscriptionId">
      <summary>Gets or sets the subscription ID.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.KillStatement">
      <summary>Represents the KILL statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.KillStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.KillStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.KillStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.KillStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.KillStatement.Parameter">
      <summary>Gets or sets the statement expression.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.KillStatement.WithStatusOnly">
      <summary>Gets or sets whether WITH STATUSONLY is specified.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.KillStatsJobStatement">
      <summary>Represents the KILL STATS JOB statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.KillStatsJobStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.KillStatsJobStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.KillStatsJobStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.KillStatsJobStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.KillStatsJobStatement.JobId">
      <summary>Gets or sets the job ID.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.LabelStatement">
      <summary>Represents the Label statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.LabelStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.LabelStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.LabelStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.LabelStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.LabelStatement.Value">
      <summary>Gets or sets the label value.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.LeftFunctionCall">
      <summary>Represents the LEFT call.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.LeftFunctionCall.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.LeftFunctionCall" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.LeftFunctionCall.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.LeftFunctionCall.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.LeftFunctionCall.Parameters">
      <summary>Gets a list of function parameters.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.LikePredicate">
      <summary>Represents the LIKE predicate.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.LikePredicate.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.LikePredicate" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.LikePredicate.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.LikePredicate.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.LikePredicate.EscapeExpression">
      <summary>Gets or sets the escape expression.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.LikePredicate.FirstExpression">
      <summary>Gets or sets the first expression.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.LikePredicate.NotDefined">
      <summary>Returns whether NOT is specified.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.LikePredicate.OdbcEscape">
      <summary>Gets or sets whether the escape is defined using ODBC delimiters.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.LikePredicate.SecondExpression">
      <summary>Gets or sets the second expression.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.LineNoStatement">
      <summary>Represents the LINENO statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.LineNoStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.LineNoStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.LineNoStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.LineNoStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.LineNoStatement.LineNo">
      <summary>Gets or sets the statement value.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ListenerIpEndpointProtocolOption">
      <summary>Represents the LISTENER_IP TCP endpoint protocol option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ListenerIpEndpointProtocolOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ListenerIpEndpointProtocolOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ListenerIpEndpointProtocolOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ListenerIpEndpointProtocolOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ListenerIpEndpointProtocolOption.IPv4PartOne">
      <summary>Gets or sets the four-part IP address that is the part before the colon.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ListenerIpEndpointProtocolOption.IPv4PartTwo">
      <summary>Gets or sets the four-part IP address that is the part after the colon.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ListenerIpEndpointProtocolOption.IpV6">
      <summary>Gets or sets the six-part address.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ListenerIpEndpointProtocolOption.IsAll">
      <summary>Gets or sets whether ALL is specified.</summary>
      <returns>Returns true if ALL was specified, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.Literal">
      <summary>Represents the literal.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Literal.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Literal" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Literal.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Literal.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.Literal.LiteralType">
      <summary>Gets or sets the literal type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.LiteralType" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.Literal.Value">
      <summary>Gets or sets the literal value.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.LiteralEndpointProtocolOption">
      <summary>Represents a protocol option that has a single string or integer value.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.LiteralEndpointProtocolOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.LiteralEndpointProtocolOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.LiteralEndpointProtocolOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.LiteralEndpointProtocolOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.LiteralEndpointProtocolOption.Value">
      <summary>Gets or sets the option value.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.LiteralPayloadOption">
      <summary>Represents a payload option with a single literal value.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.LiteralPayloadOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.LiteralPayloadOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.LiteralPayloadOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.LiteralPayloadOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.LiteralPayloadOption.Value">
      <summary>Gets or sets the payload option value.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.LiteralType">
      <summary>Specifies the literal type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LiteralType.Integer">
      <summary>Type is Integer</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LiteralType.Real">
      <summary>Type is Real</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LiteralType.Money">
      <summary>Type is Money</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LiteralType.Binary">
      <summary>Type is Binary</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LiteralType.AsciiStringLiteral">
      <summary>Type is AsciiStringLiteral</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LiteralType.UnicodeStringLiteral">
      <summary>Type is UnicodeStringLiteral</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LiteralType.Null">
      <summary>Type is Null</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LiteralType.Variable">
      <summary>Type is Variable</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LiteralType.Default">
      <summary>Type is Default</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LiteralType.Max">
      <summary>Type is Max</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LiteralType.OdbcTimeAsciiStringLiteral">
      <summary>Type is OdbcTimeAsciiStringLiteral</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LiteralType.OdbcTimeUnicodeStringLiteral">
      <summary>Type is OdbcTimeUnicodeStringLiteral</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LiteralType.OdbcDateAsciiStringLiteral">
      <summary>Type is OdbcDateAsciiStringLiteral</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LiteralType.OdbcDateUnicodeStringLiteral">
      <summary>Type is OdbcDateUnicodeStringLiteral</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LiteralType.OdbcTimestampAsciiStringLiteral">
      <summary />
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LiteralType.OdbcTimestampUnicodeStringLiteral">
      <summary />
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LiteralType.OdbcGuidAsciiStringLiteral">
      <summary />
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LiteralType.OdbcGuidUnicodeStringLiteral">
      <summary />
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.LockEscalationMethod">
      <summary>Specifies the lock escalation method.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LockEscalationMethod.Table">
      <summary>Method is Table</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LockEscalationMethod.Auto">
      <summary>Method is Auto</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LockEscalationMethod.Disable">
      <summary>Method is Disable</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.LockEscalationTableOption">
      <summary>Represents the lock escalation table option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.LockEscalationTableOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.LockEscalationTableOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.LockEscalationTableOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.LockEscalationTableOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.LockEscalationTableOption.Value">
      <summary>Gets or sets the lock escalation method value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.LockEscalationMethod" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.LoginOption">
      <summary>Represents a single option in a CREATE or ALTER LOGIN statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.LoginOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.LoginOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.LoginOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.LoginOption.OptionKind">
      <summary>Gets or sets the login option kind.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.LoginOptions" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.LoginOptions">
      <summary>Specifies the login option.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LoginOptions.None">
      <summary>Option is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LoginOptions.CheckExpiration">
      <summary>Option is CheckExpiration</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LoginOptions.CheckPolicy">
      <summary>Option is CheckPolicy</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LoginOptions.Sid">
      <summary>Option is Sid</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LoginOptions.DefaultDatabase">
      <summary>Option is DefaultDatabase</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LoginOptions.DefaultLanguage">
      <summary>Option is DefaultLanguage</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LoginOptions.Credential">
      <summary>Option is Credential</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LoginOptions.Name">
      <summary>Option is Name</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.LoginOptions.NoCredential">
      <summary>Option is NoCredential</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.LoginTypePayloadOption">
      <summary>Represents the LOGIN_TYPE payload option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.LoginTypePayloadOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.LoginTypePayloadOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.LoginTypePayloadOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.LoginTypePayloadOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.LoginTypePayloadOption.IsWindows">
      <summary>Gets or sets whether WINDOWS is specified.</summary>
      <returns>Returns true if WINDOWS is specified, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.MasterKeyStatement">
      <summary>Represents the MASTER KEY statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MasterKeyStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.MasterKeyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MasterKeyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.MasterKeyStatement.Password">
      <summary>Gets or sets the password.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.MaxDispatchLatencySessionOption">
      <summary>Represents the MAX_DISPATCH_LATENCY event session option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MaxDispatchLatencySessionOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.MaxDispatchLatencySessionOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MaxDispatchLatencySessionOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MaxDispatchLatencySessionOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.MaxDispatchLatencySessionOption.IsInfinite">
      <summary>Gets or sets whether INFINITE is specified.</summary>
      <returns>Returns true if INFINITE is specified, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.MaxDispatchLatencySessionOption.Value">
      <summary>Gets or sets the session option value.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.MaxEventSizeSessionOption">
      <summary>Represents the MAX_EVENT_SIZE event session option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MaxEventSizeSessionOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.MaxEventSizeSessionOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MaxEventSizeSessionOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MaxEventSizeSessionOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.MaxMemorySessionOption">
      <summary>Represents the MAX_MEMORY event session option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MaxMemorySessionOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.MaxMemorySessionOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MaxMemorySessionOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MaxMemorySessionOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.MaxRolloverFilesAuditFileOption">
      <summary>Represents the MAX_ROLLOVER_FILES option in the case of FILE audit target.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MaxRolloverFilesAuditFileOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.MaxRolloverFilesAuditFileOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MaxRolloverFilesAuditFileOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MaxRolloverFilesAuditFileOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.MaxRolloverFilesAuditFileOption.Value">
      <summary>Gets or sets the option value.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.MaxSizeAuditFileOption">
      <summary>Represents the MaxSize option in the case of FILE audit target.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MaxSizeAuditFileOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.MaxSizeAuditFileOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MaxSizeAuditFileOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MaxSizeAuditFileOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.MaxSizeAuditFileOption.IsUnlimited">
      <summary>Gets or sets whether UNLIMITED is specified.</summary>
      <returns>Returns true if UNLIMITED size is specified, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.MaxSizeAuditFileOption.Size">
      <summary>Gets or sets the maximum size to which the audit file can grow.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.MaxSizeAuditFileOption.Unit">
      <summary>Gets or sets measurement units for size, in case it is specified.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.MaxSizeFileDeclarationOption">
      <summary>Represents the max size file declaration option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MaxSizeFileDeclarationOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.MaxSizeFileDeclarationOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MaxSizeFileDeclarationOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MaxSizeFileDeclarationOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.MaxSizeFileDeclarationOption.MaxSize">
      <summary>Gets or sets the option value.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.MaxSizeFileDeclarationOption.Units">
      <summary>Gets or sets the unit of memory in which size is expressed.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.MemoryUnit" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.MaxSizeFileDeclarationOption.Unlimited">
      <summary>Gets or sets whether UNLIMITED is specified.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.MemoryPartitionSessionOption">
      <summary>Represents the MEMORY_PARTITION_MODE session option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MemoryPartitionSessionOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.MemoryPartitionSessionOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MemoryPartitionSessionOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MemoryPartitionSessionOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.MemoryPartitionSessionOption.Value">
      <summary>Gets or sets the memory partition values.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionMemoryPartitionModeType" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.MemoryUnit">
      <summary>Specifies the memory unit.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.MemoryUnit.Unspecified">
      <summary>Unit is Unspecified</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.MemoryUnit.Percent">
      <summary>Unit is Percent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.MemoryUnit.Bytes">
      <summary>Unit is Bytes</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.MemoryUnit.KB">
      <summary>Unit is KB</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.MemoryUnit.MB">
      <summary>Unit is MB</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.MemoryUnit.GB">
      <summary>Unit is GB</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.MemoryUnit.TB">
      <summary>Unit is TB</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.MemoryUnit.PB">
      <summary>Unit is PB</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.MemoryUnit.EB">
      <summary>Unit is EB</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.MergeAction">
      <summary>Represents action in a MERGE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MergeAction.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.MergeAction" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MergeAction.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.MergeActionClause">
      <summary>Represents the MERGE action clause.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MergeActionClause.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.MergeActionClause" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MergeActionClause.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MergeActionClause.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.MergeActionClause.Action">
      <summary>Gets or sets the merge action.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.MergeAction" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.MergeActionClause.Condition">
      <summary>Gets or sets the merge condition.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.MergeCondition" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.MergeActionClause.SearchCondition">
      <summary>Gets or sets the search condition.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.MergeCondition">
      <summary>Specifies the MERGE condition.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.MergeCondition.NotSpecified">
      <summary>Condition is NotSpecified</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.MergeCondition.Matched">
      <summary>Condition is Matched</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.MergeCondition.NotMatched">
      <summary>Condition is NotMatched</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.MergeCondition.TargetNotMatched">
      <summary>Condition is TargetNotMatched</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.MergeCondition.SourceNotMatched">
      <summary>Condition is SourceNotMatched</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.MergeStatement">
      <summary>Represents the MERGE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MergeStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.MergeStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MergeStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MergeStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.MergeStatement.ActionClauses">
      <summary>Gets a list of conditions and actions to take.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.MergeStatement.SearchCondition">
      <summary>Gets or sets the search condition.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.MergeStatement.TableAlias">
      <summary>Gets or sets the target table alias.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.MergeStatement.TableSource">
      <summary>Gets or sets the table source.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TableSource" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.MessageSender">
      <summary>Specifies the message sender.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.MessageSender.None">
      <summary>Sender is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.MessageSender.Initiator">
      <summary>Sender is Initiator</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.MessageSender.Target">
      <summary>Sender is Target</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.MessageSender.Any">
      <summary>Sender is Any</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.MessageTypeStatementBase">
      <summary>Represents the common parts of CREATE and ALTER MESSAGE TYPE statements.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MessageTypeStatementBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.MessageTypeStatementBase" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MessageTypeStatementBase.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.MessageTypeStatementBase.Name">
      <summary>Gets or sets the message type name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.MessageTypeStatementBase.ValidationMethod">
      <summary>Gets or sets how Service Broker validates the message body for messages of this type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.MessageValidationMethod" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.MessageTypeStatementBase.XmlSchemaCollectionName">
      <summary>Gets or sets the name of an existing XML schema collection.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.MessageValidationMethod">
      <summary>Specifies the message validation method.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.MessageValidationMethod.NotSpecified">
      <summary>Message is NotSpecified</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.MessageValidationMethod.None">
      <summary>Message is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.MessageValidationMethod.Empty">
      <summary>Method is Empty</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.MessageValidationMethod.WellFormedXml">
      <summary>Message is WellFormedXml</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.MessageValidationMethod.ValidXml">
      <summary>Message is ValidXml</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.MethodSpecifier">
      <summary>Represents a method specifier.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MethodSpecifier.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.MethodSpecifier" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MethodSpecifier.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MethodSpecifier.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.MethodSpecifier.AssemblyName">
      <summary>Gets or sets the assembly name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.MethodSpecifier.ClassName">
      <summary>Gets or sets the class name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.MethodSpecifier.MethodName">
      <summary>Gets or sets the method name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.MirrorToClause">
      <summary>Represents the MIRROR TO clause of the BACKUP statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MirrorToClause.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.MirrorToClause" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MirrorToClause.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MirrorToClause.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.MirrorToClause.Devices">
      <summary>Gets a list of devices to mirror to.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ModifyFileGroupOption">
      <summary>Specifies the file group modification option.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ModifyFileGroupOption.None">
      <summary>Option is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ModifyFileGroupOption.ReadWrite">
      <summary>Option is ReadWrite</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ModifyFileGroupOption.ReadWriteOld">
      <summary>Option is ReadWriteOld</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ModifyFileGroupOption.ReadOnly">
      <summary>Option is ReadOnly</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ModifyFileGroupOption.ReadOnlyOld">
      <summary>Option is ReadOnlyOld</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.MoveConversationStatement">
      <summary>Represents the MOVE CONVERSATION statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MoveConversationStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.MoveConversationStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MoveConversationStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MoveConversationStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.MoveConversationStatement.Conversation">
      <summary>Gets or sets the conversation handle.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.MoveConversationStatement.Group">
      <summary>Gets or sets the group to which the conversation is to move.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.MoveRestoreOption">
      <summary>Represents the MOVE restore option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MoveRestoreOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.MoveRestoreOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MoveRestoreOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.MoveRestoreOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.MoveRestoreOption.LogicalFileName">
      <summary>Gets or sets the logical file name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.MoveRestoreOption.OSFileName">
      <summary>Gets or sets the operating system file name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.NameFileDeclarationOption">
      <summary>Represents the name file declaration option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.NameFileDeclarationOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.NameFileDeclarationOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.NameFileDeclarationOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.NameFileDeclarationOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.NameFileDeclarationOption.IsNewName">
      <summary>Gets or sets whether NEWNAME is specified.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.NameFileDeclarationOption.LogicalFileName">
      <summary>Gets or sets the logical file name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.NullableConstraint">
      <summary>Represents the nullable constraint.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.NullableConstraint.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.NullableConstraint" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.NullableConstraint.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.NullableConstraint.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.NullableConstraint.Nullable">
      <summary>Gets or sets whether the column can be NULL.</summary>
      <returns>Returns true if the column can be NULL, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.NullIfExpression">
      <summary>Represents the NULLIF expression.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.NullIfExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.NullIfExpression" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.NullIfExpression.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.NullIfExpression.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.NullIfExpression.FirstExpression">
      <summary>Gets or sets the first expression.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.NullIfExpression.SecondExpression">
      <summary>Gets or sets the second expression.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.NullNotNull">
      <summary>Specifies null value.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.NullNotNull.NotSpecified">
      <summary>Value is NotSpecified</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.NullNotNull.Null">
      <summary>Value is Null</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.NullNotNull.NotNull">
      <summary>Value is NotNull</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.OdbcConvertSpecification">
      <summary>Represents the Odbc convert specification.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OdbcConvertSpecification.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OdbcConvertSpecification" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OdbcConvertSpecification.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OdbcConvertSpecification.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OdbcConvertSpecification.Identifier">
      <summary>Gets or sets the convert specification.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.OdbcFunctionCall">
      <summary>Represents the ODBC function call.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OdbcFunctionCall.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OdbcFunctionCall" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OdbcFunctionCall.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OdbcFunctionCall.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OdbcFunctionCall.Name">
      <summary>Gets or sets the function name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OdbcFunctionCall.Parameters">
      <summary>Gets the list of function parameters.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OdbcFunctionCall.ParametersUsed">
      <summary>Gets or sets whether there are parentheses.</summary>
      <returns>Returns true if there are parentheses, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.OdbcQualifiedJoin">
      <summary>Represents the ODBC qualified join in a FROM clause.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OdbcQualifiedJoin.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OdbcQualifiedJoin" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OdbcQualifiedJoin.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OdbcQualifiedJoin.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OdbcQualifiedJoin.TableSource">
      <summary>Gets or sets the table source.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.OfflineFileDeclarationOption">
      <summary>Represents the offline file declaration option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OfflineFileDeclarationOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OfflineFileDeclarationOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OfflineFileDeclarationOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OfflineFileDeclarationOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.OnFailureAuditOption">
      <summary>Represents the ON_FAILURE option in a CREATE/ALTER SERVER AUDIT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OnFailureAuditOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OnFailureAuditOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OnFailureAuditOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OnFailureAuditOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OnFailureAuditOption.ShutdownOnFailure">
      <summary>Gets or sets whether SHUTDOWN is specified.</summary>
      <returns>Returns true if SHUTDOWN is specified, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.OnOffAlterDatabaseOption">
      <summary>Represents an option that can be set to ON or OFF in an ALTER DATABASE statement SET case.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OnOffAlterDatabaseOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OnOffAlterDatabaseOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OnOffAlterDatabaseOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OnOffAlterDatabaseOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OnOffAlterDatabaseOption.Option">
      <summary>Gets or sets the option kind.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OnOffAlterDatabaseOption.OptionState">
      <summary>Gets or sets the option state.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OptionState" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.OnOffSessionOption">
      <summary>Represents the TRACK_CAUSALITY and STARTUP_STATE event session options.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OnOffSessionOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OnOffSessionOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OnOffSessionOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OnOffSessionOption.OptionState">
      <summary>Gets or sets the option state.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OptionState" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.OpenCursorStatement">
      <summary>Represents the OPEN cursor statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OpenCursorStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OpenCursorStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OpenCursorStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OpenCursorStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.OpenMasterKeyStatement">
      <summary>Represents the OPEN MASTER KEY statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OpenMasterKeyStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OpenMasterKeyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OpenMasterKeyStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OpenMasterKeyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OpenMasterKeyStatement.Password">
      <summary>Gets or sets the password.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.OpenQueryTableSource">
      <summary>Represents the OPENQUERY table source.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OpenQueryTableSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OpenQueryTableSource" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OpenQueryTableSource.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OpenQueryTableSource.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OpenQueryTableSource.LinkedServer">
      <summary>Gets or sets the name of the linked server.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OpenQueryTableSource.Query">
      <summary>Gets or sets the query to execute on the linked server.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.OpenRowsetDataModificationTarget">
      <summary>Represents the OPENROWSET data modification target.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OpenRowsetDataModificationTarget.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OpenRowsetDataModificationTarget" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OpenRowsetDataModificationTarget.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OpenRowsetDataModificationTarget.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OpenRowsetDataModificationTarget.OpenRowset">
      <summary>Gets or sets the table source.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.OpenRowsetTableSource">
      <summary>Represents the OPENROWSET table source.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OpenRowsetTableSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OpenRowsetTableSource" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OpenRowsetTableSource.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OpenRowsetTableSource.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OpenRowsetTableSource.DataSource">
      <summary>Gets or sets the data source.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OpenRowsetTableSource.Object">
      <summary>Gets or sets the name of the object to manipulate.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OpenRowsetTableSource.Password">
      <summary>Gets or sets the password.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OpenRowsetTableSource.ProviderName">
      <summary>Gets or sets the provider name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OpenRowsetTableSource.ProviderString">
      <summary>Gets or sets the provider string.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OpenRowsetTableSource.Query">
      <summary>Gets or sets the query.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OpenRowsetTableSource.UserId">
      <summary>Gets or sets the user ID.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.OpenSymmetricKeyStatement">
      <summary>Represents the OPEN SYMMETRIC KEY statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OpenSymmetricKeyStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OpenSymmetricKeyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OpenSymmetricKeyStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OpenSymmetricKeyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OpenSymmetricKeyStatement.DecryptionMechanism">
      <summary>Gets or sets the decryption mechanism.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OpenSymmetricKeyStatement.Name">
      <summary>Gets or sets the name of the key.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.OpenXmlTableSource">
      <summary>Represents the OPENXML table source.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OpenXmlTableSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OpenXmlTableSource" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OpenXmlTableSource.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OpenXmlTableSource.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OpenXmlTableSource.Flags">
      <summary>Gets or sets the mapping flags.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OpenXmlTableSource.RowPattern">
      <summary>Gets or sets the pattern that identifies the nodes.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OpenXmlTableSource.SchemaDeclarationItems">
      <summary>Gets a list of schema declaration items.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OpenXmlTableSource.TableName">
      <summary>Gets or sets the table name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OpenXmlTableSource.Variable">
      <summary>Gets or sets the XML document handle.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.OptimizeForOptimizerHint">
      <summary>Represents the OPTIMIZE FOR optimizer hint.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OptimizeForOptimizerHint.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OptimizeForOptimizerHint" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OptimizeForOptimizerHint.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OptimizeForOptimizerHint.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OptimizeForOptimizerHint.IsForUnknown">
      <summary>Gets or sets whether UNKNOWN is specified.</summary>
      <returns>Returns true if UNKNOWN was specified, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OptimizeForOptimizerHint.Pairs">
      <summary>Gets a list of variable-value pairs.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.OptimizerHint">
      <summary>Represents a single optimizer hint.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OptimizerHint.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OptimizerHint" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OptimizerHint.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.OptionState">
      <summary>Specifies an option state.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.OptionState.NotSet">
      <summary>State is NotSet</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.OptionState.On">
      <summary>State is On</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.OptionState.Off">
      <summary>State is Off</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.OrderBulkInsertOption">
      <summary>Represents the ORDER option in a BULK INSERT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OrderBulkInsertOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OrderBulkInsertOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OrderBulkInsertOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OrderBulkInsertOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OrderBulkInsertOption.Columns">
      <summary>Gets a list of columns to sort.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OrderBulkInsertOption.IsUnique">
      <summary>Gets or sets whether UNIQUE is specified, which can only happen in case of OPENROWSET (BULK ...).</summary>
      <returns>Returns true if UNIQUE was specified, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.OrderByClause">
      <summary>Represents the ORDER BY clause, which can be used in statements such as SELECT.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OrderByClause.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OrderByClause" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OrderByClause.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OrderByClause.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OrderByClause.OrderByElements">
      <summary>Gets a list of the items.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.OutputClause">
      <summary>Represents the OUTPUT clause.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OutputClause.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OutputClause" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OutputClause.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OutputClause.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OutputClause.FirstSelectColumns">
      <summary>Gets the first list of select columns.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OutputClause.IntoTable">
      <summary>Gets or sets the table; can be SchemaObjectName or a variable.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OutputClause.IntoTableColumns">
      <summary>Gets a list of columns for the table.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OutputClause.SecondSelectColumns">
      <summary>Gets the second list of select columns.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.OverClause">
      <summary>Represents the OVER clause.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OverClause.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OverClause" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OverClause.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.OverClause.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OverClause.OrderByClause">
      <summary>Gets or sets the ORDER BY clause, which can be used in statements such as SELECT.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OrderByClause" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.OverClause.Partitions">
      <summary>Gets a list of partitions.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.PageVerifyAlterDatabaseOption">
      <summary>Represents the PAGE_VERIFY option in an ALTER DATABASE statement SET case.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PageVerifyAlterDatabaseOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.PageVerifyAlterDatabaseOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PageVerifyAlterDatabaseOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PageVerifyAlterDatabaseOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PageVerifyAlterDatabaseOption.Value">
      <summary>Gets or sets the actual option value.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.PageVerifyAlterDatabaseOptionKind">
      <summary>Specifies the page verify alter database option kind value.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PageVerifyAlterDatabaseOptionKind.None">
      <summary>Option kind is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PageVerifyAlterDatabaseOptionKind.Checksum">
      <summary>Option kind is Checksum</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PageVerifyAlterDatabaseOptionKind.TornPageDetection">
      <summary>Option kind is TornPageDetection</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ParameterizationAlterDatabaseOption">
      <summary>Represents the PARAMETERIZATION option in an ALTER DATABASE statement SET case.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ParameterizationAlterDatabaseOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ParameterizationAlterDatabaseOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ParameterizationAlterDatabaseOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ParameterizationAlterDatabaseOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ParameterizationAlterDatabaseOption.IsSimple">
      <summary>Gets or sets whether SIMPLE parameterization is specified.</summary>
      <returns>Returns true if SIMPLE parameterization is specified, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ParameterizedDataType">
      <summary>Represents the data type abstract class, which can have parameters.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ParameterizedDataType.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ParameterizedDataType" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ParameterizedDataType.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ParameterizedDataType.Parameters">
      <summary>Gets a list of parameters if the schema object is a user-defined function.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ParameterlessCall">
      <summary>Represents calls without parameters.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ParameterlessCall.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ParameterlessCall" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ParameterlessCall.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ParameterlessCall.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ParameterlessCall.ParameterlessCallType">
      <summary>Gets or sets the call type value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ParameterlessCallType" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ParameterlessCallType">
      <summary>Specifies the parameterless call type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ParameterlessCallType.User">
      <summary>Call type is User</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ParameterlessCallType.CurrentUser">
      <summary>Call type is CurrentUser</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ParameterlessCallType.SessionUser">
      <summary>Call type is SessionUser</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ParameterlessCallType.SystemUser">
      <summary>Call type is SystemUser</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ParameterlessCallType.CurrentTimestamp">
      <summary>Call type is CurrentTimestamp</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ParameterModifier">
      <summary>Specifies a parameter modifier.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ParameterModifier.None">
      <summary>Modifier is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ParameterModifier.Output">
      <summary>Modifier is Output</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ParameterModifier.ReadOnly">
      <summary>Modifier is ReadOnly</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ParameterStyle">
      <summary>Specifies the parameter style.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ParameterStyle.None">
      <summary>Style is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ParameterStyle.Sql">
      <summary>Style is Sql</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ParameterStyle.General">
      <summary>Style is General</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ParenthesisExpression">
      <summary>Represents the parenthesis expression.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ParenthesisExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ParenthesisExpression" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ParenthesisExpression.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ParenthesisExpression.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ParenthesisExpression.Expression">
      <summary>Gets or sets the expression.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.PartitionFunctionCall">
      <summary>Represents the partition function call.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PartitionFunctionCall.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.PartitionFunctionCall" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PartitionFunctionCall.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PartitionFunctionCall.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PartitionFunctionCall.DatabaseName">
      <summary>Gets or sets the database name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PartitionFunctionCall.FunctionName">
      <summary>Gets or sets the function name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PartitionFunctionCall.Parameters">
      <summary>Gets a list of parameters to the function.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.PartitionFunctionRange">
      <summary>Specifies the partition function range.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PartitionFunctionRange.NotSpecified">
      <summary>Range is NotSpecified</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PartitionFunctionRange.Left">
      <summary>Range is Left</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PartitionFunctionRange.Right">
      <summary>Range is Right</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.PartitionParameterType">
      <summary>Represents the parameter type in a CREATE PARTITION FUNCTION statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PartitionParameterType.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.PartitionParameterType" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PartitionParameterType.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PartitionParameterType.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PartitionParameterType.Collation">
      <summary>Gets or sets the collation name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PartitionParameterType.DataType">
      <summary>Gets or sets the parameter type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DataType" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.PartitionSpecifier">
      <summary>Represents the partition specifier.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PartitionSpecifier.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.PartitionSpecifier" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PartitionSpecifier.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PartitionSpecifier.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PartitionSpecifier.All">
      <summary>Returns whether ALL was specified.</summary>
      <returns>Returns true if ALL was specified, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PartitionSpecifier.Number">
      <summary>Gets or sets the expression that shows the partition. Optional, may be NULL.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Expression" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.PartnerAlterDatabaseOption">
      <summary>Represents the PARTNER option in an ALTER DATABASE statement SET case.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PartnerAlterDatabaseOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.PartnerAlterDatabaseOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PartnerAlterDatabaseOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PartnerAlterDatabaseOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PartnerAlterDatabaseOption.Option">
      <summary>Gets or sets the partner option.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PartnerAlterDatabaseOption.PartnerServer">
      <summary>Gets or sets the partner server.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PartnerAlterDatabaseOption.Timeout">
      <summary>Gets or sets the timeout.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.PartnerAlterDatabaseOptionKind">
      <summary>Specifies the partner alter database option kind.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PartnerAlterDatabaseOptionKind.None">
      <summary>Kind is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PartnerAlterDatabaseOptionKind.PartnerServer">
      <summary>Kind is PartnerServer</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PartnerAlterDatabaseOptionKind.Failover">
      <summary>Kind is Failover</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PartnerAlterDatabaseOptionKind.ForceServiceAllowDataLoss">
      <summary>Kind is ForceServiceAllowDataLoss</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PartnerAlterDatabaseOptionKind.Off">
      <summary>Kind is Off</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PartnerAlterDatabaseOptionKind.Resume">
      <summary>Kind is Resume</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PartnerAlterDatabaseOptionKind.SafetyFull">
      <summary>Kind is SafetyFull</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PartnerAlterDatabaseOptionKind.SafetyOff">
      <summary>Kind is SafetyOff</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PartnerAlterDatabaseOptionKind.Suspend">
      <summary>Kind is Suspend</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PartnerAlterDatabaseOptionKind.Timeout">
      <summary>Kind is Timeout</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.PasswordAlterLoginOption">
      <summary>Represents the PASSWORD option in an ALTER LOGIN statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PasswordAlterLoginOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.PasswordAlterLoginOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PasswordAlterLoginOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PasswordAlterLoginOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PasswordAlterLoginOption.Hashed">
      <summary>Gets or sets whether HASHED was specified.</summary>
      <returns>Returns true if HASHED was specified, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PasswordAlterLoginOption.MustChange">
      <summary>Gets or sets whether MUST_CHANGE was specified.</summary>
      <returns>Returns true if MUST_CHANGE was specified, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PasswordAlterLoginOption.OldPassword">
      <summary>Gets or sets the old password, to which a new password would be assigned.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PasswordAlterLoginOption.Password">
      <summary>Gets or sets the password for the login being changed.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PasswordAlterLoginOption.Unlock">
      <summary>Gets or sets whether UNLOCK was specified.</summary>
      <returns>Returns true if UNLOCK was specified, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.PasswordCreateLoginSource">
      <summary>Represents the password case in a CREATE LOGIN statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PasswordCreateLoginSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.PasswordCreateLoginSource" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PasswordCreateLoginSource.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PasswordCreateLoginSource.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PasswordCreateLoginSource.Hashed">
      <summary>Gets or sets whether HASHED is specified.</summary>
      <returns>Returns true if the HASHED option was specified, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PasswordCreateLoginSource.MustChange">
      <summary>Gets or sets whether the MUST_CHANGE option is specified.</summary>
      <returns>Returns true if the MUST_CHANGE option was specified, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PasswordCreateLoginSource.Options">
      <summary>Gets a list of login options.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PasswordCreateLoginSource.Password">
      <summary>Gets or sets the password.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.PayloadOption">
      <summary>Represents a single payload option in a CREATE / ALTER ENDPOINT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PayloadOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.PayloadOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PayloadOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PayloadOption.Kind">
      <summary>Gets or sets the option kind (for duplicate checking).</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.PayloadOptionKinds" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.PayloadOptionKinds">
      <summary>Specifies a payload option kind.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PayloadOptionKinds.None">
      <summary>Option kind is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PayloadOptionKinds.WebMethod">
      <summary>Option kind is WebMethod</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PayloadOptionKinds.Batches">
      <summary>Option kind is Batches</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PayloadOptionKinds.Wsdl">
      <summary>Option kind is Wsdl</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PayloadOptionKinds.Sessions">
      <summary>Option kind is Sessions</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PayloadOptionKinds.LoginType">
      <summary>Option kind is LoginType</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PayloadOptionKinds.SessionTimeout">
      <summary>Option kind is SessionTimeout</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PayloadOptionKinds.Database">
      <summary>Option kind is Database</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PayloadOptionKinds.Namespace">
      <summary>Option kind is Namespace</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PayloadOptionKinds.Schema">
      <summary>Option kind is Schema</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PayloadOptionKinds.CharacterSet">
      <summary>Option kind is CharacterSet</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PayloadOptionKinds.HeaderLimit">
      <summary>Option kind is HeaderLimit</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PayloadOptionKinds.Authentication">
      <summary>Option kind is Authentication</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PayloadOptionKinds.Encryption">
      <summary>Option kind is Encryption</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PayloadOptionKinds.MessageForwarding">
      <summary>Option kind is MessageForwarding</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PayloadOptionKinds.MessageForwardSize">
      <summary>Option kind is MessageForwardSize</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PayloadOptionKinds.Role">
      <summary>Option kind is Role</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PayloadOptionKinds.SoapOptions">
      <summary>Option kind is SoapOptions</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PayloadOptionKinds.ServiceBrokerOptions">
      <summary>Option kind is ServiceBrokerOptions</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PayloadOptionKinds.DatabaseMirroringOptions">
      <summary>Option kind is DatabaseMirroringOptions</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.Permission">
      <summary>Represents the permission that can be used in the security statement body.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Permission.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Permission" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Permission.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Permission.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.Permission.Columns">
      <summary>Gets a list of columns.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.Permission.Identifiers">
      <summary>Gets a list of permissions.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.PermissionSetOption">
      <summary>Specifies the permission set option.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PermissionSetOption.None">
      <summary>Permission is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PermissionSetOption.Safe">
      <summary>Permission is Safe</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PermissionSetOption.ExternalAccess">
      <summary>Permission is ExternalAccess</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PermissionSetOption.Unsafe">
      <summary>Permission is Unsafe</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.PivotedTableSource">
      <summary>Represents the pivoted table source in a FROM clause.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PivotedTableSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.PivotedTableSource" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PivotedTableSource.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PivotedTableSource.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PivotedTableSource.AggregateFunctionIdentifiers">
      <summary>Gets a list of the identifiers that represent the aggregate function.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PivotedTableSource.InColumns">
      <summary>Gets a list of In columns.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PivotedTableSource.PivotColumn">
      <summary>Gets or sets the pivot column.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PivotedTableSource.TableSource">
      <summary>Gets or sets the table source.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PivotedTableSource.ValueColumns">
      <summary>Gets a list of value columns.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.PortsEndpointProtocolOption">
      <summary>Represents the PORTS HTTP endpoint protocol option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PortsEndpointProtocolOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.PortsEndpointProtocolOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PortsEndpointProtocolOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PortsEndpointProtocolOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PortsEndpointProtocolOption.PortTypes">
      <summary>Gets or sets port types.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.PortTypes" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.PortTypes">
      <summary>Specifies port types.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PortTypes.None">
      <summary>Type is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PortTypes.Clear">
      <summary>Type is Clear</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PortTypes.Ssl">
      <summary>Type is Ssl</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.PredicateSetStatement">
      <summary>Represents the various SET {...} { ON | OFF } options in the Transact-SQL grammar.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PredicateSetStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.PredicateSetStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PredicateSetStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PredicateSetStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PredicateSetStatement.Options">
      <summary>Gets or sets the specific SET option(s) that this statement represents.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SetOptions" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.PrimaryExpression">
      <summary>Represents the abstract base class for primary expressions.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PrimaryExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.PrimaryExpression" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PrimaryExpression.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PrimaryExpression.Collation">
      <summary>Gets or sets the collation identifier.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.PrincipalType">
      <summary>Specifies the principal type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PrincipalType.Null">
      <summary>Type is Null</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PrincipalType.Public">
      <summary>Type is Public</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PrincipalType.Identifier">
      <summary>Type is Identifier</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.PrintStatement">
      <summary>Represents the PRINT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PrintStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.PrintStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PrintStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PrintStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PrintStatement.Expression">
      <summary>Gets or sets the print expression.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Expression" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.Privilege80">
      <summary>Represents a privilege that can be used in a security statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Privilege80.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Privilege80" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Privilege80.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Privilege80.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.Privilege80.Columns">
      <summary>Gets a list of column names.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.Privilege80.PrivilegeType80">
      <summary>Gets or sets the privilege type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.PrivilegeType80" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.PrivilegeSecurityElement80">
      <summary>Represents the security element that has privileges.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PrivilegeSecurityElement80.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.PrivilegeSecurityElement80" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PrivilegeSecurityElement80.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.PrivilegeSecurityElement80.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PrivilegeSecurityElement80.Columns">
      <summary>Gets a list of column names.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PrivilegeSecurityElement80.Privileges">
      <summary>Gets a list of privileges.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.PrivilegeSecurityElement80.SchemaObjectName">
      <summary>Gets or sets the schema object name.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.PrivilegeType80">
      <summary>Specifies the privilege type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PrivilegeType80.All">
      <summary>Type is All</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PrivilegeType80.Select">
      <summary>Type is Select</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PrivilegeType80.Insert">
      <summary>Type is Insert</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PrivilegeType80.Delete">
      <summary>Type is Delete</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PrivilegeType80.Update">
      <summary>Type is Update</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PrivilegeType80.Execute">
      <summary>Type is Execute</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.PrivilegeType80.References">
      <summary>Type is References</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureOptions">
      <summary>Specifies procedure options.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureOptions.None">
      <summary>Option is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureOptions.Encryption">
      <summary>Option is Encryption</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureOptions.Recompile">
      <summary>Option is Recompile</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureParameter">
      <summary>Represents a parameter that can be passed into a procedure.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureParameter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureParameter" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureParameter.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureParameter.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureParameter.DataType">
      <summary>Gets or sets the data type of the variable.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DataType" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureParameter.Default">
      <summary>Gets or sets the expression used to evaluate the default value for the parameter.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureParameter.IsVarying">
      <summary>Gets or sets whether VARYING is defined.</summary>
      <returns>Returns true if VARYING is defined, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureParameter.Modifier">
      <summary>Gets or sets the parameter modifier value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ParameterModifier" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureParameter.Name">
      <summary>Gets or sets the name of the variable. This includes the @ at the beginning.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureReference">
      <summary>Represents a reference to a procedure by name and number.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureReference" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureReference.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureReference.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureReference.Name">
      <summary>Gets or sets the procedure name.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureReference.Number">
      <summary>Gets or sets the procedure number.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureStatementBody">
      <summary>Represents the CREATE/ALTER PROCEDURE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureStatementBody.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureStatementBody" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureStatementBody.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureStatementBody.IsForReplication">
      <summary>Gets or sets whether FOR REPLICATION is defined.</summary>
      <returns>Returns true if FOR REPLICATION is defined, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureStatementBody.Options">
      <summary>Gets or sets the procedure with options.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureOptions" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureStatementBody.ProcedureReference">
      <summary>Gets or sets the name of the procedure.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureReference" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureStatementBodyBase">
      <summary>Represents the procedure statement body.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureStatementBodyBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureStatementBodyBase" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureStatementBodyBase.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureStatementBodyBase.ExecuteAs">
      <summary>Gets or sets the Execute As clause.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsClause" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureStatementBodyBase.MethodSpecifier">
      <summary>Gets or sets the method specifier.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.MethodSpecifier" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureStatementBodyBase.Parameters">
      <summary>Gets a list of parameters.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ProcedureStatementBodyBase.StatementList">
      <summary>Gets or sets a statement list.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.StatementList" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ProcessAffinityRange">
      <summary>Represents a range of process affinity values.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ProcessAffinityRange.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ProcessAffinityRange" /> class. </summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ProcessAffinityRange.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ProcessAffinityRange.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls the Accept method on the children with the given visitor.</summary>
      <param name="visitor"></param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ProcessAffinityRange.From">
      <summary>Gets or sets the lower limit of the process affinity range.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ProcessAffinityRange.To">
      <summary>Gets or sets the upper limit of the process affinity range.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ProcessAffinityType">
      <summary>Represents the type of process affinity in the ALTER SERVER CONFIGURATION statement.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ProcessAffinityType.CpuAuto">
      <summary>Specifies that process affinity should be determined automatically.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ProcessAffinityType.Cpu">
      <summary>Specifies that process affinity will be specified for a particular cpu.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ProcessAffinityType.NumaNode">
      <summary>Specifies nonuniform memory architecture (NUMA) for process affinity.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ProviderEncryptionSource">
      <summary>Represents a reference to an EKM provider.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ProviderEncryptionSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ProviderEncryptionSource" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ProviderEncryptionSource.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ProviderEncryptionSource.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ProviderEncryptionSource.KeyOptions">
      <summary>Gets a list of options for this key.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ProviderEncryptionSource.Name">
      <summary>Gets or sets the provider name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ProviderKeyNameKeyOption">
      <summary>Represents the PROVIDER_KEY_NAME option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ProviderKeyNameKeyOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ProviderKeyNameKeyOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ProviderKeyNameKeyOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ProviderKeyNameKeyOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ProviderKeyNameKeyOption.KeyName">
      <summary>Gets or sets the name referenced in the Extensible Key Management provider.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.QualifiedJoin">
      <summary>Represents the qualified join in a FROM clause.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.QualifiedJoin.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.QualifiedJoin" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.QualifiedJoin.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.QualifiedJoin.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.QualifiedJoin.FirstTableSource">
      <summary>Gets or sets the first table source.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TableSource" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.QualifiedJoin.JoinHint">
      <summary>Gets or sets the join hint.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.JoinHint" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.QualifiedJoin.QualifiedJoinType">
      <summary>Gets or sets the qualified join type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.QualifiedJoinType" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.QualifiedJoin.SearchCondition">
      <summary>Gets or sets the search condition.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.QualifiedJoin.SecondTableSource">
      <summary>Gets or sets the second table source.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TableSource" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.QualifiedJoinType">
      <summary>Specifies the qualified join type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.QualifiedJoinType.Inner">
      <summary>Type is Inner</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.QualifiedJoinType.LeftOuter">
      <summary>Type is LeftOuter</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.QualifiedJoinType.RightOuter">
      <summary>Type is RightOuter</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.QualifiedJoinType.FullOuter">
      <summary>Type is FullOuter</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.QueryDerivedTable">
      <summary>Represents a derived table.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.QueryDerivedTable.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.QueryDerivedTable" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.QueryDerivedTable.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.QueryDerivedTable.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.QueryDerivedTable.Subquery">
      <summary>Gets or sets the subquery.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Subquery" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.QueryExpression">
      <summary>Represents the abstract base class for the query expression hierarchy in the select statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.QueryExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.QueryExpression" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.QueryExpression.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.QueryParenthesis">
      <summary>Represents the parenthesis expression that wraps a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.QueryExpression" />.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.QueryParenthesis.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.QueryParenthesis" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.QueryParenthesis.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.QueryParenthesis.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.QueryParenthesis.QueryExpression">
      <summary>Gets or sets the usage of a unique row filter.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.QueryExpression" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.QuerySpecification">
      <summary>Represents the major part of the SELECT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.QuerySpecification.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.QuerySpecification" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.QuerySpecification.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.QuerySpecification.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.QuerySpecification.FromClauses">
      <summary>Gets a list of FROM clauses.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.QuerySpecification.GroupByClause">
      <summary>Gets or sets a GROUP BY clause.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.QuerySpecification.HavingClause">
      <summary>Gets or sets a HAVING clause.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.QuerySpecification.Into">
      <summary>Gets or sets the Into table name.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.QuerySpecification.SelectElements">
      <summary>Gets a list of the selected columns or set variables.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.QuerySpecification.TopRowFilter">
      <summary>Gets or sets the usage of the top row filter.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.QuerySpecification.UniqueRowFilter">
      <summary>Gets or sets the unique row filter value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.UniqueRowFilter" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.QuerySpecification.WhereClause">
      <summary>Gets or sets a WHERE clause.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.WhereClause" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.QueueDelayAuditOption">
      <summary>Represents the QUEUE_DELAY option in the CREATE/ALTER SERVER AUDIT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.QueueDelayAuditOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.QueueDelayAuditOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.QueueDelayAuditOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.QueueDelayAuditOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.QueueDelayAuditOption.Delay">
      <summary>Gets or sets the delay.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.QueueOption">
      <summary>Represents the base for the QUEUE option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.QueueOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.QueueOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.QueueOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.QueueOption.QueueOptionType">
      <summary>Gets or sets the queue option type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.QueueOptionType" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.QueueOptionType">
      <summary>Specifies the QUEUE option type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.QueueOptionType.Status">
      <summary>Type is Status</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.QueueOptionType.Retention">
      <summary>Type is Retention</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.QueueOptionType.ActivationStatus">
      <summary>Type is ActivationStatus</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.QueueOptionType.ActivationProcedureName">
      <summary>Type is ActivationProcedureName</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.QueueOptionType.ActivationMaxQueueReaders">
      <summary>Type is ActivationMaxQueueReaders</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.QueueOptionType.ActivationExecuteAs">
      <summary>Type is ActivationExecuteAs</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.QueueOptionType.ActivationDrop">
      <summary>Type is ActivationDrop</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.QueueOptionType.PoisonMessageHandlingStatus">
      <summary />
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.QueueStatement">
      <summary>Represents the base for queue statements.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.QueueStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.QueueStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.QueueStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.QueueStatement.Name">
      <summary>Gets or sets the name of the queue.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.QueueStatement.QueueOptions">
      <summary>Gets a list of queue options.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.QueueStateOption">
      <summary>Represents the base for a QUEUE option that has a state.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.QueueStateOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.QueueStateOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.QueueStateOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.QueueStateOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.QueueStateOption.OptionState">
      <summary>Gets or sets the option state.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OptionState" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.QueueTSqlFragmentOption">
      <summary>Represents the base for a QUEUE option that has a TSqlFragment.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.QueueTSqlFragmentOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.QueueTSqlFragmentOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.QueueTSqlFragmentOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.QueueTSqlFragmentOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.QueueTSqlFragmentOption.TSqlFragment">
      <summary>Gets or sets a TSqlFragment.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.QuoteType">
      <summary>Specifies the quote type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.QuoteType.NotQuoted">
      <summary>Type is NotQuoted</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.QuoteType.SquareBracket">
      <summary>Type is SquareBracket</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.QuoteType.DoubleQuote">
      <summary>Type is DoubleQuote</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.RaiseErrorLegacyStatement">
      <summary>Represents the legacy style of a RAISERROR statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RaiseErrorLegacyStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.RaiseErrorLegacyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RaiseErrorLegacyStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RaiseErrorLegacyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RaiseErrorLegacyStatement.FirstParameter">
      <summary>Gets or sets the first parameter.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RaiseErrorLegacyStatement.SecondParameter">
      <summary>Gets or sets the second parameter.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.RaiseErrorOptions">
      <summary>Specifies the RAISERROR option.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RaiseErrorOptions.None">
      <summary>Option is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RaiseErrorOptions.Log">
      <summary>Option is Log</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RaiseErrorOptions.NoWait">
      <summary>Option is NoWait</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RaiseErrorOptions.SetError">
      <summary>Option is SetError</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.RaiseErrorStatement">
      <summary>Represents the RAISERROR statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RaiseErrorStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.RaiseErrorStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RaiseErrorStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RaiseErrorStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RaiseErrorStatement.FirstParameter">
      <summary>Gets or sets the first parameter value.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RaiseErrorStatement.OptionalParameters">
      <summary>Gets a list of optional parameters.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RaiseErrorStatement.RaiseErrorOptions">
      <summary>Gets or sets the RAISERROR option value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.RaiseErrorOptions" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RaiseErrorStatement.SecondParameter">
      <summary>Gets or sets the second parameter.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RaiseErrorStatement.ThirdParameter">
      <summary>Gets or sets the third parameter.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ReadOnlyForClause">
      <summary>Represents the FOR READ ONLY case used in the DECLARE CURSOR statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ReadOnlyForClause.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ReadOnlyForClause" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ReadOnlyForClause.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ReadOnlyForClause.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ReadTextStatement">
      <summary>Represents the READTEXT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ReadTextStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ReadTextStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ReadTextStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ReadTextStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ReadTextStatement.Column">
      <summary>Gets or sets the column name.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Column" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ReadTextStatement.HoldLock">
      <summary>Gets or sets whether HOLDLOCK was defined.</summary>
      <returns>Returns true if HOLDLOCK was defined, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ReadTextStatement.Offset">
      <summary>Gets or sets the offset before reading.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ReadTextStatement.Size">
      <summary>Gets or sets the size to read.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ReadTextStatement.TextPointer">
      <summary>Gets or sets the text pointer.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ReceiveStatement">
      <summary>Represents the RECEIVE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ReceiveStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ReceiveStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ReceiveStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ReceiveStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ReceiveStatement.Into">
      <summary>Gets or sets the table to select into the columns from received messages.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ReceiveStatement.IsConversationGroupIdWhere">
      <summary>Gets or sets whether a conversation group ID is specified in a WHERE clause.</summary>
      <returns>Returns true if a conversation group ID was specified in a WHERE clause, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ReceiveStatement.Queue">
      <summary>Gets or sets the name of the queue from which to receive messages.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ReceiveStatement.SelectElements">
      <summary>Gets or sets the selected columns or set variables.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ReceiveStatement.Top">
      <summary>Gets or sets the number of messages to return.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ReceiveStatement.Where">
      <summary>Gets or sets the conversation or conversation group for received messages.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ReconfigureStatement">
      <summary>Represents the RECONFIGURE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ReconfigureStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ReconfigureStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ReconfigureStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ReconfigureStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ReconfigureStatement.WithOverride">
      <summary>Gets or sets whether WITH OVERRIDE is used.</summary>
      <returns>Returns true if WITH OVERRIDE is used, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.RecoveryAlterDatabaseOption">
      <summary>Represents the RECOVERY option in the ALTER DATABASE statement, SET case.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RecoveryAlterDatabaseOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.RecoveryAlterDatabaseOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RecoveryAlterDatabaseOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RecoveryAlterDatabaseOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RecoveryAlterDatabaseOption.Value">
      <summary>Gets or sets the option value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.RecoveryAlterDatabaseOptionKind" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.RecoveryAlterDatabaseOptionKind">
      <summary>Specifies the kind of RECOVERY option in the ALTER DATABASE statement.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RecoveryAlterDatabaseOptionKind.None">
      <summary>Kind is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RecoveryAlterDatabaseOptionKind.Full">
      <summary>Kind is Full</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RecoveryAlterDatabaseOptionKind.BulkLogged">
      <summary>Kind is BulkLogged</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RecoveryAlterDatabaseOptionKind.Simple">
      <summary>Kind is Simple</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.RemoteServiceBindingStatementBase">
      <summary>Represents the common base for CREATE and ALTER REMOTE SERVICE BINDING statements.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RemoteServiceBindingStatementBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.RemoteServiceBindingStatementBase" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RemoteServiceBindingStatementBase.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RemoteServiceBindingStatementBase.Anonymous">
      <summary>Gets or sets the authorization option state.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OptionState" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RemoteServiceBindingStatementBase.Name">
      <summary>Gets or sets the binding name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RemoteServiceBindingStatementBase.User">
      <summary>Gets or sets the principal who owns the certificate associated with remote service.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ReserveDiskSpaceAuditFileOption">
      <summary>Represents the MAX_ROLLOVER_FILES option in case of FILE audit target.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ReserveDiskSpaceAuditFileOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ReserveDiskSpaceAuditFileOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ReserveDiskSpaceAuditFileOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ReserveDiskSpaceAuditFileOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ReserveDiskSpaceAuditFileOption.Value">
      <summary>Gets or sets the option state value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OptionState" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ResourcePoolParameter">
      <summary>Represents the RESOURCE POOL statement parameters.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ResourcePoolParameter.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ResourcePoolParameter.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ResourcePoolParameter.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ResourcePoolParameter.ParameterType">
      <summary>Gets or sets the resource pool parameter type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ResourcePoolParameterType" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ResourcePoolParameter.ParameterValue">
      <summary>Gets or sets the resource pool parameter value.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ResourcePoolParameterType">
      <summary>Specifies a resource pool parameter type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ResourcePoolParameterType.Unknown">
      <summary>Type is Unknown</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ResourcePoolParameterType.MaxCpuPercent">
      <summary>Type is MaxCpuPercent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ResourcePoolParameterType.MaxMemoryPercent">
      <summary>Type is MaxMemoryPercent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ResourcePoolParameterType.MinCpuPercent">
      <summary>Type is MinCpuPercent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ResourcePoolParameterType.MinMemoryPercent">
      <summary>Type is MinMemoryPercent</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ResourcePoolStatement">
      <summary>Represents the CREATE RESOURCE POOL and ALTER RESOURCE POOL statements.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ResourcePoolStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ResourcePoolStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ResourcePoolStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ResourcePoolStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ResourcePoolStatement.Name">
      <summary>Gets or sets the name, which must be unique within an instance of SQL Server.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ResourcePoolStatement.ResourcePoolParameters">
      <summary>Gets a list of resource pool parameters.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.RestoreMasterKeyStatement">
      <summary>Represents the RESTORE MASTER KEY statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RestoreMasterKeyStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.RestoreMasterKeyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RestoreMasterKeyStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RestoreMasterKeyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RestoreMasterKeyStatement.EncryptionPassword">
      <summary>Gets or sets an additional encryption password.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RestoreMasterKeyStatement.IsForce">
      <summary>Gets or sets whether the FORCE flag is specified.</summary>
      <returns>Returns true if the FORCE flag was specified, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOption">
      <summary>Represents a single option in a RESTORE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind">
      <summary>Specifies the restore option kind.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.None">
      <summary>Kind is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.NoLog">
      <summary>Kind is NoLog</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.Checksum">
      <summary>Kind is Checksum</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.NoChecksum">
      <summary>Kind is NoChecksum</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.ContinueAfterError">
      <summary>Kind is ContinueAfterError</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.StopOnError">
      <summary>Kind is StopOnError</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.Unload">
      <summary>Kind is Unload</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.NoUnload">
      <summary>Kind is NoUnload</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.Rewind">
      <summary>Kind is Rewind</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.NoRewind">
      <summary>Kind is NoRewind</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.NoRecovery">
      <summary>Kind is NoRecovery</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.Recovery">
      <summary>Kind is Recovery</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.Replace">
      <summary>Kind is Replace</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.Restart">
      <summary>Kind is Restart</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.Verbose">
      <summary>Kind is Verbose</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.LoadHistory">
      <summary>Kind is LoadHistory</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.DboOnly">
      <summary>Kind is DboOnly</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.RestrictedUser">
      <summary>Kind is RestrictedUser</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.Partial">
      <summary>Kind is Partial</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.Snapshot">
      <summary>Kind is Snapshot</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.KeepReplication">
      <summary>Kind is KeepReplication</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.Online">
      <summary>Kind is Online</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.CommitDifferentialBase">
      <summary>Kind is CommitDifferentialBase</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.SnapshotImport">
      <summary>Kind is SnapshotImport</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.EnableBroker">
      <summary>Kind is EnableBroker</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.NewBroker">
      <summary>Kind is NewBroker</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.ErrorBrokerConversations">
      <summary>Kind is ErrorBrokerConversations</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.Stats">
      <summary>Kind is Stats</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.File">
      <summary>Kind is File</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.StopAt">
      <summary>Kind is StopAt</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.MediaName">
      <summary>Kind is MediaName</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.MediaPassword">
      <summary>Kind is MediaPassword</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.Password">
      <summary>Kind is Password</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.BlockSize">
      <summary>Kind is BlockSize</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.BufferCount">
      <summary>Kind is BufferCount</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.MaxTransferSize">
      <summary>Kind is MaxTransferSize</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.Standby">
      <summary>Kind is Standby</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.EnhancedIntegrity">
      <summary>Kind is EnhancedIntegrity</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind.SnapshotRestorePhase">
      <summary>Kind is SnapshotRestorePhase</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.RestoreServiceMasterKeyStatement">
      <summary>Represents a RESTORE SERVICE MASTER KEY statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RestoreServiceMasterKeyStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.RestoreServiceMasterKeyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RestoreServiceMasterKeyStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RestoreServiceMasterKeyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RestoreServiceMasterKeyStatement.IsForce">
      <summary>Gets or sets whether a FORCE flag is specified.</summary>
      <returns>Returns true if a FORCE flag was specified, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.RestoreStatement">
      <summary>Represents the RESTORE/LOAD statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RestoreStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.RestoreStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RestoreStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RestoreStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RestoreStatement.DatabaseName">
      <summary>Gets or sets the database to restore.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RestoreStatement.Devices">
      <summary>Gets a list of devices from which we should restore.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RestoreStatement.Files">
      <summary>Gets a list of files/filegroups/pages to restore.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RestoreStatement.Kind">
      <summary>Gets or sets the RESTORE statement kind.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.RestoreStatementKind" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RestoreStatement.Options">
      <summary>Gets a list of restore statement options.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.RestoreStatementKind">
      <summary>Specifies the RESTORE statement kind.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreStatementKind.None">
      <summary>Kind is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreStatementKind.Database">
      <summary>Kind is Database</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreStatementKind.TransactionLog">
      <summary>Kind is TransactionLog</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreStatementKind.FileListOnly">
      <summary>Kind is FileListOnly</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreStatementKind.VerifyOnly">
      <summary>Kind is VerifyOnly</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreStatementKind.LabelOnly">
      <summary>Kind is LabelOnly</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreStatementKind.RewindOnly">
      <summary>Kind is RewindOnly</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RestoreStatementKind.HeaderOnly">
      <summary>Kind is HeaderOnly</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.RetentionUnit">
      <summary>Specifies the retention unit.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RetentionUnit.Days">
      <summary>Unit is Days</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RetentionUnit.Hours">
      <summary>Unit is Hours</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RetentionUnit.Minutes">
      <summary>Unit is Minutes</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ReturnStatement">
      <summary>Represents the RETURN statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ReturnStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ReturnStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ReturnStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ReturnStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ReturnStatement.Expression">
      <summary>Gets or sets the optional return value.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.RevertStatement">
      <summary>Represents the REVERT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RevertStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.RevertStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RevertStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RevertStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RevertStatement.Cookie">
      <summary>Gets or sets an optional cookie expression.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.RevokeStatement">
      <summary>Represents the REVOKE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RevokeStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.RevokeStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RevokeStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RevokeStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RevokeStatement.CascadeOption">
      <summary>Gets or sets whether CASCADE is defined.</summary>
      <returns>Returns true if CASCADE is defined, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RevokeStatement.GrantOptionFor">
      <summary>Gets or sets whether GRANT OPTION FOR is defined.</summary>
      <returns>Returns true if GRANT OPTION FOR is defined, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.RevokeStatement80">
      <summary>Represents the REVOKE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RevokeStatement80.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.RevokeStatement80" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RevokeStatement80.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RevokeStatement80.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RevokeStatement80.AsClause">
      <summary>Gets or sets the AS clause.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RevokeStatement80.CascadeOption">
      <summary>Gets or sets whether CASCADE is defined.</summary>
      <returns>Returns true if CASCADE is defined, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RevokeStatement80.GrantOptionFor">
      <summary>Gets or sets whether GRANT OPTION FOR is defined.</summary>
      <returns>Returns true if GRANT OPTION FOR is defined, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.RightFunctionCall">
      <summary>Represents the RIGHT call.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RightFunctionCall.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.RightFunctionCall" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RightFunctionCall.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RightFunctionCall.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RightFunctionCall.Parameters">
      <summary>Gets a list of function parameters.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.RolePayloadOption">
      <summary>Represents the ROLE payload option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RolePayloadOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.RolePayloadOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RolePayloadOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RolePayloadOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RolePayloadOption.Role">
      <summary>Gets or sets the database mirroring role or roles that the endpoint supports.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DatabaseMirroringEndpointRole" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.RoleStatement">
      <summary>Represents the ROLE statement base.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RoleStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.RoleStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RoleStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RoleStatement.Name">
      <summary>Gets or sets the name of the role.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.RollbackTransactionStatement">
      <summary>Represents the ROLLBACK TRANSACTION statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RollbackTransactionStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.RollbackTransactionStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RollbackTransactionStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RollbackTransactionStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.RollupGroupingSpecification">
      <summary>Represents the ROLLUP grouping specification.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RollupGroupingSpecification.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.RollupGroupingSpecification" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RollupGroupingSpecification.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RollupGroupingSpecification.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RollupGroupingSpecification.Arguments">
      <summary>Gets a list of subspecifications.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.RouteOption">
      <summary>Represents the For Route option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RouteOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.RouteOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RouteOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RouteOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RouteOption.Literal">
      <summary>Gets or sets the option value.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RouteOption.RouteOptionType">
      <summary>Gets or sets the type of the option.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.RouteOptionType" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.RouteOptionType">
      <summary>Specifies the route option type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RouteOptionType.Address">
      <summary>Type is Address</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RouteOptionType.BrokerInstance">
      <summary>Type is BrokerInstance</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RouteOptionType.Lifetime">
      <summary>Type is Lifetime</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RouteOptionType.MirrorAddress">
      <summary>Type is MirrorAddress</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.RouteOptionType.ServiceName">
      <summary>Type is ServiceName</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.RouteStatement">
      <summary>Represents the base for a ROUTE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RouteStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.RouteStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RouteStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RouteStatement.Name">
      <summary>Gets or sets the name of the queue.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RouteStatement.RouteOptions">
      <summary>Gets a list of route options.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.RowValue">
      <summary>Represents the data for a single row.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RowValue.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.RowValue" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RowValue.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.RowValue.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.RowValue.ColumnValues">
      <summary>Gets a list of column values.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SaveTransactionStatement">
      <summary>Represents the SAVE TRANSACTION statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SaveTransactionStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SaveTransactionStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SaveTransactionStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SaveTransactionStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ScalarFunctionReturnType">
      <summary>Represents the data type of the return.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ScalarFunctionReturnType.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ScalarFunctionReturnType" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ScalarFunctionReturnType.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ScalarFunctionReturnType.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ScalarFunctionReturnType.DataType">
      <summary>Gets or sets the data type of the return.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DataType" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaDeclarationItem">
      <summary>Represents information about one column in a schema declaration.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SchemaDeclarationItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaDeclarationItem" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SchemaDeclarationItem.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SchemaDeclarationItem.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SchemaDeclarationItem.ColumnDefinition">
      <summary>Gets or sets the information about a column.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SchemaDeclarationItem.Mapping">
      <summary>Gets or sets optional mapping/metaproperty information.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectDataModificationTarget">
      <summary>Represents the schema object data modification target.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectDataModificationTarget.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectDataModificationTarget" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectDataModificationTarget.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectDataModificationTarget.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectDataModificationTarget.Parameters">
      <summary>Gets a list of parameters if the schema object is a user-defined function.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectDataModificationTarget.ParametersUsed">
      <summary>Gets or sets whether there are parentheses.</summary>
      <returns>Returns true if there were parentheses, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectDataModificationTarget.SchemaObject">
      <summary>Gets or sets the name of the schema object.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectDataModificationTarget.TableHints">
      <summary>Gets a list of table or view hints.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName">
      <summary>Represents a schema object name.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName.BaseIdentifier">
      <summary>Gets the table identifier.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName.ChooseIdentifier(System.Int32)">
      <summary>Returns which index is really meant for the given property defined by the modifier.</summary>
      <param name="modifier">Specifies the modifier that is used to figure out the identifier</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName.DatabaseIdentifier">
      <summary>Gets the database identifier.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName.Identifiers">
      <summary>Gets a list of parts of a schema object name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName.SchemaIdentifier">
      <summary>Gets the table schema identifier.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName.ServerIdentifier">
      <summary>Gets the server identifier.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectTableSource">
      <summary>Represents the table source that has a schema object.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectTableSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectTableSource" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectTableSource.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectTableSource.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectTableSource.Parameters">
      <summary>Gets a list of parameters if the schema object is a user-defined function.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectTableSource.ParametersUsed">
      <summary>Returns whether parentheses were used.</summary>
      <returns>Returns true if there were parentheses, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectTableSource.SchemaObject">
      <summary>Gets or sets the name of the schema object.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectTableSource.TableHints">
      <summary>Gets a list of table or view hints.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectTableSource.TableSampleClause">
      <summary>Gets or sets the TABLESAMPLE clause.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TableSampleClause" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaPayloadOption">
      <summary>Represents a SCHEMA payload option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SchemaPayloadOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaPayloadOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SchemaPayloadOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SchemaPayloadOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SchemaPayloadOption.IsStandard">
      <summary>Returns whether this is a STANDARD schema.</summary>
      <returns>Returns true in the case of a STANDARD schema, and false in the case of a NONE schema.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SecondaryXmlIndexType">
      <summary>Specifies a secondary XML index type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SecondaryXmlIndexType.NotSpecified">
      <summary>Type is NotSpecified</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SecondaryXmlIndexType.Path">
      <summary>Type is Path</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SecondaryXmlIndexType.Property">
      <summary>Type is Property</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SecondaryXmlIndexType.Value">
      <summary>Type is Value</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SecurityElement80">
      <summary>Represents the security statement body that is common for GRANT, DENY, and REVOKE statements.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SecurityElement80.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SecurityElement80" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SecurityElement80.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SecurityLoginOption">
      <summary>Represents a security option in a CREATE or ALTER LOGIN statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SecurityLoginOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SecurityLoginOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SecurityLoginOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SecurityLoginOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SecurityLoginOption.OptionState">
      <summary>Gets or sets the security login option state.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OptionState" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SecurityObjectKind">
      <summary>Specifies a kind of security object.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SecurityObjectKind.NotSpecified">
      <summary>Object is NotSpecified</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SecurityObjectKind.ApplicationRole">
      <summary>Object is ApplicationRole</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SecurityObjectKind.Assembly">
      <summary>Object is Assembly</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SecurityObjectKind.AsymmetricKey">
      <summary>Object is AsymmetricKey</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SecurityObjectKind.Certificate">
      <summary>Object is Certificate</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SecurityObjectKind.Contract">
      <summary>Object is Contract</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SecurityObjectKind.Database">
      <summary>Object is Database</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SecurityObjectKind.Endpoint">
      <summary>Object is Endpoint</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SecurityObjectKind.FullTextCatalog">
      <summary />
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SecurityObjectKind.Login">
      <summary>Object is Login</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SecurityObjectKind.MessageType">
      <summary>Object is MessageType</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SecurityObjectKind.Object">
      <summary>Object is Object</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SecurityObjectKind.RemoteServiceBinding">
      <summary>Object is RemoteServiceBinding</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SecurityObjectKind.Role">
      <summary>Object is Role</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SecurityObjectKind.Route">
      <summary>Object is Route</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SecurityObjectKind.Schema">
      <summary>Object is Schema</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SecurityObjectKind.Server">
      <summary>Object is Server</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SecurityObjectKind.Service">
      <summary>Object is Service</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SecurityObjectKind.SymmetricKey">
      <summary>Object is SymmetricKey</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SecurityObjectKind.Type">
      <summary>Object is Type</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SecurityObjectKind.User">
      <summary>Object is User</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SecurityObjectKind.XmlSchemaCollection">
      <summary>Object is XmlSchemaCollection</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SecurityObjectKind.FullTextStoplist">
      <summary />
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SecurityPrincipal">
      <summary>Represents the principal that can be used in a security statement body.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SecurityPrincipal.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SecurityPrincipal" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SecurityPrincipal.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SecurityPrincipal.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SecurityPrincipal.Identifier">
      <summary>Gets or sets the security principal identifier.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SecurityPrincipal.PrincipalType">
      <summary>Gets or sets the type of the principal.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.PrincipalType" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SecurityStatement">
      <summary>Represents the security statement body base class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SecurityStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SecurityStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SecurityStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SecurityStatement.AsClause">
      <summary>Gets or sets an AS clause.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SecurityStatement.Permissions">
      <summary>Gets a list of the permissions.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SecurityStatement.Principals">
      <summary>Gets a list of the security principals.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SecurityStatement.SecurityTargetObject">
      <summary>Gets or sets the security target object.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SecurityTargetObject" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SecurityStatementBody80">
      <summary>Represents the security statement body base class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SecurityStatementBody80.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SecurityStatementBody80" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SecurityStatementBody80.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SecurityStatementBody80.SecurityElement80">
      <summary>Gets or sets the security statement body.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SecurityElement80" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SecurityStatementBody80.SecurityUserClause80">
      <summary>Gets or sets the security statement body that is common for GRANT, DENY, and REVOKE statements.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SecurityUserClause80" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SecurityTargetObject">
      <summary>Represents a target object that can be used in a security statement body.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SecurityTargetObject.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SecurityTargetObject" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SecurityTargetObject.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SecurityTargetObject.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SecurityTargetObject.Columns">
      <summary>Gets a list of the columns.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SecurityTargetObject.ObjectKind">
      <summary>Gets or sets the object kind.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SecurityObjectKind" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SecurityTargetObject.ObjectName">
      <summary>Gets or sets the object name.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SecurityTargetObjectName" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SecurityTargetObjectName">
      <summary>Represents the security target object name.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SecurityTargetObjectName.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SecurityTargetObjectName" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SecurityTargetObjectName.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SecurityTargetObjectName.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SecurityTargetObjectName.Identifiers">
      <summary>Gets a list of identifiers.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SecurityUserClause80">
      <summary>Represents the security statement body that is common for GRANT, DENY, and REVOKE statements.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SecurityUserClause80.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SecurityUserClause80" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SecurityUserClause80.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SecurityUserClause80.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SecurityUserClause80.Users">
      <summary>Gets a list of users. This property will have zero elements if <see cref="P:Microsoft.Data.Schema.ScriptDom.Sql.SecurityUserClause80.UserType80" /> is Public or Null.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SecurityUserClause80.UserType80">
      <summary>Gets or sets the user type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.UserType80" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SelectColumn">
      <summary>Represents the column element that is used right after the select keyword.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SelectColumn.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SelectColumn" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SelectColumn.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SelectColumn.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SelectColumn.ColumnName">
      <summary>Gets or sets an identifier or a literal of type AsciiStringLiteral or UnicodeStringLiteral. Optional, may be null.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SelectColumn.Expression">
      <summary>A select expression can be any expression. If this is non-null, then this select expression is a regular expression.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SelectFunctionReturnType">
      <summary>Represents the select function return type.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SelectFunctionReturnType.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SelectFunctionReturnType" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SelectFunctionReturnType.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SelectFunctionReturnType.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SelectFunctionReturnType.SelectStatement">
      <summary>Gets or sets a single SELECT statement that defines return value, with only CTEs and XML namespaces possible.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SelectSetVariable">
      <summary>Represents setting a variable inside a SELECT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SelectSetVariable.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SelectSetVariable" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SelectSetVariable.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SelectSetVariable.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SelectSetVariable.AssignmentKind">
      <summary>Gets or sets the assignment operator used.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AssignmentKind" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SelectSetVariable.Expression">
      <summary>Gets or sets the expression used to set the variable.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SelectSetVariable.VariableName">
      <summary>Gets or sets the variable name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SelectStatement">
      <summary>Represents a SQL SELECT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SelectStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SelectStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SelectStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SelectStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SelectStatement.ComputeClauses">
      <summary>Gets a list of the COMPUTE BY clauses.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SelectStatement.ForClause">
      <summary>Gets or sets the FOR clause.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SelectStatement.OptimizerHints">
      <summary>Gets a list of optional optimizer hints.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SelectStatement.OrderByClause">
      <summary>Gets or sets the optional ORDER BY clause.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SelectStatement.QueryExpression">
      <summary>Gets or sets the main body of the SELECT statement.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.QueryExpression" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SendStatement">
      <summary>Represents the SEND statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SendStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SendStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SendStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SendStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SendStatement.ConversationHandle">
      <summary>Gets or sets the conversation handle.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SendStatement.MessageBody">
      <summary>Gets or sets the optional expression representing the message body.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SendStatement.MessageTypeName">
      <summary>Gets or sets the optional message type of the sent message.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SeparatorType">
      <summary>Specifies the separator type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SeparatorType.NotSpecified">
      <summary>Type is NotSpecified</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SeparatorType.Dot">
      <summary>Type is Dot</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SeparatorType.DoubleColon">
      <summary>Type is DoubleColon</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ServerAuditStatement">
      <summary>Common base for CREATE and ALTER SERVER audit statements.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ServerAuditStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ServerAuditStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ServerAuditStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ServerAuditStatement.AuditName">
      <summary>Gets or sets the audit name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ServerAuditStatement.AuditTarget">
      <summary>Gets or sets the audit target.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AuditTarget" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ServerAuditStatement.Options">
      <summary>Gets a list of audit options.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ServiceBrokerOption">
      <summary>Specifies service broker options.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ServiceBrokerOption.None">
      <summary>Option is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ServiceBrokerOption.EnableBroker">
      <summary>Option is EnableBroker</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ServiceBrokerOption.NewBroker">
      <summary>Option is NewBroker</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ServiceBrokerOption.ErrorBrokerConversations">
      <summary>Option is ErrorBrokerConversations</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ServiceContract">
      <summary>Represents a service contract reference (with optional action).</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ServiceContract.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ServiceContract" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ServiceContract.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ServiceContract.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ServiceContract.Action">
      <summary>Gets or sets action to take on a contract.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterAction" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ServiceContract.Name">
      <summary>Gets or sets the contract name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SessionOption">
      <summary>Represents the event session option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SessionOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SessionOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SessionOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SessionTimeoutPayloadOption">
      <summary>Represents the SESSION_TIMEOUT payload option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SessionTimeoutPayloadOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SessionTimeoutPayloadOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SessionTimeoutPayloadOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SessionTimeoutPayloadOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SessionTimeoutPayloadOption.IsNever">
      <summary>Returns whether the session never times out.</summary>
      <returns>Returns true if the session never times out, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SessionTimeoutPayloadOption.Timeout">
      <summary>Gets or sets the session timeout.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SetClause">
      <summary>Represents the SET clause.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetClause.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SetClause" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetClause.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SetClause.Column">
      <summary>Gets or sets the column to be SET.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Column" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SetCommand">
      <summary>Represents a single command in a SET statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetCommand.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SetCommand" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetCommand.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SetCommandStatement">
      <summary>Represents a SET command statement (for example, SET LANGUAGE us_english).</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetCommandStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SetCommandStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetCommandStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetCommandStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SetCommandStatement.Commands">
      <summary>Gets a list of individual commands.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SetErrorLevelStatement">
      <summary>Represents the SET ERRLVL statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetErrorLevelStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SetErrorLevelStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetErrorLevelStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetErrorLevelStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SetErrorLevelStatement.Level">
      <summary>Gets or sets the error level.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SetFipsFlaggerCommand">
      <summary>Represents the SET FIPS_FLAGGER command.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetFipsFlaggerCommand.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SetFipsFlaggerCommand" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetFipsFlaggerCommand.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetFipsFlaggerCommand.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SetFipsFlaggerCommand.ComplianceLevel">
      <summary>Gets or sets the compliance level.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.FipsComplianceLevel" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SetIdentityInsertStatement">
      <summary>Represents the SET IDENTITY_INSERT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetIdentityInsertStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SetIdentityInsertStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetIdentityInsertStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetIdentityInsertStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SetIdentityInsertStatement.Table">
      <summary>Gets or sets the name of a table with an identity column.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SetOffsets">
      <summary>Specifies the set offsets.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOffsets.None">
      <summary>Offset is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOffsets.Select">
      <summary>Offset is Select</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOffsets.From">
      <summary>Offset is From</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOffsets.Order">
      <summary>Offset is Order</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOffsets.Compute">
      <summary>Offset is Compute</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOffsets.Table">
      <summary>Offset is Table</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOffsets.Procedure">
      <summary>Offset is Procedure</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOffsets.Execute">
      <summary>Offset is Execute</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOffsets.Statement">
      <summary>Offset is Statement</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOffsets.Param">
      <summary>Offset is Param</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SetOffsetsStatement">
      <summary>Represents the SET OFFSETS statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetOffsetsStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SetOffsetsStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetOffsetsStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetOffsetsStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SetOffsetsStatement.Options">
      <summary>Gets or sets the options.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SetOffsets" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SetOnOffStatement">
      <summary>Represents a SET statement with an { ON | OFF } ending.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetOnOffStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SetOnOffStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetOnOffStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SetOnOffStatement.IsOn">
      <summary>Gets or sets whether this particular SET statement is in an ON state.</summary>
      <returns>Returns true if this particular SET statement is set to an ON state, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SetOptions">
      <summary>Specifies the SET option.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOptions.None">
      <summary>Option is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOptions.QuotedIdentifier">
      <summary>Option is QuotedIdentifier</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOptions.ConcatNullYieldsNull">
      <summary>Option is ConcatNullYieldsNull</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOptions.CursorCloseOnCommit">
      <summary>Option is CursorCloseOnCommit</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOptions.ArithAbort">
      <summary>Option is ArithAbort</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOptions.ArithIgnore">
      <summary>Option is ArithIgnore</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOptions.FmtOnly">
      <summary>Option is FmtOnly</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOptions.NoCount">
      <summary>Option is NoCount</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOptions.NoExec">
      <summary>Option is NoExec</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOptions.NumericRoundAbort">
      <summary>Option is NumericRoundAbort</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOptions.ParseOnly">
      <summary>Option is ParseOnly</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOptions.AnsiDefaults">
      <summary>Option is AnsiDefaults</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOptions.AnsiNullDfltOff">
      <summary>Option is AnsiNullDfltOff</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOptions.AnsiNullDfltOn">
      <summary>Option is AnsiNullDfltOn</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOptions.AnsiNulls">
      <summary>Option is AnsiNulls</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOptions.AnsiPadding">
      <summary>Option is AnsiPadding</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOptions.AnsiWarnings">
      <summary>Option is AnsiWarnings</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOptions.ForcePlan">
      <summary>Option is ForcePlan</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOptions.ShowPlanAll">
      <summary>Option is ShowPlanAll</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOptions.ShowPlanText">
      <summary>Option is ShowPlanText</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOptions.ImplicitTransactions">
      <summary>Option is ImplicitTransactions</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOptions.RemoteProcTransactions">
      <summary>Option is RemoteProcTransactions</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetOptions.XactAbort">
      <summary>Option is XactAbort</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SetRowCountStatement">
      <summary>Represents the SET ROWCOUNT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetRowCountStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SetRowCountStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetRowCountStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetRowCountStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SetRowCountStatement.NumberRows">
      <summary>Gets or sets the number of rows to process before stopping the query.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SetStatisticsOptions">
      <summary>Specifies the SET STATISTICS option.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetStatisticsOptions.None">
      <summary>Option is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetStatisticsOptions.IO">
      <summary>Option is IO</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetStatisticsOptions.Profile">
      <summary>Option is Profile</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetStatisticsOptions.Time">
      <summary>Option is Time</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SetStatisticsOptions.Xml">
      <summary>Option is Xml</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SetStatisticsStatement">
      <summary>Represents the SET STATISTICS {...} statements { ON | OFF } options in the Transact-SQL grammar.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetStatisticsStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SetStatisticsStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetStatisticsStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetStatisticsStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SetStatisticsStatement.Options">
      <summary>Gets or sets the specific set option(s) that this statement represents.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SetStatisticsOptions" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SetStopListAlterFullTextIndexAction">
      <summary>Represents a STOPLIST action for an ALTER FULLTEXT INDEX statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetStopListAlterFullTextIndexAction.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SetStopListAlterFullTextIndexAction" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetStopListAlterFullTextIndexAction.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetStopListAlterFullTextIndexAction.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SetStopListAlterFullTextIndexAction.StopListOption">
      <summary>Gets or sets the STOPLIST option.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SetStopListAlterFullTextIndexAction.WithNoPopulation">
      <summary>Gets or sets whether WITH NO POPULATION is specified.</summary>
      <returns>Returns true if WITH NO POPULATION was specified, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SetTextSizeStatement">
      <summary>Represents the SET TEXTSIZE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetTextSizeStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SetTextSizeStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetTextSizeStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetTextSizeStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SetTextSizeStatement.TextSize">
      <summary>Gets or sets the text size.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SetTransactionIsolationLevelStatement">
      <summary>Represents the SET TRANSACTION ISOLATION LEVEL statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetTransactionIsolationLevelStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SetTransactionIsolationLevelStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetTransactionIsolationLevelStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetTransactionIsolationLevelStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SetTransactionIsolationLevelStatement.Level">
      <summary>Gets or sets the isolation level.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.IsolationLevel" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SetUserStatement">
      <summary>Represents the SETUSER statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetUserStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SetUserStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetUserStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetUserStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SetUserStatement.UserName">
      <summary>Gets or sets the user name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SetUserStatement.WithNoReset">
      <summary>Gets or sets whether WITH NORESET is used.</summary>
      <returns>Returns true if WITH NORESET is used, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SetVariableStatement">
      <summary>Represents the SET @local_variable statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetVariableStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SetVariableStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetVariableStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SetVariableStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SetVariableStatement.AssignmentKind">
      <summary>Gets or sets the assignment kind.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AssignmentKind" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SetVariableStatement.CursorDefinition">
      <summary>Gets or sets a cursor definition.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CursorDefinition" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SetVariableStatement.Expression">
      <summary>Gets or sets the expression that the variable is going to be set to.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SetVariableStatement.FunctionCallExists">
      <summary>Gets or sets whether the column identifiers end with a function call.</summary>
      <returns>Returns true if the column identifiers end with a function call, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SetVariableStatement.Identifier">
      <summary>Gets or sets the identifier that can represent the property, field, or method.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SetVariableStatement.Parameters">
      <summary>Gets a list of parameters to the function.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SetVariableStatement.SeparatorType">
      <summary>Gets or sets the separator type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SeparatorType" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SetVariableStatement.VariableName">
      <summary>Gets or sets the name of the variable that is going to be set.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ShutdownStatement">
      <summary>Represents the SHUTDOWN statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ShutdownStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ShutdownStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ShutdownStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ShutdownStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ShutdownStatement.WithNoWait">
      <summary>Gets or sets whether WITH NOWAIT is used.</summary>
      <returns>Returns true if WITH NOWAIT is used, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SidCreateLoginOption">
      <summary>Represents the SID option in a CREATE LOGIN statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SidCreateLoginOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SidCreateLoginOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SidCreateLoginOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SidCreateLoginOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SidCreateLoginOption.Sid">
      <summary>Gets or sets the SID (binary literal).</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SignableElementKind">
      <summary>Specifies the signable element kind.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SignableElementKind.NotSpecified">
      <summary>Kind is NotSpecified</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SignableElementKind.Object">
      <summary>Kind is Object</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SignableElementKind.Assembly">
      <summary>Kind is Assembly</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SignableElementKind.Database">
      <summary>Kind is Database</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SignatureStatementBase">
      <summary>Represents a common base for ADD and DROP SIGNATURE statements.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SignatureStatementBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SignatureStatementBase" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SignatureStatementBase.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SignatureStatementBase.Cryptos">
      <summary>Gets a list of encryption mechanisms.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SignatureStatementBase.Element">
      <summary>Gets or sets a signable element reference.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SignatureStatementBase.ElementKind">
      <summary>Gets or sets the element kind.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SignableElementKind" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SignatureStatementBase.IsCounter">
      <summary>Gets or sets whether adding/dropping counter signature.</summary>
      <returns>Returns true if adding/dropping counter signature, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterDatabaseOption">
      <summary>Represents a simple option (for example, a single keyword) in an ALTER DATABASE statement, SET case.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterDatabaseOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterDatabaseOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterDatabaseOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterDatabaseOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterDatabaseOption.Option">
      <summary>Gets or sets the option kind.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOptionKind" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterFullTextIndexAction">
      <summary>Represents a flag action for an ALTER FULLTEXT INDEX statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterFullTextIndexAction.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterFullTextIndexAction" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterFullTextIndexAction.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterFullTextIndexAction.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterFullTextIndexAction.ActionKind">
      <summary>Gets or sets the kind of action.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterFullTextIndexActionKind" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterFullTextIndexActionKind">
      <summary>Specifies the index action kind.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterFullTextIndexActionKind.None">
      <summary>Kind is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterFullTextIndexActionKind.Enable">
      <summary>Kind is Enable</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterFullTextIndexActionKind.Disable">
      <summary>Kind is Disable</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterFullTextIndexActionKind.SetChangeTrackingManual">
      <summary>Kind is SetChangeTrackingManual</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterFullTextIndexActionKind.SetChangeTrackingAuto">
      <summary>Kind is SetChangeTrackingAuto</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterFullTextIndexActionKind.SetChangeTrackingOff">
      <summary>Kind is SetChangeTrackingOff</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterFullTextIndexActionKind.StartFullPopulation">
      <summary>Kind is StartFullPopulation</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterFullTextIndexActionKind.StartIncrementalPopulation">
      <summary>Kind is StartIncrementalPopulation</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterFullTextIndexActionKind.StartUpdatePopulation">
      <summary>Kind is StartUpdatePopulation</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterFullTextIndexActionKind.StopPopulation">
      <summary>Kind is StopPopulation</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterFullTextIndexActionKind.PausePopulation">
      <summary>Kind is PausePopulation</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterFullTextIndexActionKind.ResumePopulation">
      <summary>Kind is ResumePopulation</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOption">
      <summary>Represents a simple single option in a BULK INSERT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOption.Kind">
      <summary>Gets or sets the option kind.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOptionKind" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOption.Value">
      <summary>Gets or sets the optional option value.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOptionKind">
      <summary>Specifies a simple bulk insert option kind.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOptionKind.None">
      <summary>Kind is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOptionKind.BatchSize">
      <summary>Kind is BatchSize</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOptionKind.CheckConstraints">
      <summary>Kind is CheckConstraints</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOptionKind.CodePage">
      <summary>Kind is CodePage</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOptionKind.DataFileType">
      <summary>Kind is DataFileType</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOptionKind.FieldTerminator">
      <summary>Kind is FieldTerminator</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOptionKind.FirstRow">
      <summary>Kind is FirstRow</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOptionKind.FireTriggers">
      <summary>Kind is FireTriggers</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOptionKind.FormatFile">
      <summary>Kind is FormatFile</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOptionKind.KeepIdentity">
      <summary>Kind is KeepIdentity</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOptionKind.KeepNulls">
      <summary>Kind is KeepNulls</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOptionKind.KilobytesPerBatch">
      <summary>Kind is KilobytesPerBatch</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOptionKind.LastRow">
      <summary>Kind is LastRow</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOptionKind.MaxErrors">
      <summary>Kind is MaxErrors</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOptionKind.RowsPerBatch">
      <summary>Kind is RowsPerBatch</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOptionKind.RowTerminator">
      <summary>Kind is RowTerminator</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOptionKind.TabLock">
      <summary>Kind is TabLock</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOptionKind.ErrorFile">
      <summary>Kind is ErrorFile</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOptionKind.NoTriggers">
      <summary>Kind is NoTriggers</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOptionKind.SingleBlob">
      <summary>Kind is SingleBlob</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOptionKind.SingleClob">
      <summary>Kind is SingleClob</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOptionKind.SingleNClob">
      <summary>Kind is SingleNClob</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHint">
      <summary>Represents an optimizer hint, which can be represented as a flag with an optional literal value.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHint.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHint" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHint.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHint.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHint.HintKind">
      <summary>Gets or sets a simple optimizer hint kind value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHint.Value">
      <summary>Gets or sets the hint value.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind">
      <summary>Specifies the simple optimizer hint kind.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind.Unspecified">
      <summary>Kind is Unspecified</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind.HashGroup">
      <summary>Kind is HashGroup</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind.OrderGroup">
      <summary>Kind is OrderGroup</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind.MergeJoin">
      <summary>Kind is MergeJoin</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind.HashJoin">
      <summary>Kind is HashJoin</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind.LoopJoin">
      <summary>Kind is LoopJoin</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind.ConcatUnion">
      <summary>Kind is ConcatUnion</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind.HashUnion">
      <summary>Kind is HashUnion</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind.MergeUnion">
      <summary>Kind is MergeUnion</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind.KeepUnion">
      <summary>Kind is KeepUnion</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind.ForceOrder">
      <summary>Kind is ForceOrder</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind.RobustPlan">
      <summary>Kind is RobustPlan</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind.KeepPlan">
      <summary>Kind is KeepPlan</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind.KeepFixedPlan">
      <summary>Kind is KeepFixedPlan</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind.ExpandViews">
      <summary>Kind is ExpandViews</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind.AlterColumnPlan">
      <summary>Kind is AlterColumnPlan</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind.ShrinkDBPlan">
      <summary>Kind is ShrinkDBPlan</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind.BypassOptimizerQueue">
      <summary>Kind is BypassOptimizerQueue</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind.UsePlan">
      <summary>Kind is UsePlan</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind.ParameterizationSimple">
      <summary>Kind is ParameterizationSimple</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind.ParameterizationForced">
      <summary>Kind is ParameterizationForced</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind.OptimizeCorrelatedUnionAll">
      <summary>Kind is OptimizeCorrelatedUnionAll</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind.Recompile">
      <summary>Kind is Recompile</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind.Fast">
      <summary>Kind is Fast</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind.CheckConstraintsPlan">
      <summary>Kind is CheckConstraintsPlan</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind.MaxRecursion">
      <summary>Kind is MaxRecursion</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind.MaxDop">
      <summary>Kind is MaxDop</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind.QueryTraceOn">
      <summary>Kind is QueryTraceOn</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHintKind.CardinalityTunerLimit">
      <summary>Kind is CardinalityTunerLimit</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SimpleRestoreOption">
      <summary>Represents a single restore option with an optional value.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SimpleRestoreOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SimpleRestoreOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SimpleRestoreOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SimpleRestoreOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SimpleRestoreOption.Option">
      <summary>Gets or sets a restore option kind.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.RestoreOptionKind" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SimpleRestoreOption.Value">
      <summary>Gets or sets the restore option value.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHint">
      <summary>Represents a simple table hint.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHint.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHint" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHint.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHint.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHint.HintKind">
      <summary>Gets or sets the hint kind.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHintKind" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHintKind">
      <summary>Specifies the simple table hint kind.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHintKind.None">
      <summary>Kind is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHintKind.FastFirstRow">
      <summary>Kind is FastFirstRow</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHintKind.HoldLock">
      <summary>Kind is HoldLock</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHintKind.NoLock">
      <summary>Kind is NoLock</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHintKind.PagLock">
      <summary>Kind is PagLock</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHintKind.ReadCommitted">
      <summary>Kind is ReadCommitted</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHintKind.ReadPast">
      <summary>Kind is ReadPast</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHintKind.ReadUncommitted">
      <summary>Kind is ReadUncommitted</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHintKind.RepeatableRead">
      <summary>Kind is RepeatableRead</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHintKind.Rowlock">
      <summary />
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHintKind.Serializable">
      <summary>Kind is Serializable</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHintKind.TabLock">
      <summary>Kind is TabLock</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHintKind.TabLockX">
      <summary>Kind is TabLockX</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHintKind.UpdLock">
      <summary>Kind is UpdLock</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHintKind.XLock">
      <summary>Kind is XLock</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHintKind.NoExpand">
      <summary>Kind is NoExpand</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHintKind.NoWait">
      <summary>Kind is NoWait</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHintKind.ReadCommittedLock">
      <summary>Kind is ReadCommittedLock</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHintKind.KeepIdentity">
      <summary>Kind is KeepIdentity</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHintKind.KeepDefaults">
      <summary>Kind is KeepDefaults</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHintKind.IgnoreConstraints">
      <summary>Kind is IgnoreConstraints</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHintKind.IgnoreTriggers">
      <summary>Kind is IgnoreTriggers</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHintKind.ForceSeek">
      <summary>Kind is ForceSeek</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SizeFileDeclarationOption">
      <summary>Represents a size file declaration option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SizeFileDeclarationOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SizeFileDeclarationOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SizeFileDeclarationOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SizeFileDeclarationOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SizeFileDeclarationOption.Size">
      <summary>Gets or sets the size value.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SizeFileDeclarationOption.Units">
      <summary>Gets or sets the memory unit value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.MemoryUnit" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SoapMethod">
      <summary>Represents a SOAP method in the payload part of a CREATE ENDPOINT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SoapMethod.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SoapMethod" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SoapMethod.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SoapMethod.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SoapMethod.Action">
      <summary>Gets or sets the SOAP method action value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SoapMethodAction" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SoapMethod.Alias">
      <summary>Gets or sets a method alias.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SoapMethod.Format">
      <summary>Gets or sets the SOAP method format value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SoapMethodFormat" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SoapMethod.Name">
      <summary>Gets or sets the name of a stored procedure or user-defined function that corresponds to the SOAP method.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SoapMethod.Namespace">
      <summary>Gets or sets an optional method namespace.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SoapMethod.Schema">
      <summary>Gets or sets the SOAP method schema value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SoapMethodSchemas" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SoapMethodAction">
      <summary>Specifies a SOAP method action.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SoapMethodAction.None">
      <summary>Action is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SoapMethodAction.Add">
      <summary>Action is Add</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SoapMethodAction.Alter">
      <summary>Action is Alter</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SoapMethodAction.Drop">
      <summary>Action is Drop</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SoapMethodFormat">
      <summary>Specifies the SOAP method format.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SoapMethodFormat.NotSpecified">
      <summary>Format is NotSpecified</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SoapMethodFormat.AllResults">
      <summary>Format is AllResults</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SoapMethodFormat.RowsetsOnly">
      <summary>Format is RowsetsOnly</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SoapMethodFormat.None">
      <summary>Format is None</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SoapMethodSchemas">
      <summary>Specifies the SOAP method schema.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SoapMethodSchemas.NotSpecified">
      <summary>Schema is NotSpecified</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SoapMethodSchemas.None">
      <summary>Schema is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SoapMethodSchemas.Standard">
      <summary>Schema is Standard</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SoapMethodSchemas.Default">
      <summary>Schema is Default</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SortOrder">
      <summary>Specifies the sort order.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SortOrder.NotSpecified">
      <summary>Order is NotSpecified</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SortOrder.Ascending">
      <summary>Order is Ascending</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SortOrder.Descending">
      <summary>Order is Descending</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SourceDeclaration">
      <summary>Represents the event source declaration name.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SourceDeclaration.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SourceDeclaration" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SourceDeclaration.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SourceDeclaration.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SourceDeclaration.Value">
      <summary>Gets or sets the event session object name.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionObjectName" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SparseColumnOption">
      <summary>Specifies sparse column options.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SparseColumnOption.None">
      <summary>Option is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SparseColumnOption.Sparse">
      <summary>Option is Sparse</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SparseColumnOption.ColumnSetForAllSparseColumns">
      <summary>Option is ColumnSetForAllSparseColumns</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SpatialIndexingSchemeType">
      <summary>Specifies a spatial indexing scheme.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SpatialIndexingSchemeType.None">
      <summary>Scheme is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SpatialIndexingSchemeType.GeometryGrid">
      <summary>Scheme is GeometryGrid</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SpatialIndexingSchemeType.GeographyGrid">
      <summary>Scheme is GeographyGrid</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SpatialIndexOption">
      <summary>Represents the spatial index option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SpatialIndexOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SpatialIndexOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SpatialIndexOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SpatialIndexRegularOption">
      <summary>Represents the spatial index regular options.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SpatialIndexRegularOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SpatialIndexRegularOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SpatialIndexRegularOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SpatialIndexRegularOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SpatialIndexRegularOption.Option">
      <summary>Gets or sets the index option.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.IndexOption" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.Sql100ScriptGenerator">
      <summary>Represents the Sql100 script generator.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Sql100ScriptGenerator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Sql100ScriptGenerator" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Sql100ScriptGenerator.#ctor(Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions)"></member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.Sql80ScriptGenerator">
      <summary>Represents the Sql80 script generator.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Sql80ScriptGenerator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Sql80ScriptGenerator" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Sql80ScriptGenerator.#ctor(Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions)"></member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.Sql90ScriptGenerator">
      <summary>Represents the Sql90 script generator.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Sql90ScriptGenerator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Sql90ScriptGenerator" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Sql90ScriptGenerator.#ctor(Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions)"></member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SqlCommandIdentifier">
      <summary>Represents the SqlCommandIdentifier.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SqlCommandIdentifier.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SqlCommandIdentifier" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SqlCommandIdentifier.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SqlCommandIdentifier.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataType">
      <summary>Represents the Sql data type.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataType.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataType" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataType.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataType.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataType.SqlDataTypeOption">
      <summary>Gets or sets a Sql data type option value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption">
      <summary>Specifies the Sql data type option.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.None">
      <summary>Type is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.BigInt">
      <summary>Type is BigInt</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.Int">
      <summary>Type is Int</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.SmallInt">
      <summary>Type is SmallInt</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.TinyInt">
      <summary>Type is TinyInt</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.Bit">
      <summary>Type is Bit</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.Decimal">
      <summary>Type is Decimal</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.Numeric">
      <summary>Type is Numeric</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.Money">
      <summary>Type is Money</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.SmallMoney">
      <summary>Type is SmallMoney</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.Float">
      <summary>Type is Float</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.Real">
      <summary>Type is Real</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.DateTime">
      <summary>Type is DateTime</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.SmallDateTime">
      <summary>Type is SmallDateTime</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.Char">
      <summary>Type is Char</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.VarChar">
      <summary>Type is VarChar</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.Text">
      <summary>Type is Text</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.NChar">
      <summary>Type is NChar</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.NVarChar">
      <summary>Type is NVarChar</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.NText">
      <summary>Type is NText</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.Binary">
      <summary>Type is Binary</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.VarBinary">
      <summary>Type is VarBinary</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.Image">
      <summary>Type is Image</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.Cursor">
      <summary>Type is Cursor</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.Sql_Variant">
      <summary>Type is Sql_Variant</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.Table">
      <summary>Type is Table</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.Timestamp">
      <summary>Type is Timestamp</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.UniqueIdentifier">
      <summary>Type is UniqueIdentifier</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.Date">
      <summary>Type is Date</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.Time">
      <summary>Type is Time</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.DateTime2">
      <summary>Type is DateTime2</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlDataTypeOption.DateTimeOffset">
      <summary>Type is DateTimeOffset</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGenerator">
      <summary>Represents a Sql-specific script generator.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGenerator.#ctor(Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGenerator.GenerateScript(Microsoft.Data.Schema.ScriptDom.IScriptFragment,System.IO.TextWriter)">
      <summary>Generates text representing the specified script fragment.</summary>
      <param name="scriptFragment">The fragment of script to generate tokens for</param>
      <param name="writer">A text writer to write the text to</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGenerator.GenerateScript(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment,System.IO.TextWriter)">
      <summary>Generates text representing the specified script fragment.</summary>
      <param name="scriptFragment">The fragment of script to generate tokens for</param>
      <param name="writer">A text writer to write the text to</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGenerator.GenerateTokens(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment)">
      <summary>Generates a list of tokens representing the script generated by the specified script fragment.</summary>
      <param name="scriptFragment">The fragment of script to generate tokens for</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGenerator.Options"></member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions">
      <summary>Represents Transact-SQL script generator options.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions" /> class.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions.AlignClauseBodies">
      <summary>Gets or sets a Boolean indicating whether the bodies of clauses such as FROM, WHERE, and GROUP BY should be aligned.</summary>
      <returns>Returns true if clause bodies should be aligned, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions.AlignColumnDefinitionFields">
      <summary>Gets or sets a Boolean indicating whether column definition fields (column name, data type, constraints) should be aligned into alignment columns.</summary>
      <returns>Returns true if column definition fields should be aligned, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions.AlignSetClauseItem">
      <summary>Gets or sets a Boolean indicating whether SET clause items in an UPDATE statement should be aligned.</summary>
      <returns>Returns true if SET clause items in an UPDATE statement should be aligned, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions.AsKeywordOnOwnLine">
      <summary>Gets or sets a Boolean indicating whether the AS keyword should be written on its own line.</summary>
      <returns>Returns true if the AS keyword should be written on its own line, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions.IncludeSemicolons">
      <summary>Gets or sets a Boolean indicating whether a semicolon should be included after each statement.</summary>
      <returns>Returns true if a semicolon should be included after each statement, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions.IndentationSize">
      <summary>Gets or sets the number of spaces to use when indenting text.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions.IndentSetClause">
      <summary>Gets or sets a Boolean indicating whether the SET clause for an UPDATE statement should be indented.</summary>
      <returns>Returns true if the SET clause for an UPDATE statement should be indented, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions.IndentViewBody">
      <summary>Gets or sets a Boolean indicating whether the view statement body should be indented.</summary>
      <returns>Returns true if the view statement body should be indented, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions.KeywordCasing">
      <summary>Gets or sets the keyword casing option to use during script generation.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.KeywordCasing" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions.MultilineInsertSourcesList">
      <summary>Gets or sets a Boolean indicating whether the INSERT column sources list should be spread across multiple lines.</summary>
      <returns>Returns true if the INSERT column sources list should be spread across multiple lines, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions.MultilineInsertTargetsList">
      <summary>Gets or sets a Boolean indicating whether the INSERT column targets list should be spread across multiple lines.</summary>
      <returns>Returns true if the INSERT column targets list should be spread across multiple lines, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions.MultilineSelectElementsList">
      <summary>Gets or sets a Boolean indicating whether select elements should be listed as a multiline list.</summary>
      <returns>Returns true if select elements should be listed as a multiline list, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions.MultilineSetClauseItems">
      <summary>Gets or sets a Boolean indicating whether SET clause items should be listed on multiple lines.</summary>
      <returns>Returns true if SET clause items should be listed on multiple lines, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions.MultilineViewColumnsList">
      <summary>Gets or sets a Boolean indicating whether view statement columns should be listed as a multiline list.</summary>
      <returns>Returns true if view statement columns should be listed as a multiline list, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions.MultilineWherePredicatesList">
      <summary>Gets or sets a Boolean indicating whether WHERE predicates (expressions separated by AND and OR) should be written on multiple lines.</summary>
      <returns>Returns true if WHERE predicates should be written on multiple lines, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions.NewLineBeforeCloseParenthesisInMultilineList">
      <summary>Gets or sets a Boolean indicating whether a new line should be placed before a close parenthesis when writing a multiline list in parentheses.</summary>
      <returns>Returns true if a new line should be placed before a close parenthesis when writing a multiline list in parentheses, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions.NewLineBeforeFromClause">
      <summary>Gets or sets a Boolean indicating whether there should be a new line before the FROM clause in a SELECT statement.</summary>
      <returns>Returns true if there should be a new line before the FROM clause in a SELECT statement, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions.NewLineBeforeGroupByClause">
      <summary>Gets or sets a Boolean indicating whether there should be a new line before the GROUP BY clause in a SELECT statement.</summary>
      <returns>Returns true if there should be a new line before the GROUP BY clause in a SELECT statement, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions.NewLineBeforeHavingClause">
      <summary>Gets or sets a Boolean indicating whether there should be a new line before the HAVING clause in a SELECT statement.</summary>
      <returns>Returns true if there should be a new line before the HAVING clause in a SELECT statement, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions.NewLineBeforeJoinClause">
      <summary>Gets or sets a Boolean indicating whether there should be a new line before the JOIN clause in a SELECT statement.</summary>
      <returns>Returns true if there should be a new line before the JOIN clause in a SELECT statement, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions.NewLineBeforeOpenParenthesisInMultilineList">
      <summary>Gets or sets a Boolean indicating whether a new line should be placed before an open parenthesis when writing a multiline list in parentheses.</summary>
      <returns>Returns true if a new line should be placed before an open parenthesis, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions.NewLineBeforeOrderByClause">
      <summary>Gets or sets a Boolean indicating whether there should be a new line before the ORDER BY clause in a SELECT statement.</summary>
      <returns>Returns true if there should be a new line before the ORDER BY clause in a SELECT statement, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions.NewLineBeforeOutputClause">
      <summary>Gets or sets a Boolean indicating whether there should be a new line before the OUTPUT clause.</summary>
      <returns>Returns true if there should be a new line before the OUTPUT clause, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions.NewLineBeforeWhereClause">
      <summary>Gets or sets a Boolean indicating whether there should be a new line before the WHERE clause in a SELECT statement.</summary>
      <returns>Returns true if there should be a new line before the WHERE clause in a SELECT statement, false otherwise.</returns>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions.Reset">
      <summary>Resets options.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SqlScriptGeneratorOptions.SqlVersion">
      <summary>Gets or sets the SQL version to generate a script for.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SqlVersion" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SqlVersion">
      <summary>Specifies the SQL version.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlVersion.Sql90">
      <summary>Version is Sql90</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlVersion.Sql80">
      <summary>Version is Sql80</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SqlVersion.Sql100">
      <summary>Version is Sql100</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.StartupStateSessionOption">
      <summary>Represents the STARTUP_STATE event session option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.StartupStateSessionOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.StartupStateSessionOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.StartupStateSessionOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.StartupStateSessionOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.StateAuditOption">
      <summary>Represents the STATE option in the ALTER SERVER AUDIT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.StateAuditOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.StateAuditOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.StateAuditOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.StateAuditOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.StateAuditOption.Value">
      <summary>Gets or sets the option value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OptionState" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.StatementList">
      <summary>This class is used to get a list of statements.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.StatementList.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.StatementList" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.StatementList.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.StatementList.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.StatementList.Statements">
      <summary>Gets a list of statements, possibly empty.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.StatementWithCommonTableExpressionsAndXmlNamespaces">
      <summary>Represents a statement that can begin with a common table expression or XML namespaces.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.StatementWithCommonTableExpressionsAndXmlNamespaces.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.StatementWithCommonTableExpressionsAndXmlNamespaces" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.StatementWithCommonTableExpressionsAndXmlNamespaces.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.StatementWithCommonTableExpressionsAndXmlNamespaces.WithCommonTableExpressionsAndXmlNamespaces">
      <summary>Gets or sets the WITH common_table_expression and the XMLNAMESPACES clause.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.WithCommonTableExpressionsAndXmlNamespaces" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.StatisticsOption">
      <summary>Represents the statistics option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.StatisticsOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.StatisticsOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.StatisticsOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.StatisticsOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.StatisticsOption.Literal">
      <summary>Gets or sets the option value.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.StatisticsOption.StatisticsOptionType">
      <summary>Gets or sets the statistics option type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.StatisticsOptionType" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.StatisticsOptionType">
      <summary>Specifies the statistics option type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.StatisticsOptionType.FullScan">
      <summary>Type is FullScan</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.StatisticsOptionType.SamplePercent">
      <summary>Type is SamplePercent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.StatisticsOptionType.SampleRows">
      <summary>Type is SampleRows</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.StatisticsOptionType.StatsStream">
      <summary>Type is StatsStream</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.StatisticsOptionType.NoRecompute">
      <summary>Type is NoRecompute</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.StatisticsOptionType.Resample">
      <summary>Type is Resample</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.StatisticsOptionType.RowCount">
      <summary>Type is RowCount</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.StatisticsOptionType.PageCount">
      <summary>Type is PageCount</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.StatisticsOptionType.All">
      <summary>Type is All</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.StatisticsOptionType.Columns">
      <summary>Type is Columns</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.StatisticsOptionType.Index">
      <summary>Type is Index</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.StopListFullTextIndexOption">
      <summary>Represents the STOPLIST option in a CREATE FULLTEXT INDEX statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.StopListFullTextIndexOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.StopListFullTextIndexOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.StopListFullTextIndexOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.StopListFullTextIndexOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.StopListFullTextIndexOption.IsOff">
      <summary>Gets or sets whether OFF is specified.</summary>
      <returns>Returns true if OFF is specified, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.StopListFullTextIndexOption.StopListName">
      <summary>Gets or sets the name of the stop list.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.StopRestoreOption">
      <summary>Represents the STOPATMARK and STOPBEFOREMARK RESTORE options.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.StopRestoreOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.StopRestoreOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.StopRestoreOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.StopRestoreOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.StopRestoreOption.After">
      <summary>Gets or sets an optional AFTER clause.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.StopRestoreOption.IsStopAt">
      <summary>Gets or sets whether STOPATMARK is the option.</summary>
      <returns>Returns true in case of STOPATMARK, false in case of STOPBEFOREMARK.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.StopRestoreOption.Mark">
      <summary>Gets or sets the mark to stop at or before.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.Subquery">
      <summary>Represents a subquery.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Subquery.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Subquery" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Subquery.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.Subquery.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.Subquery.QueryExpression">
      <summary>Gets or sets the query expression.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.QueryExpression" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SubqueryComparisonPredicate">
      <summary>Represents the comparison predicates that have subqueries.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SubqueryComparisonPredicate.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SubqueryComparisonPredicate" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SubqueryComparisonPredicate.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SubqueryComparisonPredicate.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SubqueryComparisonPredicate.BinaryExpressionType">
      <summary>Gets or sets the binary expression type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpressionType" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SubqueryComparisonPredicate.Expression">
      <summary>Gets or sets an expression.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SubqueryComparisonPredicate.Subquery">
      <summary>Gets or sets the subquery.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Subquery" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SubqueryComparisonPredicate.SubqueryComparisonPredicateType">
      <summary>Gets or sets the comparison predicates that have subqueries.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SubqueryComparisonPredicateType" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SubqueryComparisonPredicateType">
      <summary>Specifies a subquery comparison predicate type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SubqueryComparisonPredicateType.None">
      <summary>Type is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SubqueryComparisonPredicateType.All">
      <summary>Type is All</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.SubqueryComparisonPredicateType.Any">
      <summary>Type is Any</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SubquerySpecification">
      <summary>Represents a subquery specification.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SubquerySpecification.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SubquerySpecification" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SubquerySpecification.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SubquerySpecification.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SubquerySpecification.ForBrowse">
      <summary>Gets or sets whether FOR BROWSE is used.</summary>
      <returns>Returns true if FOR BROWSE is used, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SubquerySpecification.OrderByClause">
      <summary>Gets or sets the ORDER BY clause.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.OrderByClause" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SubquerySpecification.XmlForClause">
      <summary>Gets or sets the FOR XML clause.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClause" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.SymmetricKeyStatement">
      <summary>Represents common properties for the ALTER SYMMETRIC KEY and CREATE SYMMETRIC KEY statements.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SymmetricKeyStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SymmetricKeyStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.SymmetricKeyStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SymmetricKeyStatement.EncryptingMechanisms">
      <summary>Gets a list of the key encryption mechanisms.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.SymmetricKeyStatement.Name">
      <summary>Gets or sets the key name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TableElementType">
      <summary>Specifies table element type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TableElementType.NotSpecified">
      <summary>Type is NotSpecified</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TableElementType.Constraint">
      <summary>Type is Constraint</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TableElementType.Column">
      <summary>Type is Column</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TableHint">
      <summary>Represents a single table hint.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TableHint.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TableHint" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TableHint.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TableHintsOptimizerHint">
      <summary>Represents an optimizer hint that contains a table hint.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TableHintsOptimizerHint.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TableHintsOptimizerHint" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TableHintsOptimizerHint.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TableHintsOptimizerHint.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TableHintsOptimizerHint.ObjectName">
      <summary>Gets or sets the exposed object name of the object in a query.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TableHintsOptimizerHint.TableHints">
      <summary>Gets a list of optional table hints.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TableOption">
      <summary>Represents a single table option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TableOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TableOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TableOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TableSampleClause">
      <summary>Represents the TABLESAMPLE clause.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TableSampleClause.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TableSampleClause" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TableSampleClause.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TableSampleClause.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TableSampleClause.RepeatSeed">
      <summary>Gets or sets the repeat seed.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TableSampleClause.SampleNumber">
      <summary>Gets or sets the sample number.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TableSampleClause.System">
      <summary>Returns whether system is used.</summary>
      <returns>Returns true if system is used, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TableSampleClause.TableSampleClauseOption">
      <summary>Gets or sets the option.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TableSampleClauseOption" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TableSampleClauseOption">
      <summary>Specifies the table sample clause option.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TableSampleClauseOption.NotSpecified">
      <summary>Option is NotSpecified</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TableSampleClauseOption.Percent">
      <summary>Option is Percent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TableSampleClauseOption.Rows">
      <summary>Option is Rows</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TableSource">
      <summary>Represents the table source.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TableSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TableSource" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TableSource.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TableSourceWithAlias">
      <summary>Represents a table source that can have an alias.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TableSourceWithAlias.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TableSourceWithAlias" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TableSourceWithAlias.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TableSourceWithAlias.Alias">
      <summary>Gets or sets an optional table alias.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TableSourceWithAliasAndColumns">
      <summary>Represents a table source that can specify column aliases.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TableSourceWithAliasAndColumns.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TableSourceWithAliasAndColumns" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TableSourceWithAliasAndColumns.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TableSourceWithAliasAndColumns.Columns">
      <summary>Gets a list of optional column aliases.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TableValuedFunctionReturnType">
      <summary>Represents the table valued function return type.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TableValuedFunctionReturnType.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TableValuedFunctionReturnType" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TableValuedFunctionReturnType.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TableValuedFunctionReturnType.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TableValuedFunctionReturnType.DeclareTableBody">
      <summary>Gets or sets the table body declaration.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.DeclareTableBody" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TargetDeclaration">
      <summary>Represents the target declaration.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TargetDeclaration.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TargetDeclaration" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TargetDeclaration.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TargetDeclaration.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TargetDeclaration.ObjectName">
      <summary>Gets or sets the target object name.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EventSessionObjectName" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TargetDeclaration.TargetDeclarationParameters">
      <summary>Gets a list of event declaration parameters (for SET clause).</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TernaryExpression">
      <summary>Represents an expression that has three expressions as children.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TernaryExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TernaryExpression" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TernaryExpression.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TernaryExpression.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TernaryExpression.FirstExpression">
      <summary>Gets or sets the first child expression.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TernaryExpression.SecondExpression">
      <summary>Gets or sets the second child expression.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TernaryExpression.TernaryExpressionType">
      <summary>Gets or sets the expression type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TernaryExpressionType" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TernaryExpression.ThirdExpression">
      <summary>Gets or sets the third child expression.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TernaryExpressionType">
      <summary>Specifies the ternary expression type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TernaryExpressionType.Between">
      <summary>Type is Between</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TernaryExpressionType.NotBetween">
      <summary>Type is NotBetween</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TextModificationStatement">
      <summary>Represents the WRITETEXT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TextModificationStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TextModificationStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TextModificationStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TextModificationStatement.Bulk">
      <summary>Gets or sets whether BULK is specified.</summary>
      <returns>Returns true if BULK is specified, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TextModificationStatement.Column">
      <summary>Gets or sets the column.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Column" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TextModificationStatement.TextId">
      <summary>Gets or sets the text ID.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TextModificationStatement.Timestamp">
      <summary>Gets or sets the time stamp.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TextModificationStatement.WithLog">
      <summary>Gets or sets whether WITH LOG is specified.</summary>
      <returns>Returns true if WITH LOG is specified, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TopRowFilter">
      <summary>Represents the top row filter that can be used in a SELECT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TopRowFilter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TopRowFilter" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TopRowFilter.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TopRowFilter.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TopRowFilter.Expression">
      <summary>Gets or sets the expression.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TopRowFilter.Percent">
      <summary>Gets or sets whether the PERCENT keyword was used.</summary>
      <returns>Returns true if the PERCENT keyword was used, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TopRowFilter.WithTies">
      <summary>Gets or sets whether the WITH TIES keywords were used.</summary>
      <returns>Returns true if the WITH TIES keywords were used, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TrackCausalitySessionOption">
      <summary>Represents the TRACK_CAUSALITY event session option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TrackCausalitySessionOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TrackCausalitySessionOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TrackCausalitySessionOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TrackCausalitySessionOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TransactionStatement">
      <summary>The abstract base class for Transaction statements.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TransactionStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TransactionStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TransactionStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TransactionStatement.Name">
      <summary>Gets or sets the name of the save point.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TriggerAction">
      <summary>Represents the trigger action.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TriggerAction.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TriggerAction" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TriggerAction.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TriggerAction.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TriggerAction.EventTypeGroup">
      <summary>Gets or sets the event type group.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.EventTypeGroupContainer" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TriggerAction.TriggerActionType">
      <summary>Gets or sets the trigger action type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TriggerActionType" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TriggerActionType">
      <summary>Specifies the trigger action type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TriggerActionType.Delete">
      <summary>Type is Delete</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TriggerActionType.Insert">
      <summary>Type is Insert</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TriggerActionType.Update">
      <summary>Type is Update</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TriggerActionType.Event">
      <summary>Type is Event</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TriggerActionType.LogOn">
      <summary>Type is LogOn</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TriggerEnforcement">
      <summary>Specifies trigger enforcement.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TriggerEnforcement.Disable">
      <summary>Enforcement is Disable</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TriggerEnforcement.Enable">
      <summary>Enforcement is Enable</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TriggerObject">
      <summary>Represents information about the trigger being created or altered.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TriggerObject.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TriggerObject" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TriggerObject.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TriggerObject.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TriggerObject.Name">
      <summary>Gets or sets the trigger object name.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TriggerObject.TriggerScope">
      <summary>Gets or sets the trigger scope.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TriggerScope" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TriggerOption">
      <summary>Represents the trigger option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TriggerOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TriggerOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TriggerOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TriggerOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TriggerOption.ExecuteAsClause">
      <summary>Gets or sets the EXECUTE AS clause.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsClause" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TriggerOption.Option">
      <summary>Gets or sets the trigger option type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TriggerOptionType" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TriggerOptionType">
      <summary>Specifies the trigger option type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TriggerOptionType.Encryption">
      <summary>Type is Encryption</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TriggerOptionType.ExecuteAsClause">
      <summary>Type is ExecuteAsClause</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TriggerScope">
      <summary>Specifies the trigger scope.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TriggerScope.Normal">
      <summary>Scope is Normal</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TriggerScope.Database">
      <summary>Scope is Database</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TriggerScope.AllServer">
      <summary>Scope is AllServer</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TriggerStatementBody">
      <summary>Represents CREATE TRIGGER and ALTER TRIGGER statements.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TriggerStatementBody.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TriggerStatementBody" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TriggerStatementBody.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TriggerStatementBody.IsNotForReplication">
      <summary>Gets or sets whether Not For Replication is defined.</summary>
      <returns>Returns true if Not For Replication is defined, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TriggerStatementBody.MethodSpecifier">
      <summary>Gets or sets the name of the method specifier.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.MethodSpecifier" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TriggerStatementBody.Name">
      <summary>Gets or sets the name of the trigger.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TriggerStatementBody.StatementList">
      <summary>Gets or sets the statements for the trigger.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.StatementList" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TriggerStatementBody.TriggerActions">
      <summary>Gets a list of trigger actions.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TriggerStatementBody.TriggerObject">
      <summary>Gets or sets the target.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TriggerObject" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TriggerStatementBody.TriggerOptions">
      <summary>Gets a list of trigger options in a WITH clause, different options for trigger and function.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TriggerStatementBody.TriggerType">
      <summary>Gets or sets the trigger type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TriggerType" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TriggerStatementBody.WithAppend">
      <summary>Gets or sets whether With Append is defined.</summary>
      <returns>Returns true if With Append is defined, false otherwise.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TriggerType">
      <summary>Specifies the trigger type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TriggerType.Unknown">
      <summary>Type is Unknown</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TriggerType.For">
      <summary>Type is For</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TriggerType.After">
      <summary>Type is After</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TriggerType.InsteadOf">
      <summary>Type is InsteadOf</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TruncateTableStatement">
      <summary>Represents the TRUNCATE TABLE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TruncateTableStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TruncateTableStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TruncateTableStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TruncateTableStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TruncateTableStatement.TableName">
      <summary>Gets or sets the table name.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TryCatchStatement">
      <summary>Represents the TRY…CATCH statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TryCatchStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TryCatchStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TryCatchStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TryCatchStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TryCatchStatement.CatchStatements">
      <summary>Gets or sets the Catch statement list.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.StatementList" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TryCatchStatement.TryStatements">
      <summary>Gets or sets the Try statement list.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.StatementList" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TSEqualCall">
      <summary>Represents the TSEQUAL function call, which is a Boolean function.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSEqualCall.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSEqualCall" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSEqualCall.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSEqualCall.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TSEqualCall.FirstExpression">
      <summary>Gets or sets the first expression.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TSEqualCall.SecondExpression">
      <summary>Gets or sets the second expression.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TSql100Parser">
      <summary>Represents the TSql100 parser.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql100Parser.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSql100Parser" /> class.</summary>
      <param name="initialQuotedIdentifiers">Specifies whether quoted identifier handling is on</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql100Parser.Parse(System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.Sql.TSqlParserToken},System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError})">
      <param name="tokens">List of parser tokens</param>
      <param name="errors">The parse errors</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql100Parser.ParseBooleanExpression(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql100Parser.ParseChildObjectName(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql100Parser.ParseConstantOrIdentifier(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql100Parser.ParseConstantOrIdentifierWithDefault(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql100Parser.ParseExpression(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql100Parser.ParseScalarDataType(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql100Parser.ParseSchemaObjectName(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql100Parser.ParseStatementList(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TSql80Parser">
      <summary>Represents the TSql80 parser.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql80Parser.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSql80Parser" /> class.</summary>
      <param name="initialQuotedIdentifiers">Specifies whether quoted identifier handling is on</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql80Parser.Parse(System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.Sql.TSqlParserToken},System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError})">
      <param name="tokens">The list of tokens</param>
      <param name="errors">The parse errors</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql80Parser.ParseBooleanExpression(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql80Parser.ParseChildObjectName(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql80Parser.ParseConstantOrIdentifier(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql80Parser.ParseConstantOrIdentifierWithDefault(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql80Parser.ParseExpression(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql80Parser.ParseScalarDataType(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql80Parser.ParseSchemaObjectName(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql80Parser.ParseStatementList(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TSql90Parser">
      <summary>Represents the TSql90 parser.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql90Parser.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSql90Parser" /> class.</summary>
      <param name="initialQuotedIdentifiers">Specifies whether quoted identifiers are handled</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql90Parser.Parse(System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.Sql.TSqlParserToken},System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError})">
      <param name="tokens">List of parser tokens</param>
      <param name="errors">Parse errors</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql90Parser.ParseBooleanExpression(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql90Parser.ParseChildObjectName(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql90Parser.ParseConstantOrIdentifier(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql90Parser.ParseConstantOrIdentifierWithDefault(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql90Parser.ParseExpression(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql90Parser.ParseScalarDataType(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql90Parser.ParseSchemaObjectName(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSql90Parser.ParseStatementList(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlBatch">
      <summary>Represents a batch in Transact-SQL script.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlBatch.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlBatch" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlBatch.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlBatch.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TSqlBatch.Statements">
      <summary>Gets a list of statements.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor">
      <summary>Visitor for concrete abstract syntax tree (AST) nodes.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor" /> class. </summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterCreateEndpointStatementBase)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterCreateServiceStatementBase)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOption)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextIndexAction)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterTableStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ApplicationRoleStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AssemblyStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AuditFileOption)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AuditOption)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationDetail)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BackupRestoreMasterKeyStatementBase)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BackupStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BulkInsertBase)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BulkInsertOption)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CallTarget)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CertificateStatementBase)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingOptionDetail)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.Constraint)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateLoginSource)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CredentialStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CursorStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DatabaseEncryptionKeyStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DataModificationStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DataModificationTarget)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DataType)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropChildObjectsStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintOption)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropIndexClauseBase)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropObjectsStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropUnownedObjectStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.EncryptionSource)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocolOption)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.EventTypeGroupContainer)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ExecutableEntity)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.Expression)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.FileDeclarationOption)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ForClause)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.FullTextCatalogStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.FullTextIndexOption)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.FunctionReturnType)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.FunctionStatementBody)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.GroupingSpecification)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.IndexOption)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.IndexStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.IntegerValueSessionOption)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.KeyOption)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.LoginOption)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.MasterKeyStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.MergeAction)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.MessageTypeStatementBase)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.OnOffSessionOption)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.OptimizerHint)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ParameterizedDataType)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.PayloadOption)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.PrimaryExpression)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ProcedureStatementBody)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ProcedureStatementBodyBase)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.QueryExpression)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.QueueOption)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.QueueStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.RemoteServiceBindingStatementBase)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.RestoreOption)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.RoleStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.RouteStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SecurityElement80)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SecurityStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SecurityStatementBody80)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ServerAuditStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SessionOption)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SetClause)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SetCommand)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SetOnOffStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SignatureStatementBase)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SpatialIndexOption)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.StatementWithCommonTableExpressionsAndXmlNamespaces)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SymmetricKeyStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TableHint)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TableOption)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TableSource)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TableSourceWithAlias)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TableSourceWithAliasAndColumns)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TextModificationStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TransactionStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TriggerStatementBody)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TSqlStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.UserStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ViewStatementBody)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.WaitForSupportedStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupParameter)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupStatement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespacesElement)">
      <summary>Calls the Visit method for the specified type of fragment.</summary>
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterCreateEndpointStatementBase)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterCreateServiceStatementBase)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOption)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextIndexAction)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterTableStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ApplicationRoleStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AssemblyStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AuditFileOption)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AuditOption)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationDetail)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BackupRestoreMasterKeyStatementBase)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BackupStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BulkInsertBase)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BulkInsertOption)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CallTarget)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CertificateStatementBase)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingOptionDetail)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.Constraint)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateLoginSource)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CredentialStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CursorStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DatabaseEncryptionKeyStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DataModificationStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DataModificationTarget)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DataType)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropChildObjectsStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintOption)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropIndexClauseBase)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropObjectsStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropUnownedObjectStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.EncryptionSource)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocolOption)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.EventTypeGroupContainer)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ExecutableEntity)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.Expression)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.FileDeclarationOption)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ForClause)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.FullTextCatalogStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.FullTextIndexOption)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.FunctionReturnType)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.FunctionStatementBody)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.GroupingSpecification)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.IndexOption)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.IndexStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.IntegerValueSessionOption)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.KeyOption)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.LoginOption)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.MasterKeyStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.MergeAction)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.MessageTypeStatementBase)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.OnOffSessionOption)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.OptimizerHint)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ParameterizedDataType)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.PayloadOption)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.PrimaryExpression)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ProcedureStatementBody)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ProcedureStatementBodyBase)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.QueryExpression)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.QueueOption)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.QueueStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.RemoteServiceBindingStatementBase)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.RestoreOption)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.RoleStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.RouteStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SecurityElement80)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SecurityStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SecurityStatementBody80)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ServerAuditStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SessionOption)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SetClause)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SetCommand)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SetOnOffStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SignatureStatementBase)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SpatialIndexOption)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.StatementWithCommonTableExpressionsAndXmlNamespaces)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SymmetricKeyStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TableHint)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TableOption)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TableSource)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TableSourceWithAlias)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TableSourceWithAliasAndColumns)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TextModificationStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TransactionStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TriggerStatementBody)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TSqlStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.UserStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ViewStatementBody)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.WaitForSupportedStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupParameter)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupStatement)">
      <param name="node"></param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlConcreteFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespacesElement)">
      <param name="node"></param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment">
      <summary>Represents a token fragment.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment.FirstTokenIndex">
      <summary>Gets or sets the first token index.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment.FragmentLength">
      <summary>Gets the fragment length.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment.LastTokenIndex">
      <summary>Gets or sets the last token index.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment.ScriptTokenStream">
      <summary>Gets or sets a list of token streams.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment.StartColumn">
      <summary>Gets the starting column.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment.StartLine">
      <summary>Gets the starting line.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment.StartOffset">
      <summary>Gets the fragment start offset value.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment.Uninitialized">
      <summary>Value is -1.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor">
      <summary>Represents the base visitor for the Transact-SQL script DOM.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AddAlterFullTextIndexAction)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AddFileSpec)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AddSignatureStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AdhocDataSource)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AdhocTableSource)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlgorithmKeyOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterApplicationRoleStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterAssemblyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterAsymmetricKeyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterAuthorizationStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterBrokerPriorityStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterCertificateStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterCreateEndpointStatementBase)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterCreateServiceStatementBase)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterCredentialStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterCryptographicProviderStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseAddFileGroupStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseAddFileStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseAuditSpecificationStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseCollateStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseEncryptionKeyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseModifyFileGroupStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseModifyFileStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseModifyNameStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseRebuildLogStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseRemoveFileGroupStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseRemoveFileStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseSetStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseTermination)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterEndpointStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterEventSessionStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextCatalogStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextIndexAction)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextIndexStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextStopListStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterFunctionStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterIndexStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginAddDropCredentialStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginEnableDisableStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginOptionsStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterMasterKeyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterMessageTypeStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterPartitionFunctionStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterPartitionSchemeStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterProcedureStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterQueueStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterRemoteServiceBindingStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterResourceGovernorStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterResourcePoolStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterRoleStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterRouteStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterSchemaStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterServerAuditSpecificationStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterServerAuditStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterServerConfigurationStatement)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterServiceMasterKeyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterServiceStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterSymmetricKeyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAddTableElementStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAlterColumnStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterTableChangeTrackingModificationStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterTableConstraintModificationStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterTableDropTableElement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterTableDropTableElementStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterTableRebuildStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterTableSetStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterTableStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterTableSwitchStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterTableTriggerModificationStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterTriggerStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterUserStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterViewStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterWorkloadGroupStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AlterXmlSchemaCollectionStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ApplicationRoleOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ApplicationRoleStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AssemblyEncryptionSource)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AssemblyName)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AssemblyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AssignmentSetClause)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AsymmetricKeyCreateLoginSource)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroupReference)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AuditActionSpecification)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AuditFileOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AuditGuidAuditOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AuditOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationDetail)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationPart)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AuditTarget)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationEndpointProtocolOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationPayloadOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.AutoCleanupChangeTrackingOptionDetail)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BackupCertificateStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BackupDatabaseStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BackupMasterKeyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BackupOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BackupRestoreFileInfo)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BackupRestoreMasterKeyStatementBase)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BackupServiceMasterKeyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BackupStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BackupTransactionLogStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BackwardsCompatibleDropIndexClause)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BeginConversationTimerStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BeginDialogStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BeginEndBlockStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BeginTransactionStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpression)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BinaryQueryExpression)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BoundingBoxParameter)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BoundingBoxSpatialIndexOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BreakStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityParameter)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BrowseForClause)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BuiltInFunctionTableSource)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BulkInsertBase)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BulkInsertOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BulkInsertStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.BulkOpenRowset)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CallTarget)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CaseExpression)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CastCall)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CellsPerObjectSpatialIndexOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CertificateCreateLoginSource)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CertificateOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CertificateStatementBase)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ChangeRetentionChangeTrackingOptionDetail)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ChangeTableChangesTableSource)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ChangeTableVersionTableSource)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingAlterDatabaseOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingFullTextIndexOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingOptionDetail)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CharacterSetPayloadOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CheckConstraint)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CheckpointStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ChildObjectName)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CloseCursorStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CloseMasterKeyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CloseSymmetricKeyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CoalesceExpression)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.Column)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ColumnDefinition)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ColumnDefinitionBase)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ColumnStorageOptions)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ColumnWithSortOrder)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CommandSecurityElement80)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CommitTransactionStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CommonTableExpression)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CompatibilityLevelAlterDatabaseOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CompositeGroupingSpecification)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CompressionEndpointProtocolOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CompressionPartitionRange)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ComputeClause)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ComputeFunction)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.Constraint)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ContinueStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ContractMessage)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ConvertCall)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateAggregateStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateApplicationRoleStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateAssemblyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateAsymmetricKeyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateBrokerPriorityStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateCertificateStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateContractStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateCredentialStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateCryptographicProviderStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseAuditSpecificationStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseEncryptionKeyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateDefaultStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateEndpointStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateEventNotificationStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateEventSessionStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextCatalogStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextIndexStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextStopListStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateFunctionStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateIndexStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateLoginSource)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateLoginStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateMasterKeyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateMessageTypeStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreatePartitionFunctionStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreatePartitionSchemeStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateProcedureStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateQueueStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateRemoteServiceBindingStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateResourcePoolStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateRoleStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateRouteStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateRuleStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateSchemaStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateServerAuditSpecificationStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateServerAuditStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateServiceStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateSpatialIndexStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateStatisticsStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateSymmetricKeyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateSynonymStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateTableStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateTriggerStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeTableStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeUddtStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeUdtStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateUserStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateViewStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateWorkloadGroupStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateXmlIndexStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreateXmlSchemaCollectionStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CreationDispositionKeyOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CredentialStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CryptoMechanism)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CubeGroupingSpecification)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CursorDefaultAlterDatabaseOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CursorDefinition)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CursorId)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.CursorStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DatabaseAuditAction)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DatabaseEncryptionKeyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DataCompressionOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DataModificationStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DataModificationStatementTableSource)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DataModificationTarget)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DataType)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DbccNamedLiteral)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DbccStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DeallocateCursorStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DeclareCursorStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DeclareTableBody)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DeclareTableStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DeclareVariableElement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DeclareVariableStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DefaultConstraint)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DeleteMergeAction)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DeleteStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DenyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DenyStatement80)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DeviceInfo)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropAggregateStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropAlterFullTextIndexAction)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropApplicationRoleStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropAssemblyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropAsymmetricKeyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropBrokerPriorityStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropCertificateStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropChildObjectsStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintFragmentOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintStateOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropContractStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropCredentialStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropCryptographicProviderStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropDatabaseAuditSpecificationStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropDatabaseEncryptionKeyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropDatabaseStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropDefaultStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropEndpointStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropEventNotificationStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropEventSessionStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropFullTextCatalogStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropFullTextIndexStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropFullTextStopListStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropFunctionStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropIndexClause)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropIndexClauseBase)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropIndexStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropLoginStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropMasterKeyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropMessageTypeStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropObjectsStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropPartitionFunctionStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropPartitionSchemeStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropProcedureStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropQueueStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropRemoteServiceBindingStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropResourcePoolStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropRoleStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropRouteStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropRuleStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropSchemaStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropServerAuditSpecificationStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropServerAuditStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropServiceStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropSignatureStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropStatisticsStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropSymmetricKeyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropSynonymStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropTableStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropTriggerStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropTypeStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropUnownedObjectStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropUserStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropViewStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropWorkloadGroupStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.DropXmlSchemaCollectionStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.EnabledDisabledPayloadOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.EnableDisableTriggerStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.EncryptionPayloadOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.EncryptionSource)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.EndConversationStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.EndpointAffinity)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocolOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.EventDeclaration)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.EventDeclarationCompareFunctionParameter)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.EventDeclarationSetParameter)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.EventGroupContainer)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationObjectScope)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.EventRetentionSessionOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.EventSessionObjectName)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.EventSessionStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.EventTypeContainer)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.EventTypeGroupContainer)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ExecutableEntity)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ExecutableProcedureReference)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ExecutableStringList)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsClause)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ExecuteContext)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ExecuteParameter)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ExecuteStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ExistsPredicate)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.Expression)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ExpressionCallTarget)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ExpressionGroupingSpecification)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ExpressionWithSortOrder)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ExtractFromExpression)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.FetchCursorStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.FetchType)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.FileDeclaration)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.FileDeclarationOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.FileEncryptionSource)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.FileGroup)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.FileGroupOrPartitionScheme)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.FileGrowthFileDeclarationOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.FileNameFileDeclarationOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.FilePathAuditFileOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.FileStreamOnTableOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ForClause)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ForeignKeyConstraint)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.FullTextCatalogAndFileGroup)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.FullTextCatalogStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.FullTextIndexColumn)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.FullTextIndexOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.FullTextPredicate)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.FullTextStopListAction)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.FullTextTableSource)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.FunctionCall)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.FunctionCallSetClause)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.FunctionReturnType)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.FunctionStatementBody)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.GeneralSetCommand)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.GetConversationGroupStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.GoToStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.GrandTotalGroupingSpecification)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.GrantStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.GrantStatement80)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.GridParameter)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.GridsSpatialIndexOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.GroupByClause)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.GroupingSetsGroupingSpecification)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.GroupingSpecification)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.HavingClause)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.Identifier)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.IdentifierLoginOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.IdentifiersCallTarget)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.IdentityFunction)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.IdentityValueKeyOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.IfStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.IndexExpressionOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.IndexOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.IndexStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.IndexStateOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.IndexTableHint)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.InlineDerivedTable)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.InPredicate)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.InsertBulkColumnDefinition)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.InsertBulkStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.InsertMergeAction)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.InsertStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.IntegerValueSessionOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.InternalOpenRowset)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.InvalidExpression)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.InvalidIdentifier)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.InvalidSchemaObjectName)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.InvalidSelectStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.InvalidStatementList)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.InvalidTSqlFragment)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.InvalidTSqlStatement)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.IPv4)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.JoinParenthesis)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.KeyOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.KeySourceKeyOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.KillQueryNotificationSubscriptionStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.KillStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.KillStatsJobStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.LabelStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.LeftFunctionCall)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.LikePredicate)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.LineNoStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ListenerIpEndpointProtocolOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.Literal)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.LiteralEndpointProtocolOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.LiteralPayloadOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.LockEscalationTableOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.LoginOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.LoginTypePayloadOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.MasterKeyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.MaxDispatchLatencySessionOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.MaxEventSizeSessionOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.MaxMemorySessionOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.MaxRolloverFilesAuditFileOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.MaxSizeAuditFileOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.MaxSizeFileDeclarationOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.MemoryPartitionSessionOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.MergeAction)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.MergeActionClause)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.MergeStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.MessageTypeStatementBase)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.MethodSpecifier)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.MirrorToClause)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.MoveConversationStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.MoveRestoreOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.NameFileDeclarationOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.NullableConstraint)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.NullIfExpression)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.OdbcConvertSpecification)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.OdbcFunctionCall)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.OdbcQualifiedJoin)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.OfflineFileDeclarationOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.OnFailureAuditOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.OnOffAlterDatabaseOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.OnOffSessionOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.OpenCursorStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.OpenMasterKeyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.OpenQueryTableSource)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.OpenRowsetDataModificationTarget)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.OpenRowsetTableSource)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.OpenSymmetricKeyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.OpenXmlTableSource)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.OptimizeForOptimizerHint)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.OptimizerHint)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.OrderBulkInsertOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.OrderByClause)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.OutputClause)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.OverClause)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.PageVerifyAlterDatabaseOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ParameterizationAlterDatabaseOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ParameterizedDataType)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ParameterlessCall)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ParenthesisExpression)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.PartitionFunctionCall)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.PartitionParameterType)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.PartitionSpecifier)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.PartnerAlterDatabaseOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.PasswordAlterLoginOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.PasswordCreateLoginSource)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.PayloadOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.Permission)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.PivotedTableSource)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.PortsEndpointProtocolOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.PredicateSetStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.PrimaryExpression)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.PrintStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.Privilege80)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.PrivilegeSecurityElement80)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ProcedureParameter)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ProcedureReference)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ProcedureStatementBody)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ProcedureStatementBodyBase)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ProcessAffinityRange)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ProviderEncryptionSource)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ProviderKeyNameKeyOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.QualifiedJoin)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.QueryDerivedTable)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.QueryExpression)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.QueryParenthesis)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.QuerySpecification)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.QueueDelayAuditOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.QueueOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.QueueStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.QueueStateOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.QueueTSqlFragmentOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.RaiseErrorLegacyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.RaiseErrorStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ReadOnlyForClause)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ReadTextStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ReceiveStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ReconfigureStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.RecoveryAlterDatabaseOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.RemoteServiceBindingStatementBase)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ReserveDiskSpaceAuditFileOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ResourcePoolParameter)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ResourcePoolStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.RestoreMasterKeyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.RestoreOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.RestoreServiceMasterKeyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.RestoreStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ReturnStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.RevertStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.RevokeStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.RevokeStatement80)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.RightFunctionCall)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.RolePayloadOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.RoleStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.RollbackTransactionStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.RollupGroupingSpecification)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.RouteOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.RouteStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.RowValue)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SaveTransactionStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ScalarFunctionReturnType)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SchemaDeclarationItem)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectDataModificationTarget)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectTableSource)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SchemaPayloadOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SecurityElement80)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SecurityLoginOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SecurityPrincipal)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SecurityStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SecurityStatementBody80)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SecurityTargetObject)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SecurityTargetObjectName)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SecurityUserClause80)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SelectColumn)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SelectFunctionReturnType)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SelectSetVariable)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SelectStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SendStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ServerAuditStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ServiceContract)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SessionOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SessionTimeoutPayloadOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SetClause)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SetCommand)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SetCommandStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SetErrorLevelStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SetFipsFlaggerCommand)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SetIdentityInsertStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SetOffsetsStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SetOnOffStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SetRowCountStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SetStatisticsStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SetStopListAlterFullTextIndexAction)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SetTextSizeStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SetTransactionIsolationLevelStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SetUserStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SetVariableStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ShutdownStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SidCreateLoginOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SignatureStatementBase)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterDatabaseOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterFullTextIndexAction)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHint)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SimpleRestoreOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHint)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SizeFileDeclarationOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SoapMethod)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SourceDeclaration)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SpatialIndexOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SpatialIndexRegularOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SqlCommandIdentifier)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SqlDataType)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.StartupStateSessionOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.StateAuditOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.StatementList)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.StatementWithCommonTableExpressionsAndXmlNamespaces)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.StatisticsOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.StopListFullTextIndexOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.StopRestoreOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.Subquery)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SubqueryComparisonPredicate)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SubquerySpecification)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.SymmetricKeyStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TableHint)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TableHintsOptimizerHint)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TableOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TableSampleClause)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TableSource)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TableSourceWithAlias)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TableSourceWithAliasAndColumns)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TableValuedFunctionReturnType)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TargetDeclaration)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TernaryExpression)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TextModificationStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TopRowFilter)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TrackCausalitySessionOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TransactionStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TriggerAction)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TriggerObject)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TriggerOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TriggerStatementBody)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TruncateTableStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TryCatchStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TSEqualCall)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TSqlBatch)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TSqlScript)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.TSqlStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.UnaryExpression)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.UniqueConstraint)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.UnpivotedTableSource)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.UnqualifiedJoin)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.UpdateCall)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.UpdateForClause)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.UpdateMergeAction)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.UpdateStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.UpdateStatisticsStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.UpdateTextStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.UserDataType)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.UserDefinedTypeCallTarget)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.UserDefinedTypePropertyAccess)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.UserLoginOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.UserOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.UserStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.UseStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ValuesInsertSource)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.VariableDataModificationTarget)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.VariableTableSource)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.VariableValuePair)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ViewOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.ViewStatementBody)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.WaitForStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.WaitForSupportedStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.WhenClause)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.WhereClause)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.WhileStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.WindowsCreateLoginSource)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.WithCommonTableExpressionsAndXmlNamespaces)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.WitnessAlterDatabaseOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupImportanceParameter)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupParameter)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupResourceParameter)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.WriteTextStatement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.WsdlPayloadOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.XmlDataType)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.XmlForClause)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.XmlForClauseOption)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespaces)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespacesAliasElement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespacesDefaultElement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.ExplicitVisit(Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespacesElement)">
      <param name="node">The specified fragment type</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AddAlterFullTextIndexAction)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AddFileSpec)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AddSignatureStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AdhocDataSource)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AdhocTableSource)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlgorithmKeyOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterApplicationRoleStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterAssemblyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterAsymmetricKeyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterAuthorizationStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterBrokerPriorityStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterCertificateStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterCreateEndpointStatementBase)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterCreateServiceStatementBase)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterCredentialStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterCryptographicProviderStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseAddFileGroupStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseAddFileStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseAuditSpecificationStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseCollateStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseEncryptionKeyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseModifyFileGroupStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseModifyFileStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseModifyNameStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseRebuildLogStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseRemoveFileGroupStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseRemoveFileStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseSetStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterDatabaseTermination)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterEndpointStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterEventSessionStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextCatalogStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextIndexAction)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextIndexStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterFullTextStopListStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterFunctionStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterIndexStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginAddDropCredentialStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginEnableDisableStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginOptionsStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterLoginStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterMasterKeyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterMessageTypeStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterPartitionFunctionStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterPartitionSchemeStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterProcedureStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterQueueStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterRemoteServiceBindingStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterResourceGovernorStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterResourcePoolStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterRoleStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterRouteStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterSchemaStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterServerAuditSpecificationStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterServerAuditStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterServerConfigurationStatement)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterServiceMasterKeyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterServiceStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterSymmetricKeyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAddTableElementStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterTableAlterColumnStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterTableChangeTrackingModificationStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterTableConstraintModificationStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterTableDropTableElement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterTableDropTableElementStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterTableRebuildStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterTableSetStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterTableStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterTableSwitchStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterTableTriggerModificationStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterTriggerStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterUserStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterViewStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterWorkloadGroupStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AlterXmlSchemaCollectionStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ApplicationRoleOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ApplicationRoleStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AssemblyEncryptionSource)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AssemblyName)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AssemblyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AssignmentSetClause)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AsymmetricKeyCreateLoginSource)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AuditActionGroupReference)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AuditActionSpecification)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AuditFileOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AuditGuidAuditOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AuditOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationDetail)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationPart)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AuditSpecificationStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AuditTarget)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationEndpointProtocolOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AuthenticationPayloadOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.AutoCleanupChangeTrackingOptionDetail)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BackupCertificateStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BackupDatabaseStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BackupMasterKeyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BackupOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BackupRestoreFileInfo)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BackupRestoreMasterKeyStatementBase)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BackupServiceMasterKeyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BackupStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BackupTransactionLogStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BackwardsCompatibleDropIndexClause)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BeginConversationTimerStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BeginDialogStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BeginEndBlockStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BeginTransactionStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BinaryExpression)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BinaryQueryExpression)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BoundingBoxParameter)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BoundingBoxSpatialIndexOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BreakStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityParameter)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BrokerPriorityStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BrowseForClause)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BuiltInFunctionTableSource)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BulkInsertBase)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BulkInsertOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BulkInsertStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.BulkOpenRowset)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CallTarget)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CaseExpression)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CastCall)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CellsPerObjectSpatialIndexOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CertificateCreateLoginSource)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CertificateOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CertificateStatementBase)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ChangeRetentionChangeTrackingOptionDetail)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ChangeTableChangesTableSource)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ChangeTableVersionTableSource)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingAlterDatabaseOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingFullTextIndexOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ChangeTrackingOptionDetail)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CharacterSetPayloadOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CheckConstraint)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CheckpointStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ChildObjectName)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CloseCursorStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CloseMasterKeyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CloseSymmetricKeyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CoalesceExpression)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.Column)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ColumnDefinition)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ColumnDefinitionBase)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ColumnStorageOptions)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ColumnWithSortOrder)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CommandSecurityElement80)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CommitTransactionStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CommonTableExpression)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CompatibilityLevelAlterDatabaseOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CompositeGroupingSpecification)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CompressionEndpointProtocolOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CompressionPartitionRange)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ComputeClause)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ComputeFunction)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.Constraint)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ContinueStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ContractMessage)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ConvertCall)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateAggregateStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateApplicationRoleStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateAssemblyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateAsymmetricKeyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateBrokerPriorityStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateCertificateStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateContractStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateCredentialStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateCryptographicProviderStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseAuditSpecificationStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseEncryptionKeyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateDatabaseStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateDefaultStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateEndpointStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateEventNotificationStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateEventSessionStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextCatalogStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextIndexStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateFullTextStopListStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateFunctionStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateIndexStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateLoginSource)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateLoginStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateMasterKeyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateMessageTypeStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreatePartitionFunctionStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreatePartitionSchemeStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateProcedureStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateQueueStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateRemoteServiceBindingStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateResourcePoolStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateRoleStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateRouteStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateRuleStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateSchemaStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateServerAuditSpecificationStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateServerAuditStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateServiceStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateSpatialIndexStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateStatisticsStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateSymmetricKeyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateSynonymStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateTableStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateTriggerStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeTableStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeUddtStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateTypeUdtStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateUserStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateViewStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateWorkloadGroupStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateXmlIndexStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreateXmlSchemaCollectionStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CreationDispositionKeyOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CredentialStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CryptoMechanism)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CubeGroupingSpecification)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CursorDefaultAlterDatabaseOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CursorDefinition)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CursorId)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.CursorStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DatabaseAuditAction)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DatabaseEncryptionKeyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DataCompressionOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DataModificationStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DataModificationStatementTableSource)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DataModificationTarget)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DataType)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DbccNamedLiteral)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DbccStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DeallocateCursorStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DeclareCursorStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DeclareTableBody)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DeclareTableStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DeclareVariableElement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DeclareVariableStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DefaultConstraint)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DeleteMergeAction)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DeleteStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DenyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DenyStatement80)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DeviceInfo)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropAggregateStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropAlterFullTextIndexAction)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropApplicationRoleStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropAssemblyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropAsymmetricKeyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropBrokerPriorityStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropCertificateStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropChildObjectsStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintFragmentOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropClusteredConstraintStateOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropContractStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropCredentialStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropCryptographicProviderStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropDatabaseAuditSpecificationStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropDatabaseEncryptionKeyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropDatabaseStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropDefaultStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropEndpointStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropEventNotificationStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropEventSessionStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropFullTextCatalogStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropFullTextIndexStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropFullTextStopListStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropFunctionStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropIndexClause)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropIndexClauseBase)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropIndexStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropLoginStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropMasterKeyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropMessageTypeStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropObjectsStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropPartitionFunctionStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropPartitionSchemeStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropProcedureStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropQueueStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropRemoteServiceBindingStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropResourcePoolStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropRoleStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropRouteStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropRuleStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropSchemaStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropServerAuditSpecificationStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropServerAuditStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropServiceStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropSignatureStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropStatisticsStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropSymmetricKeyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropSynonymStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropTableStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropTriggerStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropTypeStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropUnownedObjectStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropUserStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropViewStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropWorkloadGroupStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.DropXmlSchemaCollectionStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.EnabledDisabledPayloadOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.EnableDisableTriggerStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.EncryptionPayloadOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.EncryptionSource)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.EndConversationStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.EndpointAffinity)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.EndpointProtocolOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.EventDeclaration)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.EventDeclarationCompareFunctionParameter)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.EventDeclarationSetParameter)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.EventGroupContainer)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.EventNotificationObjectScope)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.EventRetentionSessionOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.EventSessionObjectName)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.EventSessionStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.EventTypeContainer)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.EventTypeGroupContainer)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ExecutableEntity)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ExecutableProcedureReference)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ExecutableStringList)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsClause)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ExecuteAsStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ExecuteContext)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ExecuteParameter)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ExecuteStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ExistsPredicate)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.Expression)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ExpressionCallTarget)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ExpressionGroupingSpecification)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ExpressionWithSortOrder)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ExtractFromExpression)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.FetchCursorStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.FetchType)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.FileDeclaration)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.FileDeclarationOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.FileEncryptionSource)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.FileGroup)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.FileGroupOrPartitionScheme)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.FileGrowthFileDeclarationOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.FileNameFileDeclarationOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.FilePathAuditFileOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.FileStreamOnTableOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ForClause)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ForeignKeyConstraint)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.FullTextCatalogAndFileGroup)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.FullTextCatalogStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.FullTextIndexColumn)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.FullTextIndexOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.FullTextPredicate)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.FullTextStopListAction)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.FullTextTableSource)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.FunctionCall)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.FunctionCallSetClause)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.FunctionReturnType)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.FunctionStatementBody)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.GeneralSetCommand)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.GetConversationGroupStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.GoToStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.GrandTotalGroupingSpecification)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.GrantStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.GrantStatement80)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.GridParameter)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.GridsSpatialIndexOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.GroupByClause)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.GroupingSetsGroupingSpecification)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.GroupingSpecification)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.HavingClause)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.Identifier)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.IdentifierLoginOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.IdentifiersCallTarget)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.IdentityFunction)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.IdentityValueKeyOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.IfStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.IndexExpressionOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.IndexOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.IndexStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.IndexStateOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.IndexTableHint)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.InlineDerivedTable)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.InPredicate)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.InsertBulkColumnDefinition)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.InsertBulkStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.InsertMergeAction)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.InsertStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.IntegerValueSessionOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.InternalOpenRowset)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.InvalidExpression)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.InvalidIdentifier)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.InvalidSchemaObjectName)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.InvalidSelectStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.InvalidStatementList)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.InvalidTSqlFragment)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.InvalidTSqlStatement)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.IPv4)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.JoinParenthesis)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.KeyOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.KeySourceKeyOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.KillQueryNotificationSubscriptionStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.KillStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.KillStatsJobStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.LabelStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.LeftFunctionCall)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.LikePredicate)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.LineNoStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ListenerIpEndpointProtocolOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.Literal)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.LiteralEndpointProtocolOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.LiteralPayloadOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.LockEscalationTableOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.LoginOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.LoginTypePayloadOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.MasterKeyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.MaxDispatchLatencySessionOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.MaxEventSizeSessionOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.MaxMemorySessionOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.MaxRolloverFilesAuditFileOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.MaxSizeAuditFileOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.MaxSizeFileDeclarationOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.MemoryPartitionSessionOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.MergeAction)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.MergeActionClause)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.MergeStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.MessageTypeStatementBase)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.MethodSpecifier)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.MirrorToClause)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.MoveConversationStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.MoveRestoreOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.NameFileDeclarationOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.NullableConstraint)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.NullIfExpression)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.OdbcConvertSpecification)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.OdbcFunctionCall)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.OdbcQualifiedJoin)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.OfflineFileDeclarationOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.OnFailureAuditOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.OnOffAlterDatabaseOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.OnOffSessionOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.OpenCursorStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.OpenMasterKeyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.OpenQueryTableSource)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.OpenRowsetDataModificationTarget)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.OpenRowsetTableSource)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.OpenSymmetricKeyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.OpenXmlTableSource)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.OptimizeForOptimizerHint)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.OptimizerHint)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.OrderBulkInsertOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.OrderByClause)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.OutputClause)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.OverClause)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.PageVerifyAlterDatabaseOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ParameterizationAlterDatabaseOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ParameterizedDataType)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ParameterlessCall)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ParenthesisExpression)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.PartitionFunctionCall)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.PartitionParameterType)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.PartitionSpecifier)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.PartnerAlterDatabaseOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.PasswordAlterLoginOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.PasswordCreateLoginSource)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.PayloadOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.Permission)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.PivotedTableSource)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.PortsEndpointProtocolOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.PredicateSetStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.PrimaryExpression)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.PrintStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.Privilege80)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.PrivilegeSecurityElement80)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ProcedureParameter)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ProcedureReference)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ProcedureStatementBody)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ProcedureStatementBodyBase)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ProcessAffinityRange)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ProviderEncryptionSource)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ProviderKeyNameKeyOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.QualifiedJoin)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.QueryDerivedTable)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.QueryExpression)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.QueryParenthesis)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.QuerySpecification)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.QueueDelayAuditOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.QueueOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.QueueStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.QueueStateOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.QueueTSqlFragmentOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.RaiseErrorLegacyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.RaiseErrorStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ReadOnlyForClause)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ReadTextStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ReceiveStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ReconfigureStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.RecoveryAlterDatabaseOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.RemoteServiceBindingStatementBase)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ReserveDiskSpaceAuditFileOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ResourcePoolParameter)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ResourcePoolStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.RestoreMasterKeyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.RestoreOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.RestoreServiceMasterKeyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.RestoreStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ReturnStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.RevertStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.RevokeStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.RevokeStatement80)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.RightFunctionCall)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.RolePayloadOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.RoleStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.RollbackTransactionStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.RollupGroupingSpecification)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.RouteOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.RouteStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.RowValue)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SaveTransactionStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ScalarFunctionReturnType)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SchemaDeclarationItem)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectDataModificationTarget)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectTableSource)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SchemaPayloadOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SecurityElement80)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SecurityLoginOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SecurityPrincipal)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SecurityStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SecurityStatementBody80)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SecurityTargetObject)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SecurityTargetObjectName)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SecurityUserClause80)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SelectColumn)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SelectFunctionReturnType)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SelectSetVariable)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SelectStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SendStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ServerAuditStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ServiceContract)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SessionOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SessionTimeoutPayloadOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SetClause)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SetCommand)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SetCommandStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SetErrorLevelStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SetFipsFlaggerCommand)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SetIdentityInsertStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SetOffsetsStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SetOnOffStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SetRowCountStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SetStatisticsStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SetStopListAlterFullTextIndexAction)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SetTextSizeStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SetTransactionIsolationLevelStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SetUserStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SetVariableStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ShutdownStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SidCreateLoginOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SignatureStatementBase)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterDatabaseOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SimpleAlterFullTextIndexAction)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SimpleBulkInsertOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SimpleOptimizerHint)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SimpleRestoreOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SimpleTableHint)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SizeFileDeclarationOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SoapMethod)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SourceDeclaration)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SpatialIndexOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SpatialIndexRegularOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SqlCommandIdentifier)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SqlDataType)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.StartupStateSessionOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.StateAuditOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.StatementList)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.StatementWithCommonTableExpressionsAndXmlNamespaces)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.StatisticsOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.StopListFullTextIndexOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.StopRestoreOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.Subquery)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SubqueryComparisonPredicate)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SubquerySpecification)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.SymmetricKeyStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TableHint)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TableHintsOptimizerHint)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TableOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TableSampleClause)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TableSource)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TableSourceWithAlias)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TableSourceWithAliasAndColumns)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TableValuedFunctionReturnType)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TargetDeclaration)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TernaryExpression)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TextModificationStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TopRowFilter)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TrackCausalitySessionOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TransactionStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TriggerAction)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TriggerObject)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TriggerOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TriggerStatementBody)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TruncateTableStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TryCatchStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TSEqualCall)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TSqlBatch)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragment)">
      <param name="fragment">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TSqlScript)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.TSqlStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.UnaryExpression)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.UniqueConstraint)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.UnpivotedTableSource)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.UnqualifiedJoin)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.UpdateCall)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.UpdateForClause)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.UpdateMergeAction)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.UpdateStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.UpdateStatisticsStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.UpdateTextStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.UserDataType)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.UserDefinedTypeCallTarget)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.UserDefinedTypePropertyAccess)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.UserLoginOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.UserOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.UserStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.UseStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ValuesInsertSource)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.VariableDataModificationTarget)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.VariableTableSource)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.VariableValuePair)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ViewOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.ViewStatementBody)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.WaitForStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.WaitForSupportedStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.WhenClause)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.WhereClause)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.WhileStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.WindowsCreateLoginSource)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.WithCommonTableExpressionsAndXmlNamespaces)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.WitnessAlterDatabaseOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupImportanceParameter)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupParameter)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupResourceParameter)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.WriteTextStatement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.WsdlPayloadOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.XmlDataType)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.XmlForClause)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.XmlForClauseOption)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespaces)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespacesAliasElement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespacesDefaultElement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor.Visit(Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespacesElement)">
      <param name="node">The specified type of fragment</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParser">
      <summary>Represents the T-SQL parser.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParser.GetTokenStream(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError})">
      <param name="input">The script that will be parsed</param>
      <param name="errors">The parse errors</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParser.GetTokenStream(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError},System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParser.Parse(System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.Sql.TSqlParserToken},System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError})">
      <param name="tokens">List of parser tokens</param>
      <param name="errors">The parse errors</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParser.Parse(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@)">
      <param name="input">The script that will be parsed</param>
      <param name="errors">The parse errors</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParser.Parse(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParser.ParseBooleanExpression(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParser.ParseBooleanExpression(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParser.ParseChildObjectName(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParser.ParseChildObjectName(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParser.ParseConstantOrIdentifier(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParser.ParseConstantOrIdentifier(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParser.ParseConstantOrIdentifierWithDefault(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParser.ParseConstantOrIdentifierWithDefault(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParser.ParseExpression(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParser.ParseExpression(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParser.ParseScalarDataType(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParser.ParseScalarDataType(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParser.ParseSchemaObjectName(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParser.ParseSchemaObjectName(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParser.ParseStatementList(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParser.ParseStatementList(System.IO.TextReader,System.Collections.Generic.IList{Microsoft.Data.Schema.ScriptDom.ParseError}@,System.Int32,System.Int32,System.Int32)"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParser.QuotedIdentifier">
      <summary>Gets whether quoted identifier handling is on.</summary>
      <returns>Returns true if quoted identifier handling is on, false otherwise.</returns>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParser.ValidateIdentifier(System.String)">
      <summary>Returns whether a name is a valid SQL identifier.</summary>
      <returns>Returns true if a name is a valid SQL identifier, false otherwise.</returns>
      <param name="name">The string to be checked</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParserToken">
      <summary>Represents a parser token.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParserToken.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParserToken" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParserToken.#ctor(Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType,System.Int32,System.String,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParserToken.#ctor(Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType,System.String)"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParserToken.Column"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParserToken.Line"></member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParserToken.Offset">
      <summary>Gets or sets the token offset.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParserToken.Text">
      <summary>Gets or sets the token text.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TSqlParserToken.TokenType">
      <summary>Gets or sets the token type value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenTypes" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlScript">
      <summary>Represents a Transact-SQL script.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlScript.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlScript" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlScript.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlScript.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.TSqlScript.Batches">
      <summary>Gets a list of batches in the script.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlStatement">
      <summary>Represents a single Transact-SQL statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlStatement.#ctor">
      <summary>Initializes a new instance of a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlStatement" />.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.TSqlStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType">
      <summary>Specifies the token type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.EndOfFile">
      <summary>Token type is EndOfFile</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.None">
      <summary>Token type is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Add">
      <summary>Token type is Add</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.All">
      <summary>Token type is All</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Alter">
      <summary>Token type is Alter</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.And">
      <summary>Token type is And</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Any">
      <summary>Token type is Any</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.As">
      <summary>Token type is As</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Asc">
      <summary>Token type is Asc</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Authorization">
      <summary>Token type is Authorization</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Backup">
      <summary>Token type is Backup</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Begin">
      <summary>Token type is Begin</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Between">
      <summary>Token type is Between</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Break">
      <summary>Token type is Break</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Browse">
      <summary>Token type is Browse</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Bulk">
      <summary>Token type is Bulk</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.By">
      <summary>Token type is By</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Cascade">
      <summary>Token type is Cascade</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Case">
      <summary>Token type is Case</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Check">
      <summary>Token type is Check</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Checkpoint">
      <summary>Token type is Checkpoint</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Close">
      <summary>Token type is Close</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Clustered">
      <summary>Token type is Clustered</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Coalesce">
      <summary>Token type is Coalesce</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Collate">
      <summary>Token type is Collate</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Column">
      <summary>Token type is Column</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Commit">
      <summary>Token type is Commit</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Compute">
      <summary>Token type is Compute</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Constraint">
      <summary>Token type is Constraint</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Contains">
      <summary>Token type is Contains</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.ContainsTable">
      <summary>Token type is ContainsTable</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Continue">
      <summary>Token type is Continue</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Convert">
      <summary>Token type is Convert</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Create">
      <summary>Token type is Create</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Cross">
      <summary>Token type is Cross</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Current">
      <summary>Token type is Current</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.CurrentDate">
      <summary>Token type is CurrentDate</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.CurrentTime">
      <summary>Token type is CurrentTime</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.CurrentTimestamp">
      <summary>Token type is CurrentTimestamp</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.CurrentUser">
      <summary>Token type is CurrentUser</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Cursor">
      <summary>Token type is Cursor</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Database">
      <summary>Token type is Database</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Dbcc">
      <summary>Token type is Dbcc</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Deallocate">
      <summary>Token type is Deallocate</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Declare">
      <summary>Token type is Declare</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Default">
      <summary>Token type is Default</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Delete">
      <summary>Token type is Delete</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Deny">
      <summary>Token type is Deny</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Desc">
      <summary>Token type is Desc</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Distinct">
      <summary>Token type is Distinct</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Distributed">
      <summary>Token type is Distributed</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Double">
      <summary>Token type is Double</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Drop">
      <summary>Token type is Drop</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Else">
      <summary>Token type is Else</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.End">
      <summary>Token type is End</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Errlvl">
      <summary>Token type is Errlvl</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Escape">
      <summary>Token type is Escape</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Except">
      <summary>Token type is Except</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Exec">
      <summary>Token type is Exec</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Execute">
      <summary>Token type is Execute</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Exists">
      <summary>Token type is Exists</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Exit">
      <summary>Token type is Exit</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Fetch">
      <summary>Token type is Fetch</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.File">
      <summary>Token type is File</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.FillFactor">
      <summary>Token type is FillFactor</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.For">
      <summary>Token type is For</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Foreign">
      <summary>Token type is Foreign</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.FreeText">
      <summary>Token type is FreeText</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.FreeTextTable">
      <summary>Token type is FreeTextTable</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.From">
      <summary>Token type is From</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Full">
      <summary>Token type is Full</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Function">
      <summary>Token type is Function</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.GoTo">
      <summary>Token type is GoTo</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Grant">
      <summary>Token type is Grant</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Group">
      <summary>Token type is Group</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Having">
      <summary>Token type is Having</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.HoldLock">
      <summary>Token type is HoldLock</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Identity">
      <summary>Token type is Identity</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.IdentityInsert">
      <summary>Token type is IdentityInsert</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.IdentityColumn">
      <summary>Token type is IdentityColumn</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.If">
      <summary>Token type is If</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.In">
      <summary>Token type is In</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Index">
      <summary>Token type is Index</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Inner">
      <summary>Token type is Inner</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Insert">
      <summary>Token type is Insert</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Intersect">
      <summary>Token type is Intersect</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Into">
      <summary>Token type is Into</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Is">
      <summary>Token type is Is</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Join">
      <summary>Token type is Join</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Key">
      <summary>Token type is Key</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Kill">
      <summary>Token type is Kill</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Left">
      <summary>Token type is Left</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Like">
      <summary>Token type is Like</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.LineNo">
      <summary>Token type is LineNo</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.National">
      <summary>Token type is National</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.NoCheck">
      <summary>Token type is NoCheck</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.NonClustered">
      <summary>Token type is NonClustered</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Not">
      <summary>Token type is Not</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Null">
      <summary>Token type is Null</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.NullIf">
      <summary>Token type is NullIf</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Of">
      <summary>Token type is Of</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Off">
      <summary>Token type is Off</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Offsets">
      <summary>Token type is Offsets</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.On">
      <summary>Token type is On</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Open">
      <summary>Token type is Open</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.OpenDataSource">
      <summary>Token type is OpenDataSource</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.OpenQuery">
      <summary>Token type is OpenQuery</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.OpenRowSet">
      <summary>Token type is OpenRowSet</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.OpenXml">
      <summary>Token type is OpenXml</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Option">
      <summary>Token type is Option</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Or">
      <summary>Token type is Or</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Order">
      <summary>Token type is Order</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Outer">
      <summary>Token type is Outer</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Over">
      <summary>Token type is Over</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Percent">
      <summary>Token type is Percent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Plan">
      <summary>Token type is Plan</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Primary">
      <summary>Token type is Primary</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Print">
      <summary>Token type is Print</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Proc">
      <summary>Token type is Proc</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Procedure">
      <summary>Token type is Procedure</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Public">
      <summary>Token type is Public</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Raiserror">
      <summary>Token type is Raiserror</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Read">
      <summary>Token type is Read</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.ReadText">
      <summary>Token type is ReadText</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Reconfigure">
      <summary>Token type is Reconfigure</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.References">
      <summary>Token type is References</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Replication">
      <summary>Token type is Replication</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Restore">
      <summary>Token type is Restore</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Restrict">
      <summary>Token type is Restrict</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Return">
      <summary>Token type is Return</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Revoke">
      <summary>Token type is Revoke</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Right">
      <summary>Token type is Right</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Rollback">
      <summary>Token type is Rollback</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.RowCount">
      <summary>Token type is RowCount</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.RowGuidColumn">
      <summary>Token type is RowGuidColumn</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Rule">
      <summary>Token type is Rule</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Save">
      <summary>Token type is Save</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Schema">
      <summary>Token type is Schema</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Select">
      <summary>Token type is Select</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.SessionUser">
      <summary>Token type is SessionUser</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Set">
      <summary>Token type is Set</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.SetUser">
      <summary>Token type is SetUser</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Shutdown">
      <summary>Token type is Shutdown</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Some">
      <summary>Token type is Some</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Statistics">
      <summary>Token type is Statistics</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.SystemUser">
      <summary>Token type is SystemUser</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Table">
      <summary>Token type is Table</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.TextSize">
      <summary>Token type is TextSize</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Then">
      <summary>Token type is Then</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.To">
      <summary>Token type is To</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Top">
      <summary>Token type is Top</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Tran">
      <summary>Token type is Tran</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Transaction">
      <summary>Token type is Transaction</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Trigger">
      <summary>Token type is Trigger</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Truncate">
      <summary>Token type is Truncate</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.TSEqual">
      <summary>Token type is TSEqual</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Union">
      <summary>Token type is Union</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Unique">
      <summary>Token type is Unique</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Update">
      <summary>Token type is Update</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.UpdateText">
      <summary>Token type is UpdateText</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Use">
      <summary>Token type is Use</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.User">
      <summary>Token type is User</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Values">
      <summary>Token type is Values</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Varying">
      <summary>Token type is Varying</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.View">
      <summary>Token type is View</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.WaitFor">
      <summary>Token type is WaitFor</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.When">
      <summary>Token type is When</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Where">
      <summary>Token type is Where</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.While">
      <summary>Token type is While</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.With">
      <summary>Token type is With</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.WriteText">
      <summary>Token type is WriteText</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Disk">
      <summary>Token type is Disk</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Precision">
      <summary>Token type is Precision</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.External">
      <summary>Token type is External</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Revert">
      <summary>Token type is Revert</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Pivot">
      <summary>Token type is Pivot</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Unpivot">
      <summary>Token type is Unpivot</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.TableSample">
      <summary>Token type is TableSample</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Dump">
      <summary>Token type is Dump</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Load">
      <summary>Token type is Load</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Merge">
      <summary>Token type is Merge</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.StopList">
      <summary>Token type is StopList</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Bang">
      <summary>Token type is Bang</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.PercentSign">
      <summary>Token type is PercentSign</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Ampersand">
      <summary>Token type is Ampersand</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.LeftParenthesis">
      <summary>Token type is LeftParenthesis</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.RightParenthesis">
      <summary>Token type is RightParenthesis</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.LeftCurly">
      <summary>Token type is LeftCurly</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.RightCurly">
      <summary>Token type is RightCurly</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Star">
      <summary>Token type is Star</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.MultiplyEquals">
      <summary>Token type is MultiplyEquals</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Plus">
      <summary>Token type is Plus</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Comma">
      <summary>Token type is Comma</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Minus">
      <summary>Token type is Minus</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Dot">
      <summary>Token type is Dot</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Divide">
      <summary>Token type is Divide</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Colon">
      <summary>Token type is Colon</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.DoubleColon">
      <summary>Token type is DoubleColon</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Semicolon">
      <summary>Token type is Semicolon</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.LessThan">
      <summary>Token type is LessThan</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.EqualsSign">
      <summary>Token type is EqualsSign</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.RightOuterJoin">
      <summary>Token type is RightOuterJoin</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.GreaterThan">
      <summary>Token type is GreaterThan</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Circumflex">
      <summary>Token type is Circumflex</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.VerticalLine">
      <summary>Token type is VerticalLine</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Tilde">
      <summary>Token type is Tilde</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.AddEquals">
      <summary>Token type is AddEquals</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.SubtractEquals">
      <summary>Token type is SubtractEquals</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.DivideEquals">
      <summary>Token type is DivideEquals</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.ModEquals">
      <summary>Token type is ModEquals</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.BitwiseAndEquals">
      <summary>Token type is BitwiseAndEquals</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.BitwiseOrEquals">
      <summary>Token type is BitwiseOrEquals</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.BitwiseXorEquals">
      <summary>Token type is BitwiseXorEquals</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Go">
      <summary>Token type is Go</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Label">
      <summary>Token type is Label</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Integer">
      <summary>Token type is Integer</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Real">
      <summary>Token type is Real</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.HexLiteral">
      <summary>Token type is HexLiteral</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Money">
      <summary>Token type is Money</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.SqlCommandIdentifier">
      <summary>Token type is SqlCommandIdentifier</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.PseudoColumn">
      <summary>Token type is PseudoColumn</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.DollarPartition">
      <summary>Token type is DollarPartition</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.AsciiStringOrQuotedIdentifier">
      <summary>Token type is AsciiStringOrQuotedIdentifier</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.AsciiStringLiteral">
      <summary>Token type is AsciiStringLiteral</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.UnicodeStringLiteral">
      <summary>Token type is UnicodeStringLiteral</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Identifier">
      <summary>Token type is Identifier</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.QuotedIdentifier">
      <summary>Token type is QuotedIdentifier</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.Variable">
      <summary>Token type is Variable</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.OdbcInitiator">
      <summary>Token type is OdbcInitiator</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.ProcNameSemicolon">
      <summary>Token type is ProcNameSemicolon</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.SingleLineComment">
      <summary>Token type is SingleLineComment</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.MultilineComment">
      <summary>Token type is MultilineComment</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.TSqlTokenType.WhiteSpace">
      <summary>Token type is WhiteSpace</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.UnaryExpression">
      <summary>Represents an expression that has a single expression as a child.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UnaryExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.UnaryExpression" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UnaryExpression.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UnaryExpression.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UnaryExpression.Expression">
      <summary>Gets or sets the child expression.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UnaryExpression.UnaryExpressionType">
      <summary>Gets or sets the unary expression type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.UnaryExpressionType" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.UnaryExpressionType">
      <summary>Specifies a unary expression type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.UnaryExpressionType.Positive">
      <summary>Type is Positive</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.UnaryExpressionType.Negative">
      <summary>Type is Negative</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.UnaryExpressionType.BitwiseNot">
      <summary>Type is BitwiseNot</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.UnaryExpressionType.Not">
      <summary>Type is Not</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.UnaryExpressionType.IsNull">
      <summary>Type is IsNull</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.UnaryExpressionType.IsNotNull">
      <summary>Type is IsNotNull</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.UniqueConstraint">
      <summary>Represents the unique or primary key constraint.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UniqueConstraint.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.UniqueConstraint" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UniqueConstraint.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UniqueConstraint.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UniqueConstraint.Clustered">
      <summary>Gets or sets values specifying whether the constraint is clustered.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UniqueConstraint.Columns">
      <summary>Gets a list of constraint columns.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UniqueConstraint.FileStreamOn">
      <summary>Gets or sets an optional specification of the file stream.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UniqueConstraint.IndexOptions">
      <summary>Gets a list of index options.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UniqueConstraint.IsPrimaryKey">
      <summary>Gets or sets whether the constraint is both unique and a primary key.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UniqueConstraint.OnFileGroupOrPartitionScheme">
      <summary>Gets or sets the file group or partition scheme.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.UniqueRowFilter">
      <summary>Specifies a unique row filter.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.UniqueRowFilter.NotSpecified">
      <summary>Filter is NotSpecified</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.UniqueRowFilter.All">
      <summary>Filter is All</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.UniqueRowFilter.Distinct">
      <summary>Filter is Distinct</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.UnpivotedTableSource">
      <summary>Represents the unpivoted table source in a FROM clause.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UnpivotedTableSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.UnpivotedTableSource" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UnpivotedTableSource.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UnpivotedTableSource.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UnpivotedTableSource.InColumns">
      <summary>Gets a list of the in columns.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UnpivotedTableSource.PivotColumn">
      <summary>Gets or sets the pivot column.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UnpivotedTableSource.TableSource">
      <summary>Gets or sets the table source.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TableSource" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UnpivotedTableSource.ValueColumn">
      <summary>Gets or sets the value column.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.UnqualifiedJoin">
      <summary>Represents the unqualified JOIN in a FROM clause.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UnqualifiedJoin.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.UnqualifiedJoin" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UnqualifiedJoin.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UnqualifiedJoin.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UnqualifiedJoin.FirstTableSource">
      <summary>Gets or sets the first table source.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TableSource" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UnqualifiedJoin.SecondTableSource">
      <summary>Gets or sets the second table source.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TableSource" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UnqualifiedJoin.UnqualifiedJoinType">
      <summary>Gets or sets the JOIN type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.UnqualifiedJoinType" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.UnqualifiedJoinType">
      <summary>Specifies an unqualified join type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.UnqualifiedJoinType.CrossJoin">
      <summary>Type is CrossJoin</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.UnqualifiedJoinType.CrossApply">
      <summary>Type is CrossApply</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.UnqualifiedJoinType.OuterApply">
      <summary>Type is OuterApply</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.UpdateCall">
      <summary>Represents the UPDATE() function call, which is a Boolean function.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UpdateCall.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.UpdateCall" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UpdateCall.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UpdateCall.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UpdateCall.Identifier">
      <summary>Gets or sets the name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.UpdateForClause">
      <summary>Represents the FOR UPDATE [columns] case used only in DECLARE CURSOR.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UpdateForClause.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.UpdateForClause" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UpdateForClause.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UpdateForClause.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UpdateForClause.Columns">
      <summary>Gets a list of updateable columns.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.UpdateMergeAction">
      <summary>Represents the update merge action.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UpdateMergeAction.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.UpdateMergeAction" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UpdateMergeAction.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UpdateMergeAction.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UpdateMergeAction.SetClauses">
      <summary>Gets a list of SET clauses.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.UpdateStatement">
      <summary>Represents the UPDATE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UpdateStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.UpdateStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UpdateStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UpdateStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UpdateStatement.FromClauses">
      <summary>Gets a list of FROM clauses.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UpdateStatement.SetClauses">
      <summary>Gets a list of SET clauses.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UpdateStatement.WhereClause">
      <summary>Gets or sets a WHERE clause.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.WhereClause" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.UpdateStatisticsStatement">
      <summary>Represents the UPDATE STATISTICS statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UpdateStatisticsStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.UpdateStatisticsStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UpdateStatisticsStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UpdateStatisticsStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UpdateStatisticsStatement.SchemaObjectName">
      <summary>Gets or sets the table or view this statistic is on.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UpdateStatisticsStatement.StatisticsOptions">
      <summary>Gets a list of statistic options.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UpdateStatisticsStatement.SubElements">
      <summary>Gets a list of index or statistic names.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.UpdateTextStatement">
      <summary>Represents the UPDATETEXT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UpdateTextStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.UpdateTextStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UpdateTextStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UpdateTextStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UpdateTextStatement.DeleteLength">
      <summary>Gets or sets the delete length.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UpdateTextStatement.InsertOffset">
      <summary>Gets or sets the insert offset.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UpdateTextStatement.SourceColumn">
      <summary>Gets or sets the source column.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.Column" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UpdateTextStatement.SourceParameter">
      <summary>Gets or sets the source parameter.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.UserDataType">
      <summary>Represents a user data type.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UserDataType.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.UserDataType" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UserDataType.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UserDataType.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.UserDefinedTypeCallTarget">
      <summary>Represents the target of a call, which is a column or CLR property on a column.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UserDefinedTypeCallTarget.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.UserDefinedTypeCallTarget" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UserDefinedTypeCallTarget.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UserDefinedTypeCallTarget.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UserDefinedTypeCallTarget.SchemaObjectName">
      <summary>Gets or sets the name of the user-defined type.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.UserDefinedTypePropertyAccess">
      <summary>Represents a property on a user-defined type.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UserDefinedTypePropertyAccess.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.UserDefinedTypePropertyAccess" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UserDefinedTypePropertyAccess.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UserDefinedTypePropertyAccess.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UserDefinedTypePropertyAccess.CallTarget">
      <summary>Gets or sets the target of a call.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CallTarget" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UserDefinedTypePropertyAccess.PropertyName">
      <summary>Gets or sets the name of the property.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.UserLoginOption">
      <summary>Represents the user login option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UserLoginOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.UserLoginOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UserLoginOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UserLoginOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UserLoginOption.Identifier">
      <summary>Gets or sets the value for the option.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UserLoginOption.UserLoginOptionType">
      <summary>Gets or sets the type of the user login.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.UserLoginOptionType" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.UserLoginOptionType">
      <summary>Specifies the user login option type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.UserLoginOptionType.Login">
      <summary>Type is Login</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.UserLoginOptionType.Certificate">
      <summary>Type is Certificate</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.UserLoginOptionType.AsymmetricKey">
      <summary>Type is AsymmetricKey</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.UserLoginOptionType.WithoutLogin">
      <summary>Type is WithoutLogin</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.UserOption">
      <summary>Represents the USER option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UserOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.UserOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UserOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UserOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UserOption.Identifier">
      <summary>Gets or sets the option value.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UserOption.UserOptionType">
      <summary>Gets or sets the user option type value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.UserOptionType" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.UserOptionType">
      <summary>Specifies the user option type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.UserOptionType.Name">
      <summary>Type is Name</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.UserOptionType.DefaultSchema">
      <summary>Type is DefaultSchema</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.UserOptionType.Login">
      <summary>Type is Login</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.UserStatement">
      <summary>Represents the user statement base class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UserStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.UserStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UserStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UserStatement.Name">
      <summary>Gets or sets the user name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UserStatement.UserOptions">
      <summary>Gets a list of user options.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.UserType80">
      <summary>Specifies the user type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.UserType80.Null">
      <summary>Type is Null</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.UserType80.Public">
      <summary>Type is Public</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.UserType80.Users">
      <summary>Type is Users</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.UseStatement">
      <summary>Represents the USE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UseStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.UseStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UseStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.UseStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.UseStatement.DatabaseName">
      <summary>Gets or sets the database name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ValuesInsertSource">
      <summary>Represents the values list.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ValuesInsertSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ValuesInsertSource" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ValuesInsertSource.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ValuesInsertSource.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ValuesInsertSource.IsDefaultValues">
      <summary>Gets or sets whether default values are used.</summary>
      <returns>Returns true if default values are used, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ValuesInsertSource.RowValues">
      <summary>Gets or sets a list of rows.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.VariableDataModificationTarget">
      <summary>Represents the variable data modification target.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.VariableDataModificationTarget.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.VariableDataModificationTarget" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.VariableDataModificationTarget.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.VariableDataModificationTarget.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.VariableDataModificationTarget.Variable">
      <summary>Gets or sets the variable.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.VariableTableSource">
      <summary>Represents a table source that is a variable.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.VariableTableSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.VariableTableSource" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.VariableTableSource.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.VariableTableSource.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.VariableTableSource.FunctionCall">
      <summary>Gets or sets a function call.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.FunctionCall" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.VariableTableSource.Name">
      <summary>Gets or sets the variable name.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.VariableValuePair">
      <summary>Represents a single variable-value pair in an OPTIMIZE FOR optimizer hint.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.VariableValuePair.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.VariableValuePair" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.VariableValuePair.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.VariableValuePair.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.VariableValuePair.IsForUnknown">
      <summary>Gets or sets whether UNKNOWN is specified.</summary>
      <returns>Returns true if UNKNOWN was specified, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.VariableValuePair.Value">
      <summary>Gets or sets the value.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.VariableValuePair.Variable">
      <summary>Gets or sets the variable.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ViewOption">
      <summary>Represents the VIEW option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ViewOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ViewOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ViewOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ViewOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ViewOption.Option">
      <summary>Gets or sets the view option type value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ViewOptionType" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ViewOptionType">
      <summary>Specifies the view option type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ViewOptionType.Encryption">
      <summary>Type is Encryption</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ViewOptionType.SchemaBinding">
      <summary>Type is SchemaBinding</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.ViewOptionType.ViewMetadata">
      <summary>Type is ViewMetadata</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.ViewStatementBody">
      <summary>Represents CREATE VIEW and ALTER VIEW statements.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ViewStatementBody.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ViewStatementBody" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.ViewStatementBody.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ViewStatementBody.Columns">
      <summary>Gets a list of columns for the view.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ViewStatementBody.SchemaObjectName">
      <summary>Gets or sets the name of the view.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SchemaObjectName" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ViewStatementBody.SelectStatement">
      <summary>Gets or sets the query expression that represents the SELECT statement, with optional common table expression and XML namespaces clauses.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.SelectStatement" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ViewStatementBody.ViewOptions">
      <summary>Gets a list of view options.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.ViewStatementBody.WithCheckOption">
      <summary>Gets or sets whether With Check Option is defined.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.WaitForOption">
      <summary>Specifies the type of wait.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.WaitForOption.Delay">
      <summary>Wait for Delay</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.WaitForOption.Time">
      <summary>Wait for Time</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.WaitForOption.Statement">
      <summary>Wait for Statement</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.WaitForStatement">
      <summary>Represents the WAITFOR statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WaitForStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.WaitForStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WaitForStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WaitForStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.WaitForStatement.Parameter">
      <summary>Gets or sets a wait statement parameter.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.WaitForStatement.Statement">
      <summary>Gets or sets an inner statement.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.WaitForSupportedStatement" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.WaitForStatement.Timeout">
      <summary>Gets or sets an optional timeout.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.WaitForStatement.WaitForOption">
      <summary>Gets or sets the type of wait.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.WaitForOption" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.WaitForSupportedStatement">
      <summary>Represents an inside statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WaitForSupportedStatement.#ctor">
      <summary>Initializes a new instance of a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.WaitForSupportedStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WaitForSupportedStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.WhenClause">
      <summary>Represents the WHEN clause that is used in the case expression.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WhenClause.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.WhenClause" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WhenClause.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WhenClause.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.WhenClause.ThenExpression">
      <summary>Gets or sets the expression that comes after THEN.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.WhenClause.WhenExpression">
      <summary>Gets or sets the expression that comes after WHEN.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.WhereClause">
      <summary>Represents the WHERE clause that can be used in statements such as SELECT or UPDATE.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WhereClause.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.WhereClause" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WhereClause.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WhereClause.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.WhereClause.Cursor">
      <summary>Gets or sets the cursor ID.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.CursorId" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.WhereClause.SearchCondition">
      <summary>Gets or sets the search condition, which is a Boolean expression.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.WhileStatement">
      <summary>Represents a WHILE statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WhileStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.WhileStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WhileStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WhileStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.WhileStatement.Predicate">
      <summary>Gets or sets the expression that is the predicate for the WHILE statement.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.WhileStatement.Statement">
      <summary>The statement that will be executed if the predicate evaluates to true.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.TSqlStatement" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.WindowsCreateLoginSource">
      <summary>Represents the WINDOWS case in a CREATE LOGIN statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WindowsCreateLoginSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.WindowsCreateLoginSource" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WindowsCreateLoginSource.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WindowsCreateLoginSource.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.WindowsCreateLoginSource.Options">
      <summary>Gets a list of Windows create login options.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.WithCommonTableExpressionsAndXmlNamespaces">
      <summary>Represents a common construct that can have common table expressions and XML namespaces in it.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WithCommonTableExpressionsAndXmlNamespaces.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.WithCommonTableExpressionsAndXmlNamespaces" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WithCommonTableExpressionsAndXmlNamespaces.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WithCommonTableExpressionsAndXmlNamespaces.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.WithCommonTableExpressionsAndXmlNamespaces.ChangeTrackingContext">
      <summary>Gets or sets the change tracking context.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.WithCommonTableExpressionsAndXmlNamespaces.CommonTableExpressions">
      <summary>Gets a list of common table expressions.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.WithCommonTableExpressionsAndXmlNamespaces.XmlNamespaces">
      <summary>Gets or sets XML namespaces.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespaces" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.WitnessAlterDatabaseOption">
      <summary>Represents the WITNESS option in the ALTER DATABASE statement, SET case.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WitnessAlterDatabaseOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.WitnessAlterDatabaseOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WitnessAlterDatabaseOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WitnessAlterDatabaseOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.WitnessAlterDatabaseOption.IsOff">
      <summary>Gets or sets whether the OFF option was specified.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.WitnessAlterDatabaseOption.WitnessServer">
      <summary>Gets or sets the witness server, if specified.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupImportanceParameter">
      <summary>Represents the workload group importance parameter.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupImportanceParameter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupImportanceParameter" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupImportanceParameter.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupImportanceParameter.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupImportanceParameter.ParameterValue">
      <summary>Gets or sets the importance parameter value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.ImportanceParameterType" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupParameter">
      <summary>Represents the workload group statement parameters.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupParameter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupParameter" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupParameter.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupResourceParameter">
      <summary>Represents the workload group statement parameter.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupResourceParameter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupResourceParameter" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupResourceParameter.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupResourceParameter.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupResourceParameter.ParameterType">
      <summary>Gets or sets the parameter type value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupResourceParameterType" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupResourceParameter.ParameterValue">
      <summary>Gets or sets the parameter value.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupResourceParameterType">
      <summary>Specifies a workload group resource parameter type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupResourceParameterType.Unknown">
      <summary>Type is Unknown</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupResourceParameterType.RequestMaxMemoryGrantPercent">
      <summary>Type is RequestMaxMemoryGrantPercent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupResourceParameterType.RequestMaxCpuTimeSec">
      <summary>Type is RequestMaxCpuTimeSec</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupResourceParameterType.RequestMemoryGrantTimeoutSec">
      <summary>Type is RequestMemoryGrantTimeoutSec</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupResourceParameterType.MaxDop">
      <summary>Type is MaxDop</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupResourceParameterType.GroupMaxRequests">
      <summary>Type is GroupMaxRequests</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupStatement">
      <summary>Represents the CREATE WORKLOAD GROUP and ALTER WORKLOAD GROUP statements.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupStatement.Name">
      <summary>Gets or sets the workload group name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupStatement.PoolName">
      <summary>Gets or sets the resource pool name.</summary>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.WorkloadGroupStatement.WorkloadGroupParameters">
      <summary>Gets a list of workload group statement parameters.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.WriteTextStatement">
      <summary>Represents the WRITETEXT statement.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WriteTextStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.WriteTextStatement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WriteTextStatement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WriteTextStatement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.WriteTextStatement.SourceParameter">
      <summary>Gets or sets the source parameter.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.WsdlPayloadOption">
      <summary>Represents the WSDL payload option.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WsdlPayloadOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.WsdlPayloadOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WsdlPayloadOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.WsdlPayloadOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.WsdlPayloadOption.IsNone">
      <summary>Gets or sets whether NONE is specified as the option value.</summary>
      <returns>Returns true if NONE is specified as the option value, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.WsdlPayloadOption.Value">
      <summary>Gets or sets the option value - string or DEFAULT.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.XmlDataType">
      <summary>Represents the XML data type.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.XmlDataType.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.XmlDataType" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.XmlDataType.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.XmlDataType.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.XmlDataType.XmlDataTypeOption">
      <summary>Gets or sets the XML data type value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.XmlDataTypeOption" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.XmlDataType.XmlSchemaCollection">
      <summary>Gets or sets an XML schema collection.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.XmlDataTypeOption">
      <summary>Specifies the XML data type.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.XmlDataTypeOption.None">
      <summary>Type is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.XmlDataTypeOption.Content">
      <summary>Type is Content</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.XmlDataTypeOption.Document">
      <summary>Type is Document</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClause">
      <summary>Represents the FOR XML (options) case.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClause.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClause" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClause.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClause.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClause.Options">
      <summary>Gets a list of FOR XML clause options.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClauseOption">
      <summary>Represents the FOR XML (options) case.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClauseOption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClauseOption" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClauseOption.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClauseOption.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClauseOption.OptionKind">
      <summary>Gets or sets the option kind value.</summary>
      <returns>Returns a <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClauseOptions" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClauseOption.Value">
      <summary>Gets or sets the option value.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClauseOptions">
      <summary>Specifies XML FOR clause options.</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClauseOptions.None">
      <summary>Option is None</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClauseOptions.Raw">
      <summary>Option is Raw</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClauseOptions.Auto">
      <summary>Option is Auto</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClauseOptions.Explicit">
      <summary>Option is Explicit</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClauseOptions.Path">
      <summary>Option is Path</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClauseOptions.XmlData">
      <summary>Option is XmlData</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClauseOptions.XmlSchema">
      <summary>Option is XmlSchema</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClauseOptions.Elements">
      <summary>Option is Elements</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClauseOptions.ElementsXsiNil">
      <summary>Option is ElementsXsiNil</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClauseOptions.ElementsAbsent">
      <summary>Option is ElementsAbsent</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClauseOptions.BinaryBase64">
      <summary>Option is BinaryBase64</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClauseOptions.Type">
      <summary>Option is Type</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClauseOptions.Root">
      <summary>Option is Root</summary>
    </member>
    <member name="F:Microsoft.Data.Schema.ScriptDom.Sql.XmlForClauseOptions.ElementsAll">
      <summary>Option is ElementsAll</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespaces">
      <summary>Represents XML namespaces.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespaces.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespaces" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespaces.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespaces.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespaces.XmlNamespacesElements">
      <summary>Gets a list of XML namespace elements.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespacesAliasElement">
      <summary>Represents the alias variation for the XML namespace element.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespacesAliasElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespacesAliasElement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespacesAliasElement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespacesAliasElement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespacesAliasElement.Identifier">
      <summary>Gets or sets the alias identifier.</summary>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespacesDefaultElement">
      <summary>Represents the default variation for the XML namespace element.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespacesDefaultElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespacesDefaultElement" /> class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespacesDefaultElement.Accept(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Entry point for a given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespacesDefaultElement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="T:Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespacesElement">
      <summary>Represents an element that is used in defining an XML namespace.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespacesElement.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespacesElement.AcceptChildren(Microsoft.Data.Schema.ScriptDom.Sql.TSqlFragmentVisitor)">
      <summary>Calls Accept on the children with the given visitor.</summary>
      <param name="visitor">The visitor</param>
    </member>
    <member name="P:Microsoft.Data.Schema.ScriptDom.Sql.XmlNamespacesElement.String">
      <summary>Gets or sets a literal that can be a string.</summary>
    </member>
  </members>
</doc>